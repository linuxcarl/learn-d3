/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/js/app.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/css/style.css":
/*!*****************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/css/style.css ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(false);\n// Module\n___CSS_LOADER_EXPORT___.push([module.i, \"\\n.plottable-colors-0 {\\n    background-color: #5279c7; /* INDIGO */\\n  }\\n  \\n  .plottable-colors-1 {\\n    background-color: #fd373e; /* CORAL_RED */\\n  }\\n  \\n  .plottable-colors-2 {\\n    background-color: #63c261; /* FERN */\\n  }\\n  \\n  .plottable-colors-3 {\\n    background-color: #fad419; /* BRIGHT_SUN */\\n  }\\n  \\n  .plottable-colors-4 {\\n    background-color: #2c2b6f; /* JACARTA */\\n  }\\n  \\n  .plottable-colors-5 {\\n    background-color: #ff7939; /* BURNING_ORANGE */\\n  }\\n  \\n  .plottable-colors-6 {\\n    background-color: #db2e65; /* CERISE_RED */\\n  }\\n  \\n  .plottable-colors-7 {\\n    background-color: #99ce50; /* CONIFER */\\n  }\\n  \\n  .plottable-colors-8 {\\n    background-color: #962565; /* ROYAL_HEATH */\\n  }\\n  \\n  .plottable-colors-9 {\\n    background-color: #06cccc; /* ROBINS_EGG_BLUE */\\n  }\\n  \\n  svg.plottable {\\n    display : block; /* SVGs must be block elements for width/height calculations to work in Firefox. */\\n    pointer-events: visibleFill;\\n  }\\n  \\n  .plottable .background-fill {\\n    fill: none;\\n    pointer-events: none;\\n  }\\n  \\n  .plottable .bounding-box {\\n    /* Invisible pink bounding-box to allow for collision testing */\\n    fill: pink;\\n    visibility: hidden;\\n  }\\n  \\n  .plottable .label text {\\n    font-family: \\\"Helvetica Neue\\\", sans-serif;\\n    fill: #32313F;\\n  }\\n  \\n  .plottable .bar-label-text-area text {\\n    font-family: \\\"Helvetica Neue\\\", sans-serif;\\n    font-size: 14px;\\n  }\\n  \\n  .plottable .label-area text {\\n    fill: #32313F;\\n    font-family: \\\"Helvetica Neue\\\", sans-serif;\\n    font-size: 14px;\\n  }\\n  \\n  .plottable .light-label text {\\n    fill: white;\\n  }\\n  \\n  .plottable .dark-label text {\\n    fill: #32313F;\\n  }\\n  \\n  .plottable .off-bar-label text {\\n    fill: #32313F;\\n  }\\n  \\n  .plottable .stacked-bar-plot .off-bar-label {\\n    /* HACKHACK #2795: correct off-bar label logic to be implemented on StackedBar */\\n    visibility: hidden !important;\\n  }\\n  \\n  .plottable .axis-label text {\\n    font-size: 10px;\\n    font-weight: bold;\\n    letter-spacing: 1px;\\n    line-height: normal;\\n    text-transform: uppercase;\\n  }\\n  \\n  .plottable .title-label text {\\n    font-size: 20px;\\n    font-weight: bold;\\n  }\\n  \\n  .plottable .axis line.baseline {\\n    stroke: #CCC;\\n    stroke-width: 1px;\\n  }\\n  \\n  .plottable .axis line.tick-mark {\\n    stroke: #CCC;\\n    stroke-width: 1px;\\n  }\\n  \\n  .plottable .axis text {\\n    fill: #32313F;\\n    font-family: \\\"Helvetica Neue\\\", sans-serif;\\n    font-size: 12px;\\n    font-weight: 200;\\n    line-height: normal;\\n  }\\n  \\n  .plottable .axis .annotation-circle {\\n    fill: white;\\n    stroke-width: 1px;\\n    stroke: #CCC;\\n  }\\n  \\n  .plottable .axis .annotation-line {\\n    stroke: #CCC;\\n    stroke-width: 1px;\\n  }\\n  \\n  .plottable .axis .annotation-rect {\\n    stroke: #CCC;\\n    stroke-width: 1px;\\n    fill: white;\\n  }\\n  \\n  .plottable .bar-plot .baseline {\\n    stroke: #999;\\n  }\\n  \\n  .plottable .gridlines line {\\n    stroke: #3C3C3C; /* hackhack: gridlines should be solid; see #820 */\\n    opacity: 0.25;\\n    stroke-width: 1px;\\n  }\\n  \\n  .plottable .selection-box-layer .selection-area {\\n    fill: black;\\n    fill-opacity: 0.03;\\n    stroke: #CCC;\\n  }\\n  /* DragBoxLayer */\\n  .plottable .drag-box-layer.x-resizable .drag-edge-lr {\\n    cursor: ew-resize;\\n  }\\n  .plottable .drag-box-layer.y-resizable .drag-edge-tb {\\n    cursor: ns-resize;\\n  }\\n  \\n  .plottable .drag-box-layer.x-resizable.y-resizable .drag-corner-tl {\\n    cursor: nwse-resize;\\n  }\\n  .plottable .drag-box-layer.x-resizable.y-resizable .drag-corner-tr {\\n    cursor: nesw-resize;\\n  }\\n  .plottable .drag-box-layer.x-resizable.y-resizable .drag-corner-bl {\\n    cursor: nesw-resize;\\n  }\\n  .plottable .drag-box-layer.x-resizable.y-resizable .drag-corner-br {\\n    cursor: nwse-resize;\\n  }\\n  \\n  .plottable .drag-box-layer.movable .selection-area {\\n    cursor: move; /* IE fallback */\\n    cursor: -moz-grab;\\n    cursor: -webkit-grab;\\n    cursor: grab;\\n  }\\n  \\n  .plottable .drag-box-layer.movable .selection-area:active {\\n    cursor: -moz-grabbing;\\n    cursor: -webkit-grabbing;\\n    cursor: grabbing;\\n  }\\n  /* /DragBoxLayer */\\n  \\n  .plottable .guide-line-layer line.guide-line {\\n    stroke: #CCC;\\n    stroke-width: 1px;\\n  }\\n  \\n  .plottable .drag-line-layer.enabled.vertical line.drag-edge {\\n    cursor: ew-resize;\\n  }\\n  \\n  .plottable .drag-line-layer.enabled.horizontal line.drag-edge {\\n    cursor: ns-resize;\\n  }\\n  \\n  .plottable .legend text {\\n    fill: #32313F;\\n    font-family: \\\"Helvetica Neue\\\", sans-serif;\\n    font-size: 12px;\\n    font-weight: bold;\\n    line-height: normal;\\n  }\\n  \\n  .plottable .interpolated-color-legend rect.swatch-bounding-box {\\n    fill: none;\\n    stroke: #CCC;\\n    stroke-width: 1px;\\n    pointer-events: none;\\n  }\\n  \\n  .plottable .waterfall-plot line.connector {\\n    stroke: #CCC;\\n    stroke-width: 1px;\\n  }\\n  \\n  .plottable .pie-plot .arc.outline {\\n    stroke-linejoin: round;\\n  }\\n  \", \"\"]);\n// Exports\n/* harmony default export */ __webpack_exports__[\"default\"] = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack:///./src/css/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (useSourceMap) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item, useSourceMap);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join('');\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === 'string') {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, '']];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n  var content = item[1] || ''; // eslint-disable-next-line prefer-destructuring\n\n  var cssMapping = item[3];\n\n  if (!cssMapping) {\n    return content;\n  }\n\n  if (useSourceMap && typeof btoa === 'function') {\n    var sourceMapping = toComment(cssMapping);\n    var sourceURLs = cssMapping.sources.map(function (source) {\n      return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || '').concat(source, \" */\");\n    });\n    return [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n  }\n\n  return [content].join('\\n');\n} // Adapted from convert-source-map (MIT)\n\n\nfunction toComment(sourceMap) {\n  // eslint-disable-next-line no-undef\n  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n  var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\n  return \"/*# \".concat(data, \" */\");\n}\n\n//# sourceURL=webpack:///./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/d3/d3.js":
/*!*******************************!*\
  !*** ./node_modules/d3/d3.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (true) this.d3 = d3, !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else {}\n}();\n\n//# sourceURL=webpack:///./node_modules/d3/d3.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/animators/easingAnimator.js":
/*!**********************************************************************!*\
  !*** ./node_modules/plottable/build/src/animators/easingAnimator.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * An Animator with easing and configurable durations and delays.\n */\nvar Easing = (function () {\n    /**\n     * Constructs the default animator\n     *\n     * @constructor\n     */\n    function Easing() {\n        this._startDelay = Easing._DEFAULT_START_DELAY_MILLISECONDS;\n        this._stepDuration = Easing._DEFAULT_STEP_DURATION_MILLISECONDS;\n        this._stepDelay = Easing._DEFAULT_ITERATIVE_DELAY_MILLISECONDS;\n        this._maxTotalDuration = Easing._DEFAULT_MAX_TOTAL_DURATION_MILLISECONDS;\n        this._easingMode = Easing._DEFAULT_EASING_MODE;\n    }\n    Easing.prototype.totalTime = function (numberOfSteps) {\n        var adjustedIterativeDelay = this._getAdjustedIterativeDelay(numberOfSteps);\n        return this.startDelay() + adjustedIterativeDelay * (Math.max(numberOfSteps - 1, 0)) + this.stepDuration();\n    };\n    Easing.prototype.animate = function (selection, attrToAppliedProjector) {\n        var _this = this;\n        var numberOfSteps = selection[0].length;\n        var adjustedIterativeDelay = this._getAdjustedIterativeDelay(numberOfSteps);\n        return selection.transition()\n            .ease(this.easingMode())\n            .duration(this.stepDuration())\n            .delay(function (d, i) { return _this.startDelay() + adjustedIterativeDelay * i; })\n            .attr(attrToAppliedProjector);\n    };\n    Easing.prototype.startDelay = function (startDelay) {\n        if (startDelay == null) {\n            return this._startDelay;\n        }\n        else {\n            this._startDelay = startDelay;\n            return this;\n        }\n    };\n    Easing.prototype.stepDuration = function (stepDuration) {\n        if (stepDuration == null) {\n            return Math.min(this._stepDuration, this._maxTotalDuration);\n        }\n        else {\n            this._stepDuration = stepDuration;\n            return this;\n        }\n    };\n    Easing.prototype.stepDelay = function (stepDelay) {\n        if (stepDelay == null) {\n            return this._stepDelay;\n        }\n        else {\n            this._stepDelay = stepDelay;\n            return this;\n        }\n    };\n    Easing.prototype.maxTotalDuration = function (maxTotalDuration) {\n        if (maxTotalDuration == null) {\n            return this._maxTotalDuration;\n        }\n        else {\n            this._maxTotalDuration = maxTotalDuration;\n            return this;\n        }\n    };\n    Easing.prototype.easingMode = function (easingMode) {\n        if (easingMode == null) {\n            return this._easingMode;\n        }\n        else {\n            this._easingMode = easingMode;\n            return this;\n        }\n    };\n    /**\n     * Adjust the iterative delay, such that it takes into account the maxTotalDuration constraint\n     */\n    Easing.prototype._getAdjustedIterativeDelay = function (numberOfSteps) {\n        var stepStartTimeInterval = this.maxTotalDuration() - this.stepDuration();\n        stepStartTimeInterval = Math.max(stepStartTimeInterval, 0);\n        var maxPossibleIterativeDelay = stepStartTimeInterval / Math.max(numberOfSteps - 1, 1);\n        return Math.min(this.stepDelay(), maxPossibleIterativeDelay);\n    };\n    /**\n     * The default starting delay of the animation in milliseconds\n     */\n    Easing._DEFAULT_START_DELAY_MILLISECONDS = 0;\n    /**\n     * The default duration of one animation step in milliseconds\n     */\n    Easing._DEFAULT_STEP_DURATION_MILLISECONDS = 300;\n    /**\n     * The default maximum start delay between each step of an animation\n     */\n    Easing._DEFAULT_ITERATIVE_DELAY_MILLISECONDS = 15;\n    /**\n     * The default maximum total animation duration\n     */\n    Easing._DEFAULT_MAX_TOTAL_DURATION_MILLISECONDS = Infinity;\n    /**\n     * The default easing of the animation\n     */\n    Easing._DEFAULT_EASING_MODE = \"exp-out\";\n    return Easing;\n}());\nexports.Easing = Easing;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/animators/easingAnimator.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/animators/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/plottable/build/src/animators/index.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./easingAnimator */ \"./node_modules/plottable/build/src/animators/easingAnimator.js\"));\n__export(__webpack_require__(/*! ./nullAnimator */ \"./node_modules/plottable/build/src/animators/nullAnimator.js\"));\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/animators/index.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/animators/nullAnimator.js":
/*!********************************************************************!*\
  !*** ./node_modules/plottable/build/src/animators/nullAnimator.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * An animator implementation with no animation. The attributes are\n * immediately set on the selection.\n */\nvar Null = (function () {\n    function Null() {\n    }\n    Null.prototype.totalTime = function (selection) {\n        return 0;\n    };\n    Null.prototype.animate = function (selection, attrToAppliedProjector) {\n        return selection.attr(attrToAppliedProjector);\n    };\n    return Null;\n}());\nexports.Null = Null;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/animators/nullAnimator.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/axes/axis.js":
/*!*******************************************************!*\
  !*** ./node_modules/plottable/build/src/axes/axis.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar SVGTypewriter = __webpack_require__(/*! svg-typewriter */ \"./node_modules/svg-typewriter/build/src/index.js\");\nvar component_1 = __webpack_require__(/*! ../components/component */ \"./node_modules/plottable/build/src/components/component.js\");\nvar Formatters = __webpack_require__(/*! ../core/formatters */ \"./node_modules/plottable/build/src/core/formatters.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Axis = (function (_super) {\n    __extends(Axis, _super);\n    /**\n     * Constructs an Axis.\n     * An Axis is a visual representation of a Scale.\n     *\n     * @constructor\n     * @param {Scale} scale\n     * @param {AxisOrientation} orientation Orientation of this Axis.\n     */\n    function Axis(scale, orientation) {\n        var _this = this;\n        _super.call(this);\n        this._endTickLength = 5;\n        this._innerTickLength = 5;\n        this._tickLabelPadding = 10;\n        this._margin = 15;\n        this._showEndTickLabels = false;\n        this._annotationsEnabled = false;\n        this._annotationTierCount = 1;\n        if (scale == null || orientation == null) {\n            throw new Error(\"Axis requires a scale and orientation\");\n        }\n        this._scale = scale;\n        this.orientation(orientation);\n        this._setDefaultAlignment();\n        this.addClass(\"axis\");\n        if (this.isHorizontal()) {\n            this.addClass(\"x-axis\");\n        }\n        else {\n            this.addClass(\"y-axis\");\n        }\n        this.formatter(Formatters.identity());\n        this._rescaleCallback = function (newScale) { return _this._rescale(); };\n        this._scale.onUpdate(this._rescaleCallback);\n        this._annotatedTicks = [];\n        this._annotationFormatter = Formatters.identity();\n    }\n    Axis.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this._scale.offUpdate(this._rescaleCallback);\n    };\n    Axis.prototype._computeWidth = function () {\n        // to be overridden by subclass logic\n        return this._maxLabelTickLength();\n    };\n    Axis.prototype._computeHeight = function () {\n        // to be overridden by subclass logic\n        return this._maxLabelTickLength();\n    };\n    Axis.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\n        var requestedWidth = 0;\n        var requestedHeight = 0;\n        if (this.isHorizontal()) {\n            requestedHeight = this._computeHeight() + this._margin;\n            if (this.annotationsEnabled()) {\n                var tierHeight = this._annotationMeasurer.measure().height + 2 * Axis._ANNOTATION_LABEL_PADDING;\n                requestedHeight += tierHeight * this.annotationTierCount();\n            }\n        }\n        else {\n            requestedWidth = this._computeWidth() + this._margin;\n            if (this.annotationsEnabled()) {\n                var tierHeight = this._annotationMeasurer.measure().height + 2 * Axis._ANNOTATION_LABEL_PADDING;\n                requestedWidth += tierHeight * this.annotationTierCount();\n            }\n        }\n        return {\n            minWidth: requestedWidth,\n            minHeight: requestedHeight,\n        };\n    };\n    Axis.prototype.fixedHeight = function () {\n        return this.isHorizontal();\n    };\n    Axis.prototype.fixedWidth = function () {\n        return !this.isHorizontal();\n    };\n    Axis.prototype._rescale = function () {\n        // default implementation; subclasses may call redraw() here\n        this.render();\n    };\n    Axis.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\n        if (this.isHorizontal()) {\n            this._scale.range([0, this.width()]);\n        }\n        else {\n            this._scale.range([this.height(), 0]);\n        }\n        return this;\n    };\n    Axis.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._tickMarkContainer = this.content().append(\"g\")\n            .classed(Axis.TICK_MARK_CLASS + \"-container\", true);\n        this._tickLabelContainer = this.content().append(\"g\")\n            .classed(Axis.TICK_LABEL_CLASS + \"-container\", true);\n        this._baseline = this.content().append(\"line\").classed(\"baseline\", true);\n        this._annotationContainer = this.content().append(\"g\")\n            .classed(\"annotation-container\", true);\n        this._annotationContainer.append(\"g\").classed(\"annotation-line-container\", true);\n        this._annotationContainer.append(\"g\").classed(\"annotation-circle-container\", true);\n        this._annotationContainer.append(\"g\").classed(\"annotation-rect-container\", true);\n        var annotationLabelContainer = this._annotationContainer.append(\"g\").classed(\"annotation-label-container\", true);\n        this._annotationMeasurer = new SVGTypewriter.CacheMeasurer(annotationLabelContainer);\n        this._annotationWriter = new SVGTypewriter.Writer(this._annotationMeasurer);\n    };\n    /*\n     * Function for generating tick values in data-space (as opposed to pixel values).\n     * To be implemented by subclasses.\n     */\n    Axis.prototype._getTickValues = function () {\n        return [];\n    };\n    /**\n     * Render tick marks, baseline, and annotations. Should be super called by subclasses and then overridden to draw\n     * other relevant aspects of this Axis.\n     */\n    Axis.prototype.renderImmediately = function () {\n        var tickMarkValues = this._getTickValues();\n        var tickMarks = this._tickMarkContainer.selectAll(\".\" + Axis.TICK_MARK_CLASS).data(tickMarkValues);\n        tickMarks.enter().append(\"line\").classed(Axis.TICK_MARK_CLASS, true);\n        tickMarks.attr(this._generateTickMarkAttrHash());\n        d3.select(tickMarks[0][0]).classed(Axis.END_TICK_MARK_CLASS, true)\n            .attr(this._generateTickMarkAttrHash(true));\n        d3.select(tickMarks[0][tickMarkValues.length - 1]).classed(Axis.END_TICK_MARK_CLASS, true)\n            .attr(this._generateTickMarkAttrHash(true));\n        tickMarks.exit().remove();\n        this._baseline.attr(this._generateBaselineAttrHash());\n        if (this.annotationsEnabled()) {\n            this._drawAnnotations();\n        }\n        else {\n            this._removeAnnotations();\n        }\n        return this;\n    };\n    Axis.prototype.annotatedTicks = function (annotatedTicks) {\n        if (annotatedTicks == null) {\n            return this._annotatedTicks;\n        }\n        this._annotatedTicks = annotatedTicks;\n        this.render();\n        return this;\n    };\n    Axis.prototype.annotationFormatter = function (annotationFormatter) {\n        if (annotationFormatter == null) {\n            return this._annotationFormatter;\n        }\n        this._annotationFormatter = annotationFormatter;\n        this.render();\n        return this;\n    };\n    Axis.prototype.annotationsEnabled = function (annotationsEnabled) {\n        if (annotationsEnabled == null) {\n            return this._annotationsEnabled;\n        }\n        this._annotationsEnabled = annotationsEnabled;\n        this.redraw();\n        return this;\n    };\n    Axis.prototype.annotationTierCount = function (annotationTierCount) {\n        if (annotationTierCount == null) {\n            return this._annotationTierCount;\n        }\n        if (annotationTierCount < 0) {\n            throw new Error(\"annotationTierCount cannot be negative\");\n        }\n        this._annotationTierCount = annotationTierCount;\n        this.redraw();\n        return this;\n    };\n    Axis.prototype._drawAnnotations = function () {\n        var _this = this;\n        var labelPadding = Axis._ANNOTATION_LABEL_PADDING;\n        var measurements = new Utils.Map();\n        var annotatedTicks = this._annotatedTicksToRender();\n        annotatedTicks.forEach(function (annotatedTick) {\n            var measurement = _this._annotationMeasurer.measure(_this.annotationFormatter()(annotatedTick));\n            var paddedMeasurement = {\n                width: measurement.width + 2 * labelPadding,\n                height: measurement.height + 2 * labelPadding\n            };\n            measurements.set(annotatedTick, paddedMeasurement);\n        });\n        var tierHeight = this._annotationMeasurer.measure().height + 2 * labelPadding;\n        var annotationToTier = this._annotationToTier(measurements);\n        var hiddenAnnotations = new Utils.Set();\n        var axisHeight = this.isHorizontal() ? this.height() : this.width();\n        var axisHeightWithoutMarginAndAnnotations = this._coreSize();\n        var numTiers = Math.min(this.annotationTierCount(), Math.floor((axisHeight - axisHeightWithoutMarginAndAnnotations) / tierHeight));\n        annotationToTier.forEach(function (tier, annotation) {\n            if (tier === -1 || tier >= numTiers) {\n                hiddenAnnotations.add(annotation);\n            }\n        });\n        var bindElements = function (selection, elementName, className) {\n            var elements = selection.selectAll(\".\" + className).data(annotatedTicks);\n            elements.enter().append(elementName).classed(className, true);\n            elements.exit().remove();\n            return elements;\n        };\n        var offsetF = function (d) {\n            switch (_this.orientation()) {\n                case \"bottom\":\n                case \"right\":\n                    return annotationToTier.get(d) * tierHeight + axisHeightWithoutMarginAndAnnotations;\n                case \"top\":\n                case \"left\":\n                    return axisHeight - axisHeightWithoutMarginAndAnnotations - annotationToTier.get(d) * tierHeight;\n            }\n        };\n        var positionF = function (d) { return _this._scale.scale(d); };\n        var visibilityF = function (d) { return hiddenAnnotations.has(d) ? \"hidden\" : \"visible\"; };\n        var secondaryPosition;\n        switch (this.orientation()) {\n            case \"bottom\":\n            case \"right\":\n                secondaryPosition = 0;\n                break;\n            case \"top\":\n                secondaryPosition = this.height();\n                break;\n            case \"left\":\n                secondaryPosition = this.width();\n                break;\n        }\n        var isHorizontal = this.isHorizontal();\n        bindElements(this._annotationContainer.select(\".annotation-line-container\"), \"line\", Axis.ANNOTATION_LINE_CLASS)\n            .attr({\n            x1: isHorizontal ? positionF : secondaryPosition,\n            x2: isHorizontal ? positionF : offsetF,\n            y1: isHorizontal ? secondaryPosition : positionF,\n            y2: isHorizontal ? offsetF : positionF,\n            visibility: visibilityF,\n        });\n        bindElements(this._annotationContainer.select(\".annotation-circle-container\"), \"circle\", Axis.ANNOTATION_CIRCLE_CLASS)\n            .attr({\n            cx: isHorizontal ? positionF : secondaryPosition,\n            cy: isHorizontal ? secondaryPosition : positionF,\n            r: 3,\n        });\n        var rectangleOffsetF = function (d) {\n            switch (_this.orientation()) {\n                case \"bottom\":\n                case \"right\":\n                    return offsetF(d);\n                case \"top\":\n                case \"left\":\n                    return offsetF(d) - measurements.get(d).height;\n            }\n        };\n        bindElements(this._annotationContainer.select(\".annotation-rect-container\"), \"rect\", Axis.ANNOTATION_RECT_CLASS)\n            .attr({\n            x: isHorizontal ? positionF : rectangleOffsetF,\n            y: isHorizontal ? rectangleOffsetF : positionF,\n            width: isHorizontal ? function (d) { return measurements.get(d).width; } : function (d) { return measurements.get(d).height; },\n            height: isHorizontal ? function (d) { return measurements.get(d).height; } : function (d) { return measurements.get(d).width; },\n            visibility: visibilityF,\n        });\n        var annotationWriter = this._annotationWriter;\n        var annotationFormatter = this.annotationFormatter();\n        var annotationLabels = bindElements(this._annotationContainer.select(\".annotation-label-container\"), \"g\", Axis.ANNOTATION_LABEL_CLASS);\n        annotationLabels.selectAll(\".text-container\").remove();\n        annotationLabels.attr({\n            transform: function (d) {\n                var xTranslate = isHorizontal ? positionF(d) : rectangleOffsetF(d);\n                var yTranslate = isHorizontal ? rectangleOffsetF(d) : positionF(d);\n                return \"translate(\" + xTranslate + \",\" + yTranslate + \")\";\n            },\n            visibility: visibilityF,\n        })\n            .each(function (annotationLabel) {\n            var writeOptions = {\n                selection: d3.select(this),\n                xAlign: \"center\",\n                yAlign: \"center\",\n                textRotation: isHorizontal ? 0 : 90,\n            };\n            annotationWriter.write(annotationFormatter(annotationLabel), isHorizontal ? measurements.get(annotationLabel).width : measurements.get(annotationLabel).height, isHorizontal ? measurements.get(annotationLabel).height : measurements.get(annotationLabel).width, writeOptions);\n        });\n    };\n    Axis.prototype._annotatedTicksToRender = function () {\n        var _this = this;\n        var scaleRange = this._scale.range();\n        return Utils.Array.uniq(this.annotatedTicks().filter(function (tick) {\n            if (tick == null) {\n                return false;\n            }\n            return Utils.Math.inRange(_this._scale.scale(tick), scaleRange[0], scaleRange[1]);\n        }));\n    };\n    /**\n     * Retrieves the size of the core pieces.\n     *\n     * The core pieces include the labels, the end tick marks, the inner tick marks, and the tick label padding.\n     */\n    Axis.prototype._coreSize = function () {\n        var relevantDimension = this.isHorizontal() ? this.height() : this.width();\n        var axisHeightWithoutMargin = this.isHorizontal() ? this._computeHeight() : this._computeWidth();\n        return Math.min(axisHeightWithoutMargin, relevantDimension);\n    };\n    Axis.prototype._annotationTierHeight = function () {\n        return this._annotationMeasurer.measure().height + 2 * Axis._ANNOTATION_LABEL_PADDING;\n    };\n    Axis.prototype._annotationToTier = function (measurements) {\n        var _this = this;\n        var annotationTiers = [[]];\n        var annotationToTier = new Utils.Map();\n        var dimension = this.isHorizontal() ? this.width() : this.height();\n        this._annotatedTicksToRender().forEach(function (annotatedTick) {\n            var position = _this._scale.scale(annotatedTick);\n            var length = measurements.get(annotatedTick).width;\n            if (position < 0 || position + length > dimension) {\n                annotationToTier.set(annotatedTick, -1);\n                return;\n            }\n            var tierHasCollision = function (testTier) { return annotationTiers[testTier].some(function (testTick) {\n                var testPosition = _this._scale.scale(testTick);\n                var testLength = measurements.get(testTick).width;\n                return position + length >= testPosition && position <= testPosition + testLength;\n            }); };\n            var tier = 0;\n            while (tierHasCollision(tier)) {\n                tier++;\n                if (annotationTiers.length === tier) {\n                    annotationTiers.push([]);\n                }\n            }\n            annotationTiers[tier].push(annotatedTick);\n            annotationToTier.set(annotatedTick, tier);\n        });\n        return annotationToTier;\n    };\n    Axis.prototype._removeAnnotations = function () {\n        this._annotationContainer.selectAll(\".annotation-line\").remove();\n        this._annotationContainer.selectAll(\".annotation-circle\").remove();\n        this._annotationContainer.selectAll(\".annotation-rect\").remove();\n        this._annotationContainer.selectAll(\".annotation-label\").remove();\n    };\n    Axis.prototype._generateBaselineAttrHash = function () {\n        var baselineAttrHash = {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n        };\n        switch (this._orientation) {\n            case \"bottom\":\n                baselineAttrHash[\"x2\"] = this.width();\n                break;\n            case \"top\":\n                baselineAttrHash[\"x2\"] = this.width();\n                baselineAttrHash[\"y1\"] = this.height();\n                baselineAttrHash[\"y2\"] = this.height();\n                break;\n            case \"left\":\n                baselineAttrHash[\"x1\"] = this.width();\n                baselineAttrHash[\"x2\"] = this.width();\n                baselineAttrHash[\"y2\"] = this.height();\n                break;\n            case \"right\":\n                baselineAttrHash[\"y2\"] = this.height();\n                break;\n        }\n        return baselineAttrHash;\n    };\n    Axis.prototype._generateTickMarkAttrHash = function (isEndTickMark) {\n        var _this = this;\n        if (isEndTickMark === void 0) { isEndTickMark = false; }\n        var tickMarkAttrHash = {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n        };\n        var scalingFunction = function (d) { return _this._scale.scale(d); };\n        if (this.isHorizontal()) {\n            tickMarkAttrHash[\"x1\"] = scalingFunction;\n            tickMarkAttrHash[\"x2\"] = scalingFunction;\n        }\n        else {\n            tickMarkAttrHash[\"y1\"] = scalingFunction;\n            tickMarkAttrHash[\"y2\"] = scalingFunction;\n        }\n        var tickLength = isEndTickMark ? this._endTickLength : this._innerTickLength;\n        switch (this._orientation) {\n            case \"bottom\":\n                tickMarkAttrHash[\"y2\"] = tickLength;\n                break;\n            case \"top\":\n                tickMarkAttrHash[\"y1\"] = this.height();\n                tickMarkAttrHash[\"y2\"] = this.height() - tickLength;\n                break;\n            case \"left\":\n                tickMarkAttrHash[\"x1\"] = this.width();\n                tickMarkAttrHash[\"x2\"] = this.width() - tickLength;\n                break;\n            case \"right\":\n                tickMarkAttrHash[\"x2\"] = tickLength;\n                break;\n        }\n        return tickMarkAttrHash;\n    };\n    Axis.prototype._setDefaultAlignment = function () {\n        switch (this._orientation) {\n            case \"bottom\":\n                this.yAlignment(\"top\");\n                break;\n            case \"top\":\n                this.yAlignment(\"bottom\");\n                break;\n            case \"left\":\n                this.xAlignment(\"right\");\n                break;\n            case \"right\":\n                this.xAlignment(\"left\");\n                break;\n        }\n    };\n    /**\n     * Get whether this axis is horizontal (orientation is \"top\" or \"bottom\") or vertical.\n     * @returns {boolean} - true for horizontal, false for vertical.\n     */\n    Axis.prototype.isHorizontal = function () {\n        return this._orientation === \"top\" || this._orientation === \"bottom\";\n    };\n    /**\n     * Get the scale that this axis is associated with.\n     * @returns {Scale<D, number>}\n     */\n    Axis.prototype.getScale = function () {\n        return this._scale;\n    };\n    Axis.prototype.formatter = function (formatter) {\n        if (formatter == null) {\n            return this._formatter;\n        }\n        this._formatter = formatter;\n        this.redraw();\n        return this;\n    };\n    Axis.prototype.innerTickLength = function (length) {\n        if (length == null) {\n            return this._innerTickLength;\n        }\n        else {\n            if (length < 0) {\n                throw new Error(\"inner tick length must be positive\");\n            }\n            this._innerTickLength = length;\n            this.redraw();\n            return this;\n        }\n    };\n    Axis.prototype.endTickLength = function (length) {\n        if (length == null) {\n            return this._endTickLength;\n        }\n        else {\n            if (length < 0) {\n                throw new Error(\"end tick length must be positive\");\n            }\n            this._endTickLength = length;\n            this.redraw();\n            return this;\n        }\n    };\n    /**\n     * Gets the maximum pixel length over all ticks on this axis.\n     * @returns {number}\n     */\n    Axis.prototype._maxLabelTickLength = function () {\n        if (this.showEndTickLabels()) {\n            return Math.max(this.innerTickLength(), this.endTickLength());\n        }\n        else {\n            return this.innerTickLength();\n        }\n    };\n    Axis.prototype.tickLabelPadding = function (padding) {\n        if (padding == null) {\n            return this._tickLabelPadding;\n        }\n        else {\n            if (padding < 0) {\n                throw new Error(\"tick label padding must be positive\");\n            }\n            this._tickLabelPadding = padding;\n            this.redraw();\n            return this;\n        }\n    };\n    Axis.prototype.margin = function (size) {\n        if (size == null) {\n            return this._margin;\n        }\n        else {\n            if (size < 0) {\n                throw new Error(\"margin size must be positive\");\n            }\n            this._margin = size;\n            this.redraw();\n            return this;\n        }\n    };\n    Axis.prototype.orientation = function (orientation) {\n        if (orientation == null) {\n            return this._orientation;\n        }\n        else {\n            // ensure backwards compatibility for older versions that supply orientation in different cases\n            var newOrientationLC = orientation.toLowerCase();\n            if (newOrientationLC !== \"top\" &&\n                newOrientationLC !== \"bottom\" &&\n                newOrientationLC !== \"left\" &&\n                newOrientationLC !== \"right\") {\n                throw new Error(\"unsupported orientation\");\n            }\n            this._orientation = newOrientationLC;\n            this.redraw();\n            return this;\n        }\n    };\n    Axis.prototype.showEndTickLabels = function (show) {\n        if (show == null) {\n            return this._showEndTickLabels;\n        }\n        this._showEndTickLabels = show;\n        this.render();\n        return this;\n    };\n    Axis.prototype._showAllTickMarks = function () {\n        this._tickMarkContainer.selectAll(\".\" + Axis.TICK_MARK_CLASS)\n            .each(function () {\n            d3.select(this).style(\"visibility\", \"inherit\");\n        });\n    };\n    Axis.prototype._showAllTickLabels = function () {\n        this._tickLabelContainer.selectAll(\".\" + Axis.TICK_LABEL_CLASS)\n            .each(function () {\n            d3.select(this).style(\"visibility\", \"inherit\");\n        });\n    };\n    /**\n     * Responsible for hiding any tick labels that break out of the bounding\n     * container.\n     */\n    Axis.prototype._hideOverflowingTickLabels = function () {\n        var boundingBox = this._boundingBox.node().getBoundingClientRect();\n        var tickLabels = this._tickLabelContainer.selectAll(\".\" + Axis.TICK_LABEL_CLASS);\n        if (tickLabels.empty()) {\n            return;\n        }\n        tickLabels.each(function (d, i) {\n            if (!Utils.DOM.clientRectInside(this.getBoundingClientRect(), boundingBox)) {\n                d3.select(this).style(\"visibility\", \"hidden\");\n            }\n        });\n    };\n    /**\n     * Hides the Tick Marks which have no corresponding Tick Labels\n     */\n    Axis.prototype._hideTickMarksWithoutLabel = function () {\n        var visibleTickMarks = this._tickMarkContainer.selectAll(\".\" + Axis.TICK_MARK_CLASS);\n        var visibleTickLabels = this._tickLabelContainer\n            .selectAll(\".\" + Axis.TICK_LABEL_CLASS)\n            .filter(function (d, i) {\n            var visibility = d3.select(this).style(\"visibility\");\n            return (visibility === \"inherit\") || (visibility === \"visible\");\n        });\n        var labelNumbersShown = [];\n        visibleTickLabels.each(function (labelNumber) { return labelNumbersShown.push(labelNumber); });\n        visibleTickMarks.each(function (e, i) {\n            if (labelNumbersShown.indexOf(e) === -1) {\n                d3.select(this).style(\"visibility\", \"hidden\");\n            }\n        });\n    };\n    /**\n     * The css class applied to each end tick mark (the line on the end tick).\n     */\n    Axis.END_TICK_MARK_CLASS = \"end-tick-mark\";\n    /**\n     * The css class applied to each tick mark (the line on the tick).\n     */\n    Axis.TICK_MARK_CLASS = \"tick-mark\";\n    /**\n     * The css class applied to each tick label (the text associated with the tick).\n     */\n    Axis.TICK_LABEL_CLASS = \"tick-label\";\n    /**\n     * The css class applied to each annotation line, which extends from the axis to the rect.\n     */\n    Axis.ANNOTATION_LINE_CLASS = \"annotation-line\";\n    /**\n     * The css class applied to each annotation rect, which surrounds the annotation label.\n     */\n    Axis.ANNOTATION_RECT_CLASS = \"annotation-rect\";\n    /**\n     * The css class applied to each annotation circle, which denotes which tick is being annotated.\n     */\n    Axis.ANNOTATION_CIRCLE_CLASS = \"annotation-circle\";\n    /**\n     * The css class applied to each annotation label, which shows the formatted annotation text.\n     */\n    Axis.ANNOTATION_LABEL_CLASS = \"annotation-label\";\n    Axis._ANNOTATION_LABEL_PADDING = 4;\n    return Axis;\n}(component_1.Component));\nexports.Axis = Axis;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/axes/axis.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/axes/categoryAxis.js":
/*!***************************************************************!*\
  !*** ./node_modules/plottable/build/src/axes/categoryAxis.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar SVGTypewriter = __webpack_require__(/*! svg-typewriter */ \"./node_modules/svg-typewriter/build/src/index.js\");\nvar axis_1 = __webpack_require__(/*! ./axis */ \"./node_modules/plottable/build/src/axes/axis.js\");\nvar Scales = __webpack_require__(/*! ../scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Category = (function (_super) {\n    __extends(Category, _super);\n    /**\n     * Constructs a Category Axis.\n     *\n     * A Category Axis is a visual representation of a Category Scale.\n     *\n     * @constructor\n     * @param {Scales.Category} scale\n     * @param {AxisOrientation} [orientation=\"bottom\"] Orientation of this Category Axis.\n     */\n    function Category(scale, orientation) {\n        if (orientation === void 0) { orientation = \"bottom\"; }\n        _super.call(this, scale, orientation);\n        this._tickLabelAngle = 0;\n        this.addClass(\"category-axis\");\n    }\n    Object.defineProperty(Category.prototype, \"_wrapper\", {\n        /**\n         * A Wrapper configured according to the other properties on this axis.\n         * @returns {SVGTypewriter.Wrapper}\n         */\n        get: function () {\n            var wrapper = new SVGTypewriter.Wrapper();\n            if (this._tickLabelMaxLines != null) {\n                wrapper.maxLines(this._tickLabelMaxLines);\n            }\n            return wrapper;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Category.prototype, \"_writer\", {\n        /**\n         * A Writer attached to this measurer and wrapper.\n         * @returns {SVGTypewriter.Writer}\n         */\n        get: function () {\n            return new SVGTypewriter.Writer(this._measurer, this._wrapper);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Category.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._measurer = new SVGTypewriter.CacheMeasurer(this._tickLabelContainer);\n    };\n    Category.prototype._rescale = function () {\n        return this.redraw();\n    };\n    /**\n     * Compute space requirements for this Category Axis. Category Axes have two primary space requirements:\n     *\n     * 1) width/height needed by the tick lines (including annotations, padding, and margins).\n     * 2) width/height needed by the tick text.\n     *\n     * We requested space is the sum of the lines and text.\n     * @param offeredWidth\n     * @param offeredHeight\n     * @returns {any}\n     */\n    Category.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\n        var widthRequiredByTicks = this.isHorizontal() ? 0 : this._tickSpaceRequired() + this.margin();\n        var heightRequiredByTicks = this.isHorizontal() ? this._tickSpaceRequired() + this.margin() : 0;\n        if (this._scale.domain().length === 0) {\n            return {\n                minWidth: 0,\n                minHeight: 0,\n            };\n        }\n        if (this.annotationsEnabled()) {\n            var tierTotalHeight = this._annotationTierHeight() * this.annotationTierCount();\n            if (this.isHorizontal()) {\n                heightRequiredByTicks += tierTotalHeight;\n            }\n            else {\n                widthRequiredByTicks += tierTotalHeight;\n            }\n        }\n        var measureResult = this._measureTickLabels(offeredWidth, offeredHeight);\n        return {\n            minWidth: measureResult.usedWidth + widthRequiredByTicks,\n            minHeight: measureResult.usedHeight + heightRequiredByTicks,\n        };\n    };\n    Category.prototype._coreSize = function () {\n        var relevantDimension = this.isHorizontal() ? this.height() : this.width();\n        var relevantRequestedSpaceDimension = this.isHorizontal() ?\n            this.requestedSpace(this.width(), this.height()).minHeight :\n            this.requestedSpace(this.width(), this.height()).minWidth;\n        var marginAndAnnotationSize = this.margin() + this._annotationTierHeight();\n        var axisHeightWithoutMargin = relevantRequestedSpaceDimension - marginAndAnnotationSize;\n        return Math.min(axisHeightWithoutMargin, relevantDimension);\n    };\n    Category.prototype._getTickValues = function () {\n        return this.getDownsampleInfo().domain;\n    };\n    /**\n     * Take the scale and drop ticks at regular intervals such that the resultant ticks are all a reasonable minimum\n     * distance apart. Return the resultant ticks to render, as well as the new stepWidth between them.\n     *\n     * @param {Scales.Category} scale - The scale being downsampled. Defaults to this Axis' scale.\n     * @return {DownsampleInfo} an object holding the resultant domain and new stepWidth.\n     */\n    Category.prototype.getDownsampleInfo = function (scale) {\n        if (scale === void 0) { scale = this._scale; }\n        var downsampleRatio = Math.ceil(Category._MINIMUM_WIDTH_PER_LABEL_PX / scale.stepWidth());\n        return {\n            domain: scale.domain().filter(function (d, i) { return i % downsampleRatio === 0; }),\n            stepWidth: downsampleRatio * scale.stepWidth(),\n        };\n    };\n    Category.prototype.tickLabelAngle = function (angle) {\n        if (angle == null) {\n            return this._tickLabelAngle;\n        }\n        if (angle !== 0 && angle !== 90 && angle !== -90) {\n            throw new Error(\"Angle \" + angle + \" not supported; only 0, 90, and -90 are valid values\");\n        }\n        this._tickLabelAngle = angle;\n        this.redraw();\n        return this;\n    };\n    /**\n     * Set or get the tick label's max width on this axis. When set, tick labels will be truncated with ellipsis to be\n     * at most `tickLabelMaxWidth()` pixels wide. This ensures the axis doesn't grow to an undesirable width.\n     *\n     * Passing no arguments retrieves the value, while passing a number sets the value. Pass undefined to un-set the max\n     * width.\n     * @param maxWidth\n     * @returns {number | this}\n     */\n    Category.prototype.tickLabelMaxWidth = function (maxWidth) {\n        // allow user to un-set tickLabelMaxWidth by passing in null or undefined explicitly\n        if (arguments.length === 0) {\n            return this._tickLabelMaxWidth;\n        }\n        this._tickLabelMaxWidth = maxWidth;\n        this.redraw();\n        return this;\n    };\n    /**\n     * Set or get the tick label's max number of wrapped lines on this axis. By default, a Category Axis will line-wrap\n     * long tick labels onto multiple lines in order to fit the width of the axis. When set, long tick labels will be\n     * rendered on at most `tickLabelMaxLines()` lines. This ensures the axis doesn't grow to an undesirable height.\n     *\n     * Passing no arguments retrieves the value, while passing a number sets the value. Pass undefined to un-set the\n     * max lines.\n     * @param maxLines\n     * @returns {number | this}\n     */\n    Category.prototype.tickLabelMaxLines = function (maxLines) {\n        // allow user to un-set tickLabelMaxLines by passing in null or undefined explicitly\n        if (arguments.length === 0) {\n            return this._tickLabelMaxLines;\n        }\n        this._tickLabelMaxLines = maxLines;\n        this.redraw();\n        return this;\n    };\n    /**\n     * Return the space required by the ticks, padding included.\n     * @returns {number}\n     */\n    Category.prototype._tickSpaceRequired = function () {\n        return this._maxLabelTickLength() + this.tickLabelPadding();\n    };\n    /**\n     * Write ticks to the DOM.\n     * @param {Plottable.Scales.Category} scale The scale this axis is representing.\n     * @param {d3.Selection} ticks The tick elements to write.\n     */\n    Category.prototype._drawTicks = function (stepWidth, ticks) {\n        var self = this;\n        var xAlign;\n        var yAlign;\n        switch (this.tickLabelAngle()) {\n            case 0:\n                xAlign = { left: \"right\", right: \"left\", top: \"center\", bottom: \"center\" };\n                yAlign = { left: \"center\", right: \"center\", top: \"bottom\", bottom: \"top\" };\n                break;\n            case 90:\n                xAlign = { left: \"center\", right: \"center\", top: \"right\", bottom: \"left\" };\n                yAlign = { left: \"top\", right: \"bottom\", top: \"center\", bottom: \"center\" };\n                break;\n            case -90:\n                xAlign = { left: \"center\", right: \"center\", top: \"left\", bottom: \"right\" };\n                yAlign = { left: \"bottom\", right: \"top\", top: \"center\", bottom: \"center\" };\n                break;\n        }\n        ticks.each(function (d) {\n            var width = self.isHorizontal() ? stepWidth : self.width() - self._tickSpaceRequired();\n            var height = self.isHorizontal() ? self.height() - self._tickSpaceRequired() : stepWidth;\n            var writeOptions = {\n                selection: d3.select(this),\n                xAlign: xAlign[self.orientation()],\n                yAlign: yAlign[self.orientation()],\n                textRotation: self.tickLabelAngle(),\n            };\n            if (self._tickLabelMaxWidth != null) {\n                // for left-oriented axes, we must move the ticks by the amount we've cut off in order to keep the text\n                // aligned with the side of the ticks\n                if (self.orientation() === \"left\" && width > self._tickLabelMaxWidth) {\n                    var cutOffWidth = width - self._tickLabelMaxWidth;\n                    var newTransform = writeOptions.selection.attr(\"transform\") + \" translate(\" + cutOffWidth + \", 0)\";\n                    writeOptions.selection.attr(\"transform\", newTransform);\n                }\n                width = Math.min(width, self._tickLabelMaxWidth);\n            }\n            self._writer.write(self.formatter()(d), width, height, writeOptions);\n        });\n    };\n    /**\n     * Measures the size of the tick labels without making any (permanent) DOM changes.\n     *\n     * @param {number} axisWidth Width available for this axis.\n     * @param {number} axisHeight Height available for this axis.\n     * @param {Plottable.Scales.Category} scale The scale this axis is representing.\n     * @param {string[]} ticks The strings that will be printed on the ticks.\n     */\n    Category.prototype._measureTickLabels = function (axisWidth, axisHeight) {\n        var _this = this;\n        var thisScale = this._scale;\n        // set up a test scale to simulate rendering ticks with the given width and height.\n        var scale = new Scales.Category()\n            .domain(thisScale.domain())\n            .innerPadding(thisScale.innerPadding())\n            .outerPadding(thisScale.outerPadding())\n            .range([0, this.isHorizontal() ? axisWidth : axisHeight]);\n        var _a = this.getDownsampleInfo(scale), domain = _a.domain, stepWidth = _a.stepWidth;\n        // HACKHACK: https://github.com/palantir/svg-typewriter/issues/25\n        // the width (x-axis specific) available to a single tick label.\n        var width = axisWidth - this._tickSpaceRequired(); // default for left/right\n        if (this.isHorizontal()) {\n            width = stepWidth; // defaults to the band width\n            if (this._tickLabelAngle !== 0) {\n                width = axisHeight - this._tickSpaceRequired(); // use the axis height\n            }\n            // HACKHACK: Wrapper fails under negative circumstances\n            width = Math.max(width, 0);\n        }\n        // HACKHACK: https://github.com/palantir/svg-typewriter/issues/25\n        // the height (y-axis specific) available to a single tick label.\n        var height = stepWidth; // default for left/right\n        if (this.isHorizontal()) {\n            height = axisHeight - this._tickSpaceRequired();\n            if (this._tickLabelAngle !== 0) {\n                height = axisWidth - this._tickSpaceRequired();\n            }\n            // HACKHACK: Wrapper fails under negative circumstances\n            height = Math.max(height, 0);\n        }\n        if (this._tickLabelMaxWidth != null) {\n            width = Math.min(width, this._tickLabelMaxWidth);\n        }\n        var wrappingResults = domain.map(function (s) {\n            return _this._wrapper.wrap(_this.formatter()(s), _this._measurer, width, height);\n        });\n        // HACKHACK: https://github.com/palantir/svg-typewriter/issues/25\n        var widthFn = (this.isHorizontal() && this._tickLabelAngle === 0) ? d3.sum : Utils.Math.max;\n        var heightFn = (this.isHorizontal() && this._tickLabelAngle === 0) ? Utils.Math.max : d3.sum;\n        var usedWidth = widthFn(wrappingResults, function (t) { return _this._measurer.measure(t.wrappedText).width; }, 0);\n        var usedHeight = heightFn(wrappingResults, function (t) { return _this._measurer.measure(t.wrappedText).height; }, 0);\n        // If the tick labels are rotated, reverse usedWidth and usedHeight\n        // HACKHACK: https://github.com/palantir/svg-typewriter/issues/25\n        if (this._tickLabelAngle !== 0) {\n            _b = [usedHeight, usedWidth], usedWidth = _b[0], usedHeight = _b[1];\n        }\n        return {\n            usedWidth: usedWidth,\n            usedHeight: usedHeight,\n        };\n        var _b;\n    };\n    Category.prototype.renderImmediately = function () {\n        var _this = this;\n        _super.prototype.renderImmediately.call(this);\n        var catScale = this._scale;\n        var _a = this.getDownsampleInfo(), domain = _a.domain, stepWidth = _a.stepWidth;\n        var tickLabels = this._tickLabelContainer.selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS).data(domain, function (d) { return d; });\n        // Give each tick a stepWidth of space which will partition the entire axis evenly\n        var availableTextSpace = stepWidth;\n        if (this.isHorizontal() && this._tickLabelMaxWidth != null) {\n            availableTextSpace = Math.min(availableTextSpace, this._tickLabelMaxWidth);\n        }\n        var getTickLabelTransform = function (d, i) {\n            // scale(d) will give the center of the band, so subtract half of the text width to get the left (top-most)\n            // coordinate that the tick label should be transformed to.\n            var tickLabelEdge = catScale.scale(d) - availableTextSpace / 2;\n            var x = _this.isHorizontal() ? tickLabelEdge : 0;\n            var y = _this.isHorizontal() ? 0 : tickLabelEdge;\n            return \"translate(\" + x + \",\" + y + \")\";\n        };\n        tickLabels.enter().append(\"g\").classed(axis_1.Axis.TICK_LABEL_CLASS, true);\n        tickLabels.exit().remove();\n        tickLabels.attr(\"transform\", getTickLabelTransform);\n        // erase all text first, then rewrite\n        tickLabels.text(\"\");\n        this._drawTicks(stepWidth, tickLabels);\n        var xTranslate = this.orientation() === \"right\" ? this._tickSpaceRequired() : 0;\n        var yTranslate = this.orientation() === \"bottom\" ? this._tickSpaceRequired() : 0;\n        Utils.DOM.translate(this._tickLabelContainer, xTranslate, yTranslate);\n        // hide ticks and labels that overflow the axis\n        this._showAllTickMarks();\n        this._showAllTickLabels();\n        this._hideOverflowingTickLabels();\n        this._hideTickMarksWithoutLabel();\n        return this;\n    };\n    Category.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\n        // When anyone calls redraw(), computeLayout() will be called\n        // on everyone, including this. Since CSS or something might have\n        // affected the size of the characters, clear the cache.\n        this._measurer.reset();\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\n        if (!this.isHorizontal()) {\n            this._scale.range([0, this.height()]);\n        }\n        return this;\n    };\n    /**\n     * How many pixels to give labels at minimum before downsampling takes effect.\n     */\n    Category._MINIMUM_WIDTH_PER_LABEL_PX = 15;\n    return Category;\n}(axis_1.Axis));\nexports.Category = Category;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/axes/categoryAxis.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/axes/index.js":
/*!********************************************************!*\
  !*** ./node_modules/plottable/build/src/axes/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./categoryAxis */ \"./node_modules/plottable/build/src/axes/categoryAxis.js\"));\n__export(__webpack_require__(/*! ./numericAxis */ \"./node_modules/plottable/build/src/axes/numericAxis.js\"));\n__export(__webpack_require__(/*! ./timeAxis */ \"./node_modules/plottable/build/src/axes/timeAxis.js\"));\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/axes/index.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/axes/numericAxis.js":
/*!**************************************************************!*\
  !*** ./node_modules/plottable/build/src/axes/numericAxis.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar SVGTypewriter = __webpack_require__(/*! svg-typewriter */ \"./node_modules/svg-typewriter/build/src/index.js\");\nvar axis_1 = __webpack_require__(/*! ./axis */ \"./node_modules/plottable/build/src/axes/axis.js\");\nvar Formatters = __webpack_require__(/*! ../core/formatters */ \"./node_modules/plottable/build/src/core/formatters.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Numeric = (function (_super) {\n    __extends(Numeric, _super);\n    /**\n     * Constructs a Numeric Axis.\n     *\n     * A Numeric Axis is a visual representation of a QuantitativeScale.\n     *\n     * @constructor\n     * @param {QuantitativeScale} scale\n     * @param {AxisOrientation} orientation Orientation of this Numeric Axis.\n     */\n    function Numeric(scale, orientation) {\n        _super.call(this, scale, orientation);\n        this._tickLabelPositioning = \"center\";\n        this._usesTextWidthApproximation = false;\n        this.formatter(Formatters.general());\n    }\n    Numeric.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._measurer = new SVGTypewriter.CacheMeasurer(this._tickLabelContainer, axis_1.Axis.TICK_LABEL_CLASS);\n        this._wrapper = new SVGTypewriter.Wrapper().maxLines(1);\n    };\n    Numeric.prototype._computeWidth = function () {\n        var maxTextWidth = this._usesTextWidthApproximation ? this._computeApproximateTextWidth() : this._computeExactTextWidth();\n        if (this._tickLabelPositioning === \"center\") {\n            return this._maxLabelTickLength() + this.tickLabelPadding() + maxTextWidth;\n        }\n        else {\n            return Math.max(this._maxLabelTickLength(), this.tickLabelPadding() + maxTextWidth);\n        }\n    };\n    Numeric.prototype._computeExactTextWidth = function () {\n        var _this = this;\n        var tickValues = this._getTickValues();\n        var textLengths = tickValues.map(function (v) {\n            var formattedValue = _this.formatter()(v);\n            return _this._measurer.measure(formattedValue).width;\n        });\n        return Utils.Math.max(textLengths, 0);\n    };\n    Numeric.prototype._computeApproximateTextWidth = function () {\n        var _this = this;\n        var tickValues = this._getTickValues();\n        var mWidth = this._measurer.measure(\"M\").width;\n        var textLengths = tickValues.map(function (v) {\n            var formattedValue = _this.formatter()(v);\n            return formattedValue.length * mWidth;\n        });\n        return Utils.Math.max(textLengths, 0);\n    };\n    Numeric.prototype._computeHeight = function () {\n        var textHeight = this._measurer.measure().height;\n        if (this._tickLabelPositioning === \"center\") {\n            return this._maxLabelTickLength() + this.tickLabelPadding() + textHeight;\n        }\n        else {\n            return Math.max(this._maxLabelTickLength(), this.tickLabelPadding() + textHeight);\n        }\n    };\n    Numeric.prototype._getTickValues = function () {\n        var scale = this._scale;\n        var domain = scale.domain();\n        var min = domain[0] <= domain[1] ? domain[0] : domain[1];\n        var max = domain[0] >= domain[1] ? domain[0] : domain[1];\n        if (min === domain[0]) {\n            return scale.ticks().filter(function (i) { return i >= min && i <= max; });\n        }\n        else {\n            return scale.ticks().filter(function (i) { return i >= min && i <= max; }).reverse();\n        }\n    };\n    Numeric.prototype._rescale = function () {\n        if (!this._isSetup) {\n            return;\n        }\n        if (!this.isHorizontal()) {\n            var reComputedWidth = this._computeWidth();\n            if (reComputedWidth > this.width() || reComputedWidth < (this.width() - this.margin())) {\n                this.redraw();\n                return;\n            }\n        }\n        this.render();\n    };\n    Numeric.prototype.renderImmediately = function () {\n        var _this = this;\n        _super.prototype.renderImmediately.call(this);\n        var tickLabelAttrHash = {\n            x: 0,\n            y: 0,\n            dx: \"0em\",\n            dy: \"0.3em\",\n        };\n        var tickMarkLength = this._maxLabelTickLength();\n        var tickLabelPadding = this.tickLabelPadding();\n        var tickLabelTextAnchor = \"middle\";\n        var labelGroupTransformX = 0;\n        var labelGroupTransformY = 0;\n        var labelGroupShiftX = 0;\n        var labelGroupShiftY = 0;\n        if (this.isHorizontal()) {\n            switch (this._tickLabelPositioning) {\n                case \"left\":\n                    tickLabelTextAnchor = \"end\";\n                    labelGroupTransformX = -tickLabelPadding;\n                    labelGroupShiftY = tickLabelPadding;\n                    break;\n                case \"center\":\n                    labelGroupShiftY = tickMarkLength + tickLabelPadding;\n                    break;\n                case \"right\":\n                    tickLabelTextAnchor = \"start\";\n                    labelGroupTransformX = tickLabelPadding;\n                    labelGroupShiftY = tickLabelPadding;\n                    break;\n            }\n        }\n        else {\n            switch (this._tickLabelPositioning) {\n                case \"top\":\n                    tickLabelAttrHash[\"dy\"] = \"-0.3em\";\n                    labelGroupShiftX = tickLabelPadding;\n                    labelGroupTransformY = -tickLabelPadding;\n                    break;\n                case \"center\":\n                    labelGroupShiftX = tickMarkLength + tickLabelPadding;\n                    break;\n                case \"bottom\":\n                    tickLabelAttrHash[\"dy\"] = \"1em\";\n                    labelGroupShiftX = tickLabelPadding;\n                    labelGroupTransformY = tickLabelPadding;\n                    break;\n            }\n        }\n        var tickMarkAttrHash = this._generateTickMarkAttrHash();\n        switch (this.orientation()) {\n            case \"bottom\":\n                tickLabelAttrHash[\"x\"] = tickMarkAttrHash[\"x1\"];\n                tickLabelAttrHash[\"dy\"] = \"0.95em\";\n                labelGroupTransformY = tickMarkAttrHash[\"y1\"] + labelGroupShiftY;\n                break;\n            case \"top\":\n                tickLabelAttrHash[\"x\"] = tickMarkAttrHash[\"x1\"];\n                tickLabelAttrHash[\"dy\"] = \"-.25em\";\n                labelGroupTransformY = tickMarkAttrHash[\"y1\"] - labelGroupShiftY;\n                break;\n            case \"left\":\n                tickLabelTextAnchor = \"end\";\n                labelGroupTransformX = tickMarkAttrHash[\"x1\"] - labelGroupShiftX;\n                tickLabelAttrHash[\"y\"] = tickMarkAttrHash[\"y1\"];\n                break;\n            case \"right\":\n                tickLabelTextAnchor = \"start\";\n                labelGroupTransformX = tickMarkAttrHash[\"x1\"] + labelGroupShiftX;\n                tickLabelAttrHash[\"y\"] = tickMarkAttrHash[\"y1\"];\n                break;\n        }\n        var tickLabelValues = this._getTickValues();\n        var tickLabels = this._tickLabelContainer\n            .selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS)\n            .data(tickLabelValues);\n        tickLabels.enter().append(\"text\").classed(axis_1.Axis.TICK_LABEL_CLASS, true);\n        tickLabels.exit().remove();\n        tickLabels.style(\"text-anchor\", tickLabelTextAnchor)\n            .style(\"visibility\", \"inherit\")\n            .attr(tickLabelAttrHash)\n            .text(function (s) { return _this.formatter()(s); });\n        var labelGroupTransform = \"translate(\" + labelGroupTransformX + \", \" + labelGroupTransformY + \")\";\n        this._tickLabelContainer.attr(\"transform\", labelGroupTransform);\n        this._showAllTickMarks();\n        if (!this.showEndTickLabels()) {\n            this._hideEndTickLabels();\n        }\n        this._hideOverflowingTickLabels();\n        this._hideOverlappingTickLabels();\n        if (this._tickLabelPositioning === \"bottom\" ||\n            this._tickLabelPositioning === \"top\" ||\n            this._tickLabelPositioning === \"left\" ||\n            this._tickLabelPositioning === \"right\") {\n            this._hideTickMarksWithoutLabel();\n        }\n        return this;\n    };\n    Numeric.prototype.tickLabelPosition = function (position) {\n        if (position == null) {\n            return this._tickLabelPositioning;\n        }\n        else {\n            var positionLC = position.toLowerCase();\n            if (this.isHorizontal()) {\n                if (!(positionLC === \"left\" || positionLC === \"center\" || positionLC === \"right\")) {\n                    throw new Error(positionLC + \" is not a valid tick label position for a horizontal NumericAxis\");\n                }\n            }\n            else {\n                if (!(positionLC === \"top\" || positionLC === \"center\" || positionLC === \"bottom\")) {\n                    throw new Error(positionLC + \" is not a valid tick label position for a vertical NumericAxis\");\n                }\n            }\n            this._tickLabelPositioning = positionLC;\n            this.redraw();\n            return this;\n        }\n    };\n    Numeric.prototype.usesTextWidthApproximation = function (enable) {\n        if (enable == null) {\n            return this._usesTextWidthApproximation;\n        }\n        else {\n            this._usesTextWidthApproximation = enable;\n            return this;\n        }\n    };\n    Numeric.prototype._hideEndTickLabels = function () {\n        var boundingBox = this._boundingBox.node().getBoundingClientRect();\n        var tickLabels = this._tickLabelContainer.selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS);\n        if (tickLabels[0].length === 0) {\n            return;\n        }\n        var firstTickLabel = tickLabels[0][0];\n        if (!Utils.DOM.clientRectInside(firstTickLabel.getBoundingClientRect(), boundingBox)) {\n            d3.select(firstTickLabel).style(\"visibility\", \"hidden\");\n        }\n        var lastTickLabel = tickLabels[0][tickLabels[0].length - 1];\n        if (!Utils.DOM.clientRectInside(lastTickLabel.getBoundingClientRect(), boundingBox)) {\n            d3.select(lastTickLabel).style(\"visibility\", \"hidden\");\n        }\n    };\n    Numeric.prototype._hideOverlappingTickLabels = function () {\n        var visibleTickLabels = this._tickLabelContainer\n            .selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS)\n            .filter(function (d, i) {\n            var visibility = d3.select(this).style(\"visibility\");\n            return (visibility === \"inherit\") || (visibility === \"visible\");\n        });\n        var visibleTickLabelRects = visibleTickLabels[0].map(function (label) { return label.getBoundingClientRect(); });\n        var interval = 1;\n        while (!this._hasOverlapWithInterval(interval, visibleTickLabelRects) && interval < visibleTickLabelRects.length) {\n            interval += 1;\n        }\n        visibleTickLabels.each(function (d, i) {\n            var tickLabel = d3.select(this);\n            if (i % interval !== 0) {\n                tickLabel.style(\"visibility\", \"hidden\");\n            }\n        });\n    };\n    /**\n     * The method is responsible for evenly spacing the labels on the axis.\n     * @return test to see if taking every `interval` recrangle from `rects`\n     *         will result in labels not overlapping\n     *\n     * For top, bottom, left, right positioning of the thicks, we want the padding\n     * between the labels to be 3x, such that the label will be  `padding` distance\n     * from the tick and 2 * `padding` distance (or more) from the next tick\n     *\n     */\n    Numeric.prototype._hasOverlapWithInterval = function (interval, rects) {\n        var padding = this.tickLabelPadding();\n        if (this._tickLabelPositioning === \"bottom\" ||\n            this._tickLabelPositioning === \"top\" ||\n            this._tickLabelPositioning === \"left\" ||\n            this._tickLabelPositioning === \"right\") {\n            padding *= 3;\n        }\n        for (var i = 0; i < rects.length - (interval); i += interval) {\n            var currRect = rects[i];\n            var nextRect = rects[i + interval];\n            if (this.isHorizontal()) {\n                if (currRect.right + padding >= nextRect.left) {\n                    return false;\n                }\n            }\n            else {\n                if (currRect.top - padding <= nextRect.bottom) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    };\n    return Numeric;\n}(axis_1.Axis));\nexports.Numeric = Numeric;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/axes/numericAxis.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/axes/timeAxis.js":
/*!***********************************************************!*\
  !*** ./node_modules/plottable/build/src/axes/timeAxis.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar SVGTypewriter = __webpack_require__(/*! svg-typewriter */ \"./node_modules/svg-typewriter/build/src/index.js\");\nvar Formatters = __webpack_require__(/*! ../core/formatters */ \"./node_modules/plottable/build/src/core/formatters.js\");\nvar Scales = __webpack_require__(/*! ../scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar axis_1 = __webpack_require__(/*! ./axis */ \"./node_modules/plottable/build/src/axes/axis.js\");\nvar TimeInterval;\n(function (TimeInterval) {\n    TimeInterval.second = \"second\";\n    TimeInterval.minute = \"minute\";\n    TimeInterval.hour = \"hour\";\n    TimeInterval.day = \"day\";\n    TimeInterval.week = \"week\";\n    TimeInterval.month = \"month\";\n    TimeInterval.year = \"year\";\n})(TimeInterval = exports.TimeInterval || (exports.TimeInterval = {}));\nvar Time = (function (_super) {\n    __extends(Time, _super);\n    /**\n     * Constructs a Time Axis.\n     *\n     * A Time Axis is a visual representation of a Time Scale.\n     *\n     * @constructor\n     * @param {Scales.Time} scale\n     * @param {AxisOrientation} orientation Orientation of this Time Axis. Time Axes can only have \"top\" or \"bottom\"\n     * orientations.\n     */\n    function Time(scale, orientation) {\n        _super.call(this, scale, orientation);\n        this._maxTimeIntervalPrecision = null;\n        this._tierLabelPositions = [];\n        this.addClass(\"time-axis\");\n        this.tickLabelPadding(5);\n        this.axisConfigurations(Time._DEFAULT_TIME_AXIS_CONFIGURATIONS);\n        this.annotationFormatter(Formatters.time(\"%a %b %d, %Y\"));\n    }\n    Time.prototype.tierLabelPositions = function (newPositions) {\n        if (newPositions == null) {\n            return this._tierLabelPositions;\n        }\n        else {\n            if (!newPositions.every(function (pos) { return pos.toLowerCase() === \"between\" || pos.toLowerCase() === \"center\"; })) {\n                throw new Error(\"Unsupported position for tier labels\");\n            }\n            this._tierLabelPositions = newPositions;\n            this.redraw();\n            return this;\n        }\n    };\n    Time.prototype.maxTimeIntervalPrecision = function (newPrecision) {\n        if (newPrecision == null) {\n            return this._maxTimeIntervalPrecision;\n        }\n        else {\n            this._maxTimeIntervalPrecision = newPrecision;\n            this.redraw();\n            return this;\n        }\n    };\n    /**\n     * Returns the current `TimeAxisConfiguration` used to render the axes.\n     *\n     * Note that this is only valid after the axis had been rendered and the\n     * most precise valid configuration is determined from the available space\n     * and maximum precision constraints.\n     *\n     * @returns {TimeAxisConfiguration} The currently used `TimeAxisConfiguration` or `undefined`.\n     */\n    Time.prototype.currentAxisConfiguration = function () {\n        return this._possibleTimeAxisConfigurations[this._mostPreciseConfigIndex];\n    };\n    Time.prototype.axisConfigurations = function (configurations) {\n        if (configurations == null) {\n            return this._possibleTimeAxisConfigurations;\n        }\n        this._possibleTimeAxisConfigurations = configurations;\n        this._numTiers = Utils.Math.max(this._possibleTimeAxisConfigurations.map(function (config) { return config.length; }), 0);\n        if (this._isAnchored) {\n            this._setupDomElements();\n        }\n        var oldLabelPositions = this.tierLabelPositions();\n        var newLabelPositions = [];\n        for (var i = 0; i < this._numTiers; i++) {\n            newLabelPositions.push(oldLabelPositions[i] || \"between\");\n        }\n        this.tierLabelPositions(newLabelPositions);\n        this.redraw();\n        return this;\n    };\n    /**\n     * Gets the index of the most precise TimeAxisConfiguration that will fit in the current width.\n     */\n    Time.prototype._getMostPreciseConfigurationIndex = function () {\n        var _this = this;\n        var mostPreciseIndex = this._possibleTimeAxisConfigurations.length;\n        this._possibleTimeAxisConfigurations.forEach(function (interval, index) {\n            if (index < mostPreciseIndex && interval.every(function (tier) {\n                return _this._checkTimeAxisTierConfiguration(tier);\n            })) {\n                mostPreciseIndex = index;\n            }\n        });\n        if (mostPreciseIndex === this._possibleTimeAxisConfigurations.length) {\n            Utils.Window.warn(\"zoomed out too far: could not find suitable interval to display labels\");\n            --mostPreciseIndex;\n        }\n        return mostPreciseIndex;\n    };\n    Time.prototype.orientation = function (orientation) {\n        if (orientation && (orientation.toLowerCase() === \"right\" || orientation.toLowerCase() === \"left\")) {\n            throw new Error(orientation + \" is not a supported orientation for TimeAxis - only horizontal orientations are supported\");\n        }\n        return _super.prototype.orientation.call(this, orientation); // maintains getter-setter functionality\n    };\n    Time.prototype._computeHeight = function () {\n        var textHeight = this._measurer.measure().height;\n        this._tierHeights = [];\n        for (var i = 0; i < this._numTiers; i++) {\n            this._tierHeights.push(textHeight + this.tickLabelPadding() +\n                ((this._tierLabelPositions[i]) === \"between\" ? 0 : this._maxLabelTickLength()));\n        }\n        return d3.sum(this._tierHeights);\n    };\n    Time.prototype._getIntervalLength = function (config) {\n        var startDate = this._scale.domain()[0];\n        var d3Interval = Scales.Time.timeIntervalToD3Time(config.interval);\n        var endDate = d3Interval.offset(startDate, config.step);\n        if (endDate > this._scale.domain()[1]) {\n            // this offset is too large, so just return available width\n            return this.width();\n        }\n        // measure how much space one date can get\n        var stepLength = Math.abs(this._scale.scale(endDate) - this._scale.scale(startDate));\n        return stepLength;\n    };\n    Time.prototype._maxWidthForInterval = function (config) {\n        return this._measurer.measure(config.formatter(Time._LONG_DATE)).width;\n    };\n    /**\n     * Check if tier configuration fits in the current width and satisfied the\n     * max TimeInterval precision limit.\n     */\n    Time.prototype._checkTimeAxisTierConfiguration = function (config) {\n        // Use the sorted index to determine if the teir configuration contains a\n        // time interval that is too precise for the maxTimeIntervalPrecision\n        // setting (if set).\n        if (this._maxTimeIntervalPrecision != null) {\n            var precisionLimit = Time._SORTED_TIME_INTERVAL_INDEX[this._maxTimeIntervalPrecision];\n            var configPrecision = Time._SORTED_TIME_INTERVAL_INDEX[config.interval];\n            if (precisionLimit != null && configPrecision != null && configPrecision < precisionLimit) {\n                return false;\n            }\n        }\n        var worstWidth = this._maxWidthForInterval(config) + 2 * this.tickLabelPadding();\n        return Math.min(this._getIntervalLength(config), this.width()) >= worstWidth;\n    };\n    Time.prototype._sizeFromOffer = function (availableWidth, availableHeight) {\n        // Makes sure that the size it requires is a multiple of tier sizes, such that\n        // we have no leftover tiers\n        var size = _super.prototype._sizeFromOffer.call(this, availableWidth, availableHeight);\n        var tierHeights = this._tierHeights.reduce(function (prevValue, currValue, index, arr) {\n            return (prevValue + currValue > size.height) ? prevValue : (prevValue + currValue);\n        });\n        var nonCoreHeight = this.margin() + (this.annotationsEnabled() ? this.annotationTierCount() * this._annotationTierHeight() : 0);\n        size.height = Math.min(size.height, tierHeights + nonCoreHeight);\n        return size;\n    };\n    Time.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._setupDomElements();\n    };\n    Time.prototype._setupDomElements = function () {\n        this.content().selectAll(\".\" + Time.TIME_AXIS_TIER_CLASS).remove();\n        this._tierLabelContainers = [];\n        this._tierMarkContainers = [];\n        this._tierBaselines = [];\n        this._tickLabelContainer.remove();\n        this._baseline.remove();\n        for (var i = 0; i < this._numTiers; ++i) {\n            var tierContainer = this.content().append(\"g\").classed(Time.TIME_AXIS_TIER_CLASS, true);\n            this._tierLabelContainers.push(tierContainer.append(\"g\").classed(axis_1.Axis.TICK_LABEL_CLASS + \"-container\", true));\n            this._tierMarkContainers.push(tierContainer.append(\"g\").classed(axis_1.Axis.TICK_MARK_CLASS + \"-container\", true));\n            this._tierBaselines.push(tierContainer.append(\"line\").classed(\"baseline\", true));\n        }\n        this._measurer = new SVGTypewriter.CacheMeasurer(this._tierLabelContainers[0]);\n    };\n    Time.prototype._getTickIntervalValues = function (config) {\n        return this._scale.tickInterval(config.interval, config.step);\n    };\n    Time.prototype._getTickValues = function () {\n        var _this = this;\n        return this._possibleTimeAxisConfigurations[this._mostPreciseConfigIndex].reduce(function (ticks, config) { return ticks.concat(_this._getTickIntervalValues(config)); }, []);\n    };\n    Time.prototype._cleanTiers = function () {\n        for (var index = 0; index < this._tierLabelContainers.length; index++) {\n            this._tierLabelContainers[index].selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS).remove();\n            this._tierMarkContainers[index].selectAll(\".\" + axis_1.Axis.TICK_MARK_CLASS).remove();\n            this._tierBaselines[index].style(\"visibility\", \"hidden\");\n        }\n    };\n    Time.prototype._getTickValuesForConfiguration = function (config) {\n        var tickPos = this._scale.tickInterval(config.interval, config.step);\n        var domain = this._scale.domain();\n        var tickPosValues = tickPos.map(function (d) { return d.valueOf(); }); // can't indexOf with objects\n        if (tickPosValues.indexOf(domain[0].valueOf()) === -1) {\n            tickPos.unshift(domain[0]);\n        }\n        if (tickPosValues.indexOf(domain[1].valueOf()) === -1) {\n            tickPos.push(domain[1]);\n        }\n        return tickPos;\n    };\n    Time.prototype._renderTierLabels = function (container, config, index) {\n        var _this = this;\n        var tickPos = this._getTickValuesForConfiguration(config);\n        var labelPos = [];\n        if (this._tierLabelPositions[index] === \"between\" && config.step === 1) {\n            tickPos.map(function (datum, i) {\n                if (i + 1 >= tickPos.length) {\n                    return;\n                }\n                labelPos.push(new Date((tickPos[i + 1].valueOf() - tickPos[i].valueOf()) / 2 + tickPos[i].valueOf()));\n            });\n        }\n        else {\n            labelPos = tickPos;\n        }\n        var tickLabels = container.selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS).data(labelPos, function (d) { return String(d.valueOf()); });\n        var tickLabelsEnter = tickLabels.enter().append(\"g\").classed(axis_1.Axis.TICK_LABEL_CLASS, true);\n        tickLabelsEnter.append(\"text\");\n        var xTranslate = (this._tierLabelPositions[index] === \"center\" || config.step === 1) ? 0 : this.tickLabelPadding();\n        var yTranslate;\n        if (this.orientation() === \"bottom\") {\n            yTranslate = d3.sum(this._tierHeights.slice(0, index + 1)) - this.tickLabelPadding();\n        }\n        else {\n            if (this._tierLabelPositions[index] === \"center\") {\n                yTranslate = this.height() - d3.sum(this._tierHeights.slice(0, index)) - this.tickLabelPadding() - this._maxLabelTickLength();\n            }\n            else {\n                yTranslate = this.height() - d3.sum(this._tierHeights.slice(0, index)) - this.tickLabelPadding();\n            }\n        }\n        var textSelection = tickLabels.selectAll(\"text\");\n        if (textSelection.size() > 0) {\n            Utils.DOM.translate(textSelection, xTranslate, yTranslate);\n        }\n        tickLabels.exit().remove();\n        tickLabels.attr(\"transform\", function (d) { return \"translate(\" + _this._scale.scale(d) + \",0)\"; });\n        var anchor = (this._tierLabelPositions[index] === \"center\" || config.step === 1) ? \"middle\" : \"start\";\n        tickLabels.selectAll(\"text\").text(config.formatter).style(\"text-anchor\", anchor);\n    };\n    Time.prototype._renderTickMarks = function (tickValues, index) {\n        var tickMarks = this._tierMarkContainers[index].selectAll(\".\" + axis_1.Axis.TICK_MARK_CLASS).data(tickValues);\n        tickMarks.enter().append(\"line\").classed(axis_1.Axis.TICK_MARK_CLASS, true);\n        var attr = this._generateTickMarkAttrHash();\n        var offset = this._tierHeights.slice(0, index).reduce(function (translate, height) { return translate + height; }, 0);\n        if (this.orientation() === \"bottom\") {\n            attr[\"y1\"] = offset;\n            attr[\"y2\"] = offset + (this._tierLabelPositions[index] === \"center\" ? this.innerTickLength() : this._tierHeights[index]);\n        }\n        else {\n            attr[\"y1\"] = this.height() - offset;\n            attr[\"y2\"] = this.height() - (offset + (this._tierLabelPositions[index] === \"center\" ?\n                this.innerTickLength() : this._tierHeights[index]));\n        }\n        tickMarks.attr(attr);\n        if (this.orientation() === \"bottom\") {\n            attr[\"y1\"] = offset;\n            attr[\"y2\"] = offset + (this._tierLabelPositions[index] === \"center\" ? this.endTickLength() : this._tierHeights[index]);\n        }\n        else {\n            attr[\"y1\"] = this.height() - offset;\n            attr[\"y2\"] = this.height() - (offset + (this._tierLabelPositions[index] === \"center\" ?\n                this.endTickLength() : this._tierHeights[index]));\n        }\n        d3.select(tickMarks[0][0]).attr(attr);\n        d3.select(tickMarks[0][tickMarks.size() - 1]).attr(attr);\n        // Add end-tick classes to first and last tick for CSS customization purposes\n        d3.select(tickMarks[0][0]).classed(axis_1.Axis.END_TICK_MARK_CLASS, true);\n        d3.select(tickMarks[0][tickMarks.size() - 1]).classed(axis_1.Axis.END_TICK_MARK_CLASS, true);\n        tickMarks.exit().remove();\n    };\n    Time.prototype._renderLabellessTickMarks = function (tickValues) {\n        var tickMarks = this._tickMarkContainer.selectAll(\".\" + axis_1.Axis.TICK_MARK_CLASS).data(tickValues);\n        tickMarks.enter().append(\"line\").classed(axis_1.Axis.TICK_MARK_CLASS, true);\n        var attr = this._generateTickMarkAttrHash();\n        attr[\"y2\"] = (this.orientation() === \"bottom\") ? this.tickLabelPadding() : this.height() - this.tickLabelPadding();\n        tickMarks.attr(attr);\n        tickMarks.exit().remove();\n    };\n    Time.prototype._generateLabellessTicks = function () {\n        if (this._mostPreciseConfigIndex < 1) {\n            return [];\n        }\n        return this._getTickIntervalValues(this._possibleTimeAxisConfigurations[this._mostPreciseConfigIndex - 1][0]);\n    };\n    Time.prototype.renderImmediately = function () {\n        var _this = this;\n        this._mostPreciseConfigIndex = this._getMostPreciseConfigurationIndex();\n        var tierConfigs = this._possibleTimeAxisConfigurations[this._mostPreciseConfigIndex];\n        this._cleanTiers();\n        tierConfigs.forEach(function (config, i) {\n            return _this._renderTierLabels(_this._tierLabelContainers[i], config, i);\n        });\n        var tierTicks = tierConfigs.map(function (config, i) {\n            return _this._getTickValuesForConfiguration(config);\n        });\n        var baselineOffset = 0;\n        for (var i = 0; i < Math.max(tierConfigs.length, 1); ++i) {\n            var attr = this._generateBaselineAttrHash();\n            attr[\"y1\"] += (this.orientation() === \"bottom\") ? baselineOffset : -baselineOffset;\n            attr[\"y2\"] = attr[\"y1\"];\n            this._tierBaselines[i].attr(attr).style(\"visibility\", \"inherit\");\n            baselineOffset += this._tierHeights[i];\n        }\n        var labelLessTicks = [];\n        var domain = this._scale.domain();\n        var totalLength = this._scale.scale(domain[1]) - this._scale.scale(domain[0]);\n        if (this._getIntervalLength(tierConfigs[0]) * 1.5 >= totalLength) {\n            labelLessTicks = this._generateLabellessTicks();\n        }\n        this._renderLabellessTickMarks(labelLessTicks);\n        this._hideOverflowingTiers();\n        for (var i = 0; i < tierConfigs.length; ++i) {\n            this._renderTickMarks(tierTicks[i], i);\n            this._hideOverlappingAndCutOffLabels(i);\n        }\n        if (this.annotationsEnabled()) {\n            this._drawAnnotations();\n        }\n        else {\n            this._removeAnnotations();\n        }\n        return this;\n    };\n    Time.prototype._hideOverflowingTiers = function () {\n        var _this = this;\n        var availableHeight = this.height();\n        var usedHeight = 0;\n        this.content()\n            .selectAll(\".\" + Time.TIME_AXIS_TIER_CLASS)\n            .attr(\"visibility\", function (d, i) {\n            usedHeight += _this._tierHeights[i];\n            return usedHeight <= availableHeight ? \"inherit\" : \"hidden\";\n        });\n    };\n    Time.prototype._hideOverlappingAndCutOffLabels = function (index) {\n        var _this = this;\n        var boundingBox = this._boundingBox.node().getBoundingClientRect();\n        var isInsideBBox = function (tickBox) {\n            return (Math.floor(boundingBox.left) <= Math.ceil(tickBox.left) &&\n                Math.floor(boundingBox.top) <= Math.ceil(tickBox.top) &&\n                Math.floor(tickBox.right) <= Math.ceil(boundingBox.left + _this.width()) &&\n                Math.floor(tickBox.bottom) <= Math.ceil(boundingBox.top + _this.height()));\n        };\n        var visibleTickMarks = this._tierMarkContainers[index]\n            .selectAll(\".\" + axis_1.Axis.TICK_MARK_CLASS)\n            .filter(function (d, i) {\n            var visibility = d3.select(this).style(\"visibility\");\n            return visibility === \"visible\" || visibility === \"inherit\";\n        });\n        // We use the ClientRects because x1/x2 attributes are not comparable to ClientRects of labels\n        var visibleTickMarkRects = visibleTickMarks[0].map(function (mark) { return mark.getBoundingClientRect(); });\n        var visibleTickLabels = this._tierLabelContainers[index]\n            .selectAll(\".\" + axis_1.Axis.TICK_LABEL_CLASS)\n            .filter(function (d, i) {\n            var visibility = d3.select(this).style(\"visibility\");\n            return visibility === \"visible\" || visibility === \"inherit\";\n        });\n        var lastLabelClientRect;\n        visibleTickLabels.each(function (d, i) {\n            var clientRect = this.getBoundingClientRect();\n            var tickLabel = d3.select(this);\n            var leadingTickMark = visibleTickMarkRects[i];\n            var trailingTickMark = visibleTickMarkRects[i + 1];\n            var isOverlappingLastLabel = (lastLabelClientRect != null && Utils.DOM.clientRectsOverlap(clientRect, lastLabelClientRect));\n            var isOverlappingLeadingTickMark = (leadingTickMark != null && Utils.DOM.clientRectsOverlap(clientRect, leadingTickMark));\n            var isOverlappingTrailingTickMark = (trailingTickMark != null && Utils.DOM.clientRectsOverlap(clientRect, trailingTickMark));\n            if (!isInsideBBox(clientRect) || isOverlappingLastLabel || isOverlappingLeadingTickMark || isOverlappingTrailingTickMark) {\n                tickLabel.style(\"visibility\", \"hidden\");\n            }\n            else {\n                lastLabelClientRect = clientRect;\n                tickLabel.style(\"visibility\", \"inherit\");\n            }\n        });\n    };\n    /**\n     * The CSS class applied to each Time Axis tier\n     */\n    Time.TIME_AXIS_TIER_CLASS = \"time-axis-tier\";\n    Time._SORTED_TIME_INTERVAL_INDEX = (_a = {},\n        _a[TimeInterval.second] = 0,\n        _a[TimeInterval.minute] = 1,\n        _a[TimeInterval.hour] = 2,\n        _a[TimeInterval.day] = 3,\n        _a[TimeInterval.week] = 4,\n        _a[TimeInterval.month] = 5,\n        _a[TimeInterval.year] = 6,\n        _a\n    );\n    Time._DEFAULT_TIME_AXIS_CONFIGURATIONS = [\n        [\n            { interval: TimeInterval.second, step: 1, formatter: Formatters.time(\"%I:%M:%S %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.second, step: 5, formatter: Formatters.time(\"%I:%M:%S %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.second, step: 10, formatter: Formatters.time(\"%I:%M:%S %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.second, step: 15, formatter: Formatters.time(\"%I:%M:%S %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.second, step: 30, formatter: Formatters.time(\"%I:%M:%S %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.minute, step: 1, formatter: Formatters.time(\"%I:%M %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.minute, step: 5, formatter: Formatters.time(\"%I:%M %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.minute, step: 10, formatter: Formatters.time(\"%I:%M %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.minute, step: 15, formatter: Formatters.time(\"%I:%M %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.minute, step: 30, formatter: Formatters.time(\"%I:%M %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.hour, step: 1, formatter: Formatters.time(\"%I %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.hour, step: 3, formatter: Formatters.time(\"%I %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.hour, step: 6, formatter: Formatters.time(\"%I %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.hour, step: 12, formatter: Formatters.time(\"%I %p\") },\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%B %e, %Y\") },\n        ],\n        [\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%a %e\") },\n            { interval: TimeInterval.month, step: 1, formatter: Formatters.time(\"%B %Y\") },\n        ],\n        [\n            { interval: TimeInterval.day, step: 1, formatter: Formatters.time(\"%e\") },\n            { interval: TimeInterval.month, step: 1, formatter: Formatters.time(\"%B %Y\") },\n        ],\n        [\n            { interval: TimeInterval.month, step: 1, formatter: Formatters.time(\"%B\") },\n            { interval: TimeInterval.year, step: 1, formatter: Formatters.time(\"%Y\") },\n        ],\n        [\n            { interval: TimeInterval.month, step: 1, formatter: Formatters.time(\"%b\") },\n            { interval: TimeInterval.year, step: 1, formatter: Formatters.time(\"%Y\") },\n        ],\n        [\n            { interval: TimeInterval.month, step: 3, formatter: Formatters.time(\"%b\") },\n            { interval: TimeInterval.year, step: 1, formatter: Formatters.time(\"%Y\") },\n        ],\n        [\n            { interval: TimeInterval.month, step: 6, formatter: Formatters.time(\"%b\") },\n            { interval: TimeInterval.year, step: 1, formatter: Formatters.time(\"%Y\") },\n        ],\n        [\n            { interval: TimeInterval.year, step: 1, formatter: Formatters.time(\"%Y\") },\n        ],\n        [\n            { interval: TimeInterval.year, step: 1, formatter: Formatters.time(\"%y\") },\n        ],\n        [\n            { interval: TimeInterval.year, step: 5, formatter: Formatters.time(\"%Y\") },\n        ],\n        [\n            { interval: TimeInterval.year, step: 25, formatter: Formatters.time(\"%Y\") },\n        ],\n        [\n            { interval: TimeInterval.year, step: 50, formatter: Formatters.time(\"%Y\") },\n        ],\n        [\n            { interval: TimeInterval.year, step: 100, formatter: Formatters.time(\"%Y\") },\n        ],\n        [\n            { interval: TimeInterval.year, step: 200, formatter: Formatters.time(\"%Y\") },\n        ],\n        [\n            { interval: TimeInterval.year, step: 500, formatter: Formatters.time(\"%Y\") },\n        ],\n        [\n            { interval: TimeInterval.year, step: 1000, formatter: Formatters.time(\"%Y\") },\n        ],\n    ];\n    Time._LONG_DATE = new Date(9999, 8, 29, 12, 59, 9999);\n    return Time;\n    var _a;\n}(axis_1.Axis));\nexports.Time = Time;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/axes/timeAxis.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/component.js":
/*!******************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/component.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar RenderController = __webpack_require__(/*! ../core/renderController */ \"./node_modules/plottable/build/src/core/renderController.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Component = (function () {\n    function Component() {\n        this._clipPathEnabled = false;\n        this._origin = { x: 0, y: 0 }; // Origin of the coordinate space for the Component.\n        this._xAlignment = \"left\";\n        this._yAlignment = \"top\";\n        this._isSetup = false;\n        this._isAnchored = false;\n        this._boxes = [];\n        this._isTopLevelComponent = false;\n        this._cssClasses = new Utils.Set();\n        this._destroyed = false;\n        this._onAnchorCallbacks = new Utils.CallbackSet();\n        this._onDetachCallbacks = new Utils.CallbackSet();\n        this._cssClasses.add(\"component\");\n    }\n    /**\n     * Attaches the Component as a child of a given d3 Selection.\n     *\n     * @param {d3.Selection} selection.\n     * @returns {Component} The calling Component.\n     */\n    Component.prototype.anchor = function (selection) {\n        if (this._destroyed) {\n            throw new Error(\"Can't reuse destroy()-ed Components!\");\n        }\n        this._isTopLevelComponent = selection.node().nodeName.toLowerCase() === \"svg\";\n        if (this._isTopLevelComponent) {\n            // svg node gets the \"plottable\" CSS class\n            this._rootSVG = selection;\n            this._rootSVG.classed(\"plottable\", true);\n            // visible overflow for firefox https://stackoverflow.com/questions/5926986/why-does-firefox-appear-to-truncate-embedded-svgs\n            this._rootSVG.style(\"overflow\", \"visible\");\n            // HACKHACK: Safari fails to register events on the <svg> itself\n            var safariBacking = this._rootSVG.select(\".\" + Component._SAFARI_EVENT_BACKING_CLASS);\n            if (safariBacking.empty()) {\n                this._rootSVG.append(\"rect\").classed(Component._SAFARI_EVENT_BACKING_CLASS, true).attr({\n                    x: 0,\n                    y: 0,\n                    width: \"100%\",\n                    height: \"100%\",\n                }).style(\"opacity\", 0);\n            }\n        }\n        if (this._element != null) {\n            // reattach existing element\n            selection.node().appendChild(this._element.node());\n        }\n        else {\n            this._element = selection.append(\"g\");\n            this._setup();\n        }\n        this._isAnchored = true;\n        this._onAnchorCallbacks.callCallbacks(this);\n        return this;\n    };\n    /**\n     * Adds a callback to be called on anchoring the Component to the DOM.\n     * If the Component is already anchored, the callback is called immediately.\n     *\n     * @param {ComponentCallback} callback\n     * @return {Component}\n     */\n    Component.prototype.onAnchor = function (callback) {\n        if (this._isAnchored) {\n            callback(this);\n        }\n        this._onAnchorCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called on anchoring the Component to the DOM.\n     * The callback is identified by reference equality.\n     *\n     * @param {ComponentCallback} callback\n     * @return {Component}\n     */\n    Component.prototype.offAnchor = function (callback) {\n        this._onAnchorCallbacks.delete(callback);\n        return this;\n    };\n    /**\n     * Creates additional elements as necessary for the Component to function.\n     * Called during anchor() if the Component's element has not been created yet.\n     * Override in subclasses to provide additional functionality.\n     */\n    Component.prototype._setup = function () {\n        var _this = this;\n        if (this._isSetup) {\n            return;\n        }\n        this._cssClasses.forEach(function (cssClass) {\n            _this._element.classed(cssClass, true);\n        });\n        this._cssClasses = new Utils.Set();\n        this._backgroundContainer = this._element.append(\"g\").classed(\"background-container\", true);\n        this._addBox(\"background-fill\", this._backgroundContainer);\n        this._content = this._element.append(\"g\").classed(\"content\", true);\n        this._foregroundContainer = this._element.append(\"g\").classed(\"foreground-container\", true);\n        this._boxContainer = this._element.append(\"g\").classed(\"box-container\", true);\n        if (this._clipPathEnabled) {\n            this._generateClipPath();\n        }\n        ;\n        this._boundingBox = this._addBox(\"bounding-box\");\n        this._isSetup = true;\n    };\n    /**\n     * Given available space in pixels, returns the minimum width and height this Component will need.\n     *\n     * @param {number} availableWidth\n     * @param {number} availableHeight\n     * @returns {SpaceRequest}\n     */\n    Component.prototype.requestedSpace = function (availableWidth, availableHeight) {\n        return {\n            minWidth: 0,\n            minHeight: 0,\n        };\n    };\n    /**\n     * Computes and sets the size, position, and alignment of the Component from the specified values.\n     * If no parameters are supplied and the Component is a root node,\n     * they are inferred from the size of the Component's element.\n     *\n     * @param {Point} [origin] Origin of the space offered to the Component.\n     * @param {number} [availableWidth] Available width in pixels.\n     * @param {number} [availableHeight] Available height in pixels.\n     * @returns {Component} The calling Component.\n     */\n    Component.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\n        var _this = this;\n        if (origin == null || availableWidth == null || availableHeight == null) {\n            if (this._element == null) {\n                throw new Error(\"anchor() must be called before computeLayout()\");\n            }\n            else if (this._isTopLevelComponent) {\n                // we are the root node, retrieve height/width from root SVG\n                origin = { x: 0, y: 0 };\n                // Set width/height to 100% if not specified, to allow accurate size calculation\n                // see http://www.w3.org/TR/CSS21/visudet.html#block-replaced-width\n                // and http://www.w3.org/TR/CSS21/visudet.html#inline-replaced-height\n                if (this._rootSVG.attr(\"width\") == null) {\n                    this._rootSVG.attr(\"width\", \"100%\");\n                }\n                if (this._rootSVG.attr(\"height\") == null) {\n                    this._rootSVG.attr(\"height\", \"100%\");\n                }\n                var elem = this._rootSVG.node();\n                availableWidth = Utils.DOM.elementWidth(elem);\n                availableHeight = Utils.DOM.elementHeight(elem);\n            }\n            else {\n                throw new Error(\"null arguments cannot be passed to computeLayout() on a non-root node\");\n            }\n        }\n        var size = this._sizeFromOffer(availableWidth, availableHeight);\n        this._width = size.width;\n        this._height = size.height;\n        var xAlignProportion = Component._xAlignToProportion[this._xAlignment];\n        var yAlignProportion = Component._yAlignToProportion[this._yAlignment];\n        this._origin = {\n            x: origin.x + (availableWidth - this.width()) * xAlignProportion,\n            y: origin.y + (availableHeight - this.height()) * yAlignProportion,\n        };\n        this._element.attr(\"transform\", \"translate(\" + this._origin.x + \",\" + this._origin.y + \")\");\n        this._boxes.forEach(function (b) { return b.attr(\"width\", _this.width()).attr(\"height\", _this.height()); });\n        if (this._resizeHandler != null) {\n            this._resizeHandler(size);\n        }\n        return this;\n    };\n    Component.prototype._sizeFromOffer = function (availableWidth, availableHeight) {\n        var requestedSpace = this.requestedSpace(availableWidth, availableHeight);\n        return {\n            width: this.fixedWidth() ? Math.min(availableWidth, requestedSpace.minWidth) : availableWidth,\n            height: this.fixedHeight() ? Math.min(availableHeight, requestedSpace.minHeight) : availableHeight,\n        };\n    };\n    /**\n     * Queues the Component for rendering.\n     *\n     * @returns {Component} The calling Component.\n     */\n    Component.prototype.render = function () {\n        if (this._isAnchored && this._isSetup && this.width() >= 0 && this.height() >= 0) {\n            RenderController.registerToRender(this);\n        }\n        return this;\n    };\n    Component.prototype._scheduleComputeLayout = function () {\n        if (this._isAnchored && this._isSetup) {\n            RenderController.registerToComputeLayoutAndRender(this);\n        }\n    };\n    /**\n     * Sets a callback that gets called when the component resizes. The size change\n     * is not guaranteed to be reflected by the DOM at the time the callback is fired.\n     *\n     * @param {IResizeHandler} [resizeHandler] Callback to be called when component resizes\n     */\n    Component.prototype.onResize = function (resizeHandler) {\n        this._resizeHandler = resizeHandler;\n        return this;\n    };\n    /**\n     * Renders the Component without waiting for the next frame. This method is a no-op on\n     * Component, Table, and Group; render them immediately with .renderTo() instead.\n     */\n    Component.prototype.renderImmediately = function () {\n        if (this._clipPathEnabled) {\n            this._updateClipPath();\n        }\n        return this;\n    };\n    /**\n     * Causes the Component to re-layout and render.\n     *\n     * This function should be called when a CSS change has occured that could\n     * influence the layout of the Component, such as changing the font size.\n     *\n     * @returns {Component} The calling Component.\n     */\n    Component.prototype.redraw = function () {\n        if (this._isAnchored && this._isSetup) {\n            if (this._isTopLevelComponent) {\n                this._scheduleComputeLayout();\n            }\n            else {\n                this.parent().redraw();\n            }\n        }\n        return this;\n    };\n    /**\n     * Renders the Component to a given <svg>.\n     *\n     * @param {String|d3.Selection} element A selector-string for the <svg>, or a d3 selection containing an <svg>.\n     * @returns {Component} The calling Component.\n     */\n    Component.prototype.renderTo = function (element) {\n        this.detach();\n        if (element != null) {\n            var selection = void 0;\n            if (typeof (element) === \"string\") {\n                selection = d3.select(element);\n            }\n            else if (element instanceof Element) {\n                selection = d3.select(element);\n            }\n            else {\n                selection = element;\n            }\n            if (!selection.node() || selection.node().nodeName.toLowerCase() !== \"svg\") {\n                throw new Error(\"Plottable requires a valid SVG to renderTo\");\n            }\n            this.anchor(selection);\n        }\n        if (this._element == null) {\n            throw new Error(\"If a Component has never been rendered before, then renderTo must be given a node to render to, \" +\n                \"or a d3.Selection, or a selector string\");\n        }\n        RenderController.registerToComputeLayoutAndRender(this);\n        // flush so that consumers can immediately attach to stuff we create in the DOM\n        RenderController.flush();\n        return this;\n    };\n    Component.prototype.xAlignment = function (xAlignment) {\n        if (xAlignment == null) {\n            return this._xAlignment;\n        }\n        xAlignment = xAlignment.toLowerCase();\n        if (Component._xAlignToProportion[xAlignment] == null) {\n            throw new Error(\"Unsupported alignment: \" + xAlignment);\n        }\n        this._xAlignment = xAlignment;\n        this.redraw();\n        return this;\n    };\n    Component.prototype.yAlignment = function (yAlignment) {\n        if (yAlignment == null) {\n            return this._yAlignment;\n        }\n        yAlignment = yAlignment.toLowerCase();\n        if (Component._yAlignToProportion[yAlignment] == null) {\n            throw new Error(\"Unsupported alignment: \" + yAlignment);\n        }\n        this._yAlignment = yAlignment;\n        this.redraw();\n        return this;\n    };\n    Component.prototype._addBox = function (className, parentElement) {\n        if (this._element == null) {\n            throw new Error(\"Adding boxes before anchoring is currently disallowed\");\n        }\n        parentElement = parentElement == null ? this._boxContainer : parentElement;\n        var box = parentElement.append(\"rect\");\n        if (className != null) {\n            box.classed(className, true);\n        }\n        this._boxes.push(box);\n        if (this.width() != null && this.height() != null) {\n            box.attr(\"width\", this.width()).attr(\"height\", this.height());\n        }\n        return box;\n    };\n    Component.prototype._generateClipPath = function () {\n        // The clip path will prevent content from overflowing its Component space.\n        this._clipPathID = Utils.DOM.generateUniqueClipPathId();\n        var clipPathParent = this._boxContainer.append(\"clipPath\").attr(\"id\", this._clipPathID);\n        this._addBox(\"clip-rect\", clipPathParent);\n        this._updateClipPath();\n    };\n    Component.prototype._updateClipPath = function () {\n        // HACKHACK: IE <= 9 does not respect the HTML base element in SVG.\n        // They don't need the current URL in the clip path reference.\n        var prefix = /MSIE [5-9]/.test(navigator.userAgent) ? \"\" : document.location.href;\n        prefix = prefix.split(\"#\")[0]; // To fix cases where an anchor tag was used\n        this._element.attr(\"clip-path\", \"url(\\\"\" + prefix + \"#\" + this._clipPathID + \"\\\")\");\n    };\n    /**\n     * Checks if the Component has a given CSS class.\n     *\n     * @param {string} cssClass The CSS class to check for.\n     */\n    Component.prototype.hasClass = function (cssClass) {\n        if (cssClass == null) {\n            return false;\n        }\n        if (this._element == null) {\n            return this._cssClasses.has(cssClass);\n        }\n        else {\n            return this._element.classed(cssClass);\n        }\n    };\n    /**\n     * Adds a given CSS class to the Component.\n     *\n     * @param {string} cssClass The CSS class to add.\n     * @returns {Component} The calling Component.\n     */\n    Component.prototype.addClass = function (cssClass) {\n        if (cssClass == null) {\n            return this;\n        }\n        if (this._element == null) {\n            this._cssClasses.add(cssClass);\n        }\n        else {\n            this._element.classed(cssClass, true);\n        }\n        return this;\n    };\n    /**\n     * Removes a given CSS class from the Component.\n     *\n     * @param {string} cssClass The CSS class to remove.\n     * @returns {Component} The calling Component.\n     */\n    Component.prototype.removeClass = function (cssClass) {\n        if (cssClass == null) {\n            return this;\n        }\n        if (this._element == null) {\n            this._cssClasses.delete(cssClass);\n        }\n        else {\n            this._element.classed(cssClass, false);\n        }\n        return this;\n    };\n    /**\n     * Checks if the Component has a fixed width or if it grows to fill available space.\n     * Returns false by default on the base Component class.\n     */\n    Component.prototype.fixedWidth = function () {\n        return false;\n    };\n    /**\n     * Checks if the Component has a fixed height or if it grows to fill available space.\n     * Returns false by default on the base Component class.\n     */\n    Component.prototype.fixedHeight = function () {\n        return false;\n    };\n    /**\n     * Detaches a Component from the DOM. The Component can be reused.\n     *\n     * This should only be used if you plan on reusing the calling Component. Otherwise, use destroy().\n     *\n     * @returns The calling Component.\n     */\n    Component.prototype.detach = function () {\n        this.parent(null);\n        if (this._isAnchored) {\n            this._element.remove();\n            if (this._isTopLevelComponent) {\n                this._rootSVG.select(\".\" + Component._SAFARI_EVENT_BACKING_CLASS).remove();\n            }\n        }\n        this._isAnchored = false;\n        this._onDetachCallbacks.callCallbacks(this);\n        return this;\n    };\n    /**\n     * Adds a callback to be called when the Component is detach()-ed.\n     *\n     * @param {ComponentCallback} callback\n     * @return {Component} The calling Component.\n     */\n    Component.prototype.onDetach = function (callback) {\n        this._onDetachCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback to be called when the Component is detach()-ed.\n     * The callback is identified by reference equality.\n     *\n     * @param {ComponentCallback} callback\n     * @return {Component} The calling Component.\n     */\n    Component.prototype.offDetach = function (callback) {\n        this._onDetachCallbacks.delete(callback);\n        return this;\n    };\n    Component.prototype.parent = function (parent) {\n        if (parent === undefined) {\n            return this._parent;\n        }\n        if (parent !== null && !parent.has(this)) {\n            throw new Error(\"Passed invalid parent\");\n        }\n        this._parent = parent;\n        return this;\n    };\n    /**\n     * @returns {Bounds} for the component in pixel space, where the topLeft\n     * represents the component's minimum x and y values and the bottomRight represents\n     * the component's maximum x and y values.\n     */\n    Component.prototype.bounds = function () {\n        var topLeft = this.origin();\n        return {\n            topLeft: topLeft,\n            bottomRight: {\n                x: topLeft.x + this.width(),\n                y: topLeft.y + this.height()\n            },\n        };\n    };\n    /**\n     * Removes a Component from the DOM and disconnects all listeners.\n     */\n    Component.prototype.destroy = function () {\n        this._destroyed = true;\n        this.detach();\n    };\n    /**\n     * Gets the width of the Component in pixels.\n     */\n    Component.prototype.width = function () {\n        return this._width;\n    };\n    /**\n     * Gets the height of the Component in pixels.\n     */\n    Component.prototype.height = function () {\n        return this._height;\n    };\n    /**\n     * Gets the origin of the Component relative to its parent.\n     *\n     * @return {Point}\n     */\n    Component.prototype.origin = function () {\n        return {\n            x: this._origin.x,\n            y: this._origin.y,\n        };\n    };\n    /**\n     * Gets the origin of the Component relative to the root <svg>.\n     *\n     * @return {Point}\n     */\n    Component.prototype.originToSVG = function () {\n        var origin = this.origin();\n        var ancestor = this.parent();\n        while (ancestor != null) {\n            var ancestorOrigin = ancestor.origin();\n            origin.x += ancestorOrigin.x;\n            origin.y += ancestorOrigin.y;\n            ancestor = ancestor.parent();\n        }\n        return origin;\n    };\n    /**\n     * Gets the Selection containing the <g> in front of the visual elements of the Component.\n     *\n     * Will return undefined if the Component has not been anchored.\n     *\n     * @return {d3.Selection}\n     */\n    Component.prototype.foreground = function () {\n        return this._foregroundContainer;\n    };\n    /**\n     * Gets a Selection containing a <g> that holds the visual elements of the Component.\n     *\n     * Will return undefined if the Component has not been anchored.\n     *\n     * @return {d3.Selection} content selection for the Component\n     */\n    Component.prototype.content = function () {\n        return this._content;\n    };\n    /**\n     * Gets the Selection containing the <g> behind the visual elements of the Component.\n     *\n     * Will return undefined if the Component has not been anchored.\n     *\n     * @return {d3.Selection} background selection for the Component\n     */\n    Component.prototype.background = function () {\n        return this._backgroundContainer;\n    };\n    Component._xAlignToProportion = {\n        \"left\": 0,\n        \"center\": 0.5,\n        \"right\": 1,\n    };\n    Component._yAlignToProportion = {\n        \"top\": 0,\n        \"center\": 0.5,\n        \"bottom\": 1,\n    };\n    Component._SAFARI_EVENT_BACKING_CLASS = \"safari-event-backing\";\n    return Component;\n}());\nexports.Component = Component;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/component.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/componentContainer.js":
/*!***************************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/componentContainer.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar component_1 = __webpack_require__(/*! ./component */ \"./node_modules/plottable/build/src/components/component.js\");\n/*\n * ComponentContainer class encapsulates Table and ComponentGroup's shared functionality.\n * It will not do anything if instantiated directly.\n */\nvar ComponentContainer = (function (_super) {\n    __extends(ComponentContainer, _super);\n    function ComponentContainer() {\n        var _this = this;\n        _super.call(this);\n        this._detachCallback = function (component) { return _this.remove(component); };\n    }\n    ComponentContainer.prototype.anchor = function (selection) {\n        var _this = this;\n        _super.prototype.anchor.call(this, selection);\n        this._forEach(function (c) { return c.anchor(_this.content()); });\n        return this;\n    };\n    ComponentContainer.prototype.render = function () {\n        this._forEach(function (c) { return c.render(); });\n        return this;\n    };\n    /**\n     * Checks whether the specified Component is in the ComponentContainer.\n     */\n    ComponentContainer.prototype.has = function (component) {\n        throw new Error(\"has() is not implemented on ComponentContainer\");\n    };\n    ComponentContainer.prototype._adoptAndAnchor = function (component) {\n        component.parent(this);\n        component.onDetach(this._detachCallback);\n        if (this._isAnchored) {\n            component.anchor(this.content());\n        }\n    };\n    /**\n     * Removes the specified Component from the ComponentContainer.\n     */\n    ComponentContainer.prototype.remove = function (component) {\n        if (this.has(component)) {\n            component.offDetach(this._detachCallback);\n            this._remove(component);\n            component.detach();\n            this.redraw();\n        }\n        return this;\n    };\n    /**\n     * Carry out the actual removal of a Component.\n     * Implementation dependent on the type of container.\n     *\n     * @return {boolean} true if the Component was successfully removed, false otherwise.\n     */\n    ComponentContainer.prototype._remove = function (component) {\n        return false;\n    };\n    /**\n     * Invokes a callback on each Component in the ComponentContainer.\n     */\n    ComponentContainer.prototype._forEach = function (callback) {\n        throw new Error(\"_forEach() is not implemented on ComponentContainer\");\n    };\n    /**\n     * Destroys the ComponentContainer and all Components within it.\n     */\n    ComponentContainer.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this._forEach(function (c) { return c.destroy(); });\n    };\n    return ComponentContainer;\n}(component_1.Component));\nexports.ComponentContainer = ComponentContainer;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/componentContainer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/dragBoxLayer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/dragBoxLayer.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Interactions = __webpack_require__(/*! ../interactions */ \"./node_modules/plottable/build/src/interactions/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar _1 = __webpack_require__(/*! ./ */ \"./node_modules/plottable/build/src/components/index.js\");\nvar selectionBoxLayer_1 = __webpack_require__(/*! ./selectionBoxLayer */ \"./node_modules/plottable/build/src/components/selectionBoxLayer.js\");\nvar DragBoxLayer = (function (_super) {\n    __extends(DragBoxLayer, _super);\n    /**\n     * Constructs a DragBoxLayer.\n     *\n     * A DragBoxLayer is a SelectionBoxLayer with a built-in Drag Interaction.\n     * A drag gesture will set the Bounds of the box.\n     * If resizing is enabled using resizable(true), the edges of box can be repositioned.\n     *\n     * @constructor\n     */\n    function DragBoxLayer() {\n        _super.call(this);\n        this._detectionRadius = 3;\n        this._resizable = false;\n        this._movable = false;\n        this._hasCorners = true;\n        this.addClass(\"drag-box-layer\");\n        this._dragInteraction = new Interactions.Drag();\n        this._setUpCallbacks();\n        this._dragInteraction.attachTo(this);\n        this._dragStartCallbacks = new Utils.CallbackSet();\n        this._dragCallbacks = new Utils.CallbackSet();\n        this._dragEndCallbacks = new Utils.CallbackSet();\n    }\n    DragBoxLayer.prototype._setUpCallbacks = function () {\n        var _this = this;\n        var resizingEdges;\n        var topLeft;\n        var bottomRight;\n        var lastEndPoint;\n        var DRAG_MODES = {\n            newBox: 0,\n            resize: 1,\n            move: 2,\n        };\n        var mode = DRAG_MODES.newBox;\n        var onDragStartCallback = function (startPoint) {\n            resizingEdges = _this._getResizingEdges(startPoint);\n            var bounds = _this.bounds();\n            var isInsideBox = bounds.topLeft.x <= startPoint.x && startPoint.x <= bounds.bottomRight.x &&\n                bounds.topLeft.y <= startPoint.y && startPoint.y <= bounds.bottomRight.y;\n            if (_this.boxVisible() && (resizingEdges.top || resizingEdges.bottom || resizingEdges.left || resizingEdges.right)) {\n                mode = DRAG_MODES.resize;\n            }\n            else if (_this.boxVisible() && _this.movable() && isInsideBox) {\n                mode = DRAG_MODES.move;\n            }\n            else {\n                mode = DRAG_MODES.newBox;\n                _this._setBounds({\n                    topLeft: startPoint,\n                    bottomRight: startPoint,\n                });\n                if (_this._xBoundsMode === _1.PropertyMode.VALUE && _this.xScale() != null) {\n                    _this._setXExtent([_this.xScale().invert(startPoint.x), _this.xScale().invert(startPoint.x)]);\n                }\n                if (_this._yBoundsMode === _1.PropertyMode.VALUE && _this.yScale() != null) {\n                    _this._setYExtent([_this.yScale().invert(startPoint.y), _this.yScale().invert(startPoint.y)]);\n                }\n                _this.render();\n            }\n            _this.boxVisible(true);\n            bounds = _this.bounds();\n            // copy points so changes to topLeft and bottomRight don't mutate bounds\n            topLeft = { x: bounds.topLeft.x, y: bounds.topLeft.y };\n            bottomRight = { x: bounds.bottomRight.x, y: bounds.bottomRight.y };\n            lastEndPoint = startPoint;\n            _this._dragStartCallbacks.callCallbacks(bounds);\n        };\n        var onDragCallback = function (startPoint, endPoint) {\n            switch (mode) {\n                case DRAG_MODES.newBox:\n                    bottomRight.x = endPoint.x;\n                    bottomRight.y = endPoint.y;\n                    break;\n                case DRAG_MODES.resize:\n                    if (resizingEdges.bottom) {\n                        bottomRight.y = endPoint.y;\n                    }\n                    else if (resizingEdges.top) {\n                        topLeft.y = endPoint.y;\n                    }\n                    if (resizingEdges.right) {\n                        bottomRight.x = endPoint.x;\n                    }\n                    else if (resizingEdges.left) {\n                        topLeft.x = endPoint.x;\n                    }\n                    break;\n                case DRAG_MODES.move:\n                    var dx = endPoint.x - lastEndPoint.x;\n                    var dy = endPoint.y - lastEndPoint.y;\n                    topLeft.x += dx;\n                    topLeft.y += dy;\n                    bottomRight.x += dx;\n                    bottomRight.y += dy;\n                    lastEndPoint = endPoint;\n                    break;\n            }\n            _this._setBounds({\n                topLeft: topLeft,\n                bottomRight: bottomRight,\n            });\n            if (_this._xBoundsMode === _1.PropertyMode.VALUE && _this.xScale() != null) {\n                _this._setXExtent([_this.xScale().invert(topLeft.x), _this.xScale().invert(bottomRight.x)]);\n            }\n            if (_this._yBoundsMode === _1.PropertyMode.VALUE && _this.yScale() != null) {\n                _this._setYExtent([_this.yScale().invert(topLeft.y), _this.yScale().invert(bottomRight.y)]);\n            }\n            _this.render();\n            _this._dragCallbacks.callCallbacks(_this.bounds());\n        };\n        var onDragEndCallback = function (startPoint, endPoint) {\n            if (mode === DRAG_MODES.newBox && startPoint.x === endPoint.x && startPoint.y === endPoint.y) {\n                _this.boxVisible(false);\n            }\n            _this._dragEndCallbacks.callCallbacks(_this.bounds());\n        };\n        this._dragInteraction.onDragStart(onDragStartCallback);\n        this._dragInteraction.onDrag(onDragCallback);\n        this._dragInteraction.onDragEnd(onDragEndCallback);\n        this._disconnectInteraction = function () {\n            _this._dragInteraction.offDragStart(onDragStartCallback);\n            _this._dragInteraction.offDrag(onDragCallback);\n            _this._dragInteraction.offDragEnd(onDragEndCallback);\n            _this._dragInteraction.detachFrom(_this);\n        };\n    };\n    DragBoxLayer.prototype._setup = function () {\n        var _this = this;\n        _super.prototype._setup.call(this);\n        var createLine = function () { return _this._box.append(\"line\").style({\n            \"opacity\": 0,\n            \"stroke\": \"pink\",\n            \"pointer-events\": \"visibleStroke\",\n        }); };\n        this._detectionEdgeT = createLine().classed(\"drag-edge-tb\", true);\n        this._detectionEdgeB = createLine().classed(\"drag-edge-tb\", true);\n        this._detectionEdgeL = createLine().classed(\"drag-edge-lr\", true);\n        this._detectionEdgeR = createLine().classed(\"drag-edge-lr\", true);\n        if (this._hasCorners) {\n            var createCorner = function () { return _this._box.append(\"circle\")\n                .style({\n                \"opacity\": 0,\n                \"fill\": \"pink\",\n                \"pointer-events\": \"visibleFill\",\n            }); };\n            this._detectionCornerTL = createCorner().classed(\"drag-corner-tl\", true);\n            this._detectionCornerTR = createCorner().classed(\"drag-corner-tr\", true);\n            this._detectionCornerBL = createCorner().classed(\"drag-corner-bl\", true);\n            this._detectionCornerBR = createCorner().classed(\"drag-corner-br\", true);\n        }\n    };\n    DragBoxLayer.prototype._getResizingEdges = function (p) {\n        var edges = {\n            top: false,\n            bottom: false,\n            left: false,\n            right: false,\n        };\n        if (!this.resizable()) {\n            return edges;\n        }\n        var bounds = this.bounds();\n        var t = bounds.topLeft.y;\n        var b = bounds.bottomRight.y;\n        var l = bounds.topLeft.x;\n        var r = bounds.bottomRight.x;\n        var rad = this._detectionRadius;\n        if (l - rad <= p.x && p.x <= r + rad) {\n            edges.top = (t - rad <= p.y && p.y <= t + rad);\n            edges.bottom = (b - rad <= p.y && p.y <= b + rad);\n        }\n        if (t - rad <= p.y && p.y <= b + rad) {\n            edges.left = (l - rad <= p.x && p.x <= l + rad);\n            edges.right = (r - rad <= p.x && p.x <= r + rad);\n        }\n        return edges;\n    };\n    DragBoxLayer.prototype.renderImmediately = function () {\n        _super.prototype.renderImmediately.call(this);\n        if (this.boxVisible()) {\n            var bounds = this.bounds();\n            var t = bounds.topLeft.y;\n            var b = bounds.bottomRight.y;\n            var l = bounds.topLeft.x;\n            var r = bounds.bottomRight.x;\n            this._detectionEdgeT.attr({\n                x1: l, y1: t, x2: r, y2: t,\n                \"stroke-width\": this._detectionRadius * 2,\n            });\n            this._detectionEdgeB.attr({\n                x1: l, y1: b, x2: r, y2: b,\n                \"stroke-width\": this._detectionRadius * 2,\n            });\n            this._detectionEdgeL.attr({\n                x1: l, y1: t, x2: l, y2: b,\n                \"stroke-width\": this._detectionRadius * 2,\n            });\n            this._detectionEdgeR.attr({\n                x1: r, y1: t, x2: r, y2: b,\n                \"stroke-width\": this._detectionRadius * 2,\n            });\n            if (this._hasCorners) {\n                this._detectionCornerTL.attr({ cx: l, cy: t, r: this._detectionRadius });\n                this._detectionCornerTR.attr({ cx: r, cy: t, r: this._detectionRadius });\n                this._detectionCornerBL.attr({ cx: l, cy: b, r: this._detectionRadius });\n                this._detectionCornerBR.attr({ cx: r, cy: b, r: this._detectionRadius });\n            }\n        }\n        return this;\n    };\n    DragBoxLayer.prototype.detectionRadius = function (r) {\n        if (r == null) {\n            return this._detectionRadius;\n        }\n        if (r < 0) {\n            throw new Error(\"detection radius cannot be negative.\");\n        }\n        this._detectionRadius = r;\n        this.render();\n        return this;\n    };\n    DragBoxLayer.prototype.resizable = function (canResize) {\n        if (canResize == null) {\n            return this._resizable;\n        }\n        this._resizable = canResize;\n        this._setResizableClasses(canResize);\n        return this;\n    };\n    // Sets resizable classes. Overridden by subclasses that only resize in one dimension.\n    DragBoxLayer.prototype._setResizableClasses = function (canResize) {\n        if (canResize && this.enabled()) {\n            this.addClass(\"x-resizable\");\n            this.addClass(\"y-resizable\");\n        }\n        else {\n            this.removeClass(\"x-resizable\");\n            this.removeClass(\"y-resizable\");\n        }\n    };\n    DragBoxLayer.prototype.movable = function (movable) {\n        if (movable == null) {\n            return this._movable;\n        }\n        this._movable = movable;\n        this._setMovableClass();\n        return this;\n    };\n    DragBoxLayer.prototype._setMovableClass = function () {\n        if (this.movable() && this.enabled()) {\n            this.addClass(\"movable\");\n        }\n        else {\n            this.removeClass(\"movable\");\n        }\n    };\n    /**\n     * Sets the callback to be called when dragging starts.\n     *\n     * @param {DragBoxCallback} callback\n     * @returns {DragBoxLayer} The calling DragBoxLayer.\n     */\n    DragBoxLayer.prototype.onDragStart = function (callback) {\n        this._dragStartCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback to be called when dragging starts.\n     *\n     * @param {DragBoxCallback} callback\n     * @returns {DragBoxLayer} The calling DragBoxLayer.\n     */\n    DragBoxLayer.prototype.offDragStart = function (callback) {\n        this._dragStartCallbacks.delete(callback);\n        return this;\n    };\n    /**\n     * Sets a callback to be called during dragging.\n     *\n     * @param {DragBoxCallback} callback\n     * @returns {DragBoxLayer} The calling DragBoxLayer.\n     */\n    DragBoxLayer.prototype.onDrag = function (callback) {\n        this._dragCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback to be called during dragging.\n     *\n     * @param {DragBoxCallback} callback\n     * @returns {DragBoxLayer} The calling DragBoxLayer.\n     */\n    DragBoxLayer.prototype.offDrag = function (callback) {\n        this._dragCallbacks.delete(callback);\n        return this;\n    };\n    /**\n     * Sets a callback to be called when dragging ends.\n     *\n     * @param {DragBoxCallback} callback\n     * @returns {DragBoxLayer} The calling DragBoxLayer.\n     */\n    DragBoxLayer.prototype.onDragEnd = function (callback) {\n        this._dragEndCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback to be called when dragging ends.\n     *\n     * @param {DragBoxCallback} callback\n     * @returns {DragBoxLayer} The calling DragBoxLayer.\n     */\n    DragBoxLayer.prototype.offDragEnd = function (callback) {\n        this._dragEndCallbacks.delete(callback);\n        return this;\n    };\n    /**\n     * Gets the internal Interactions.Drag of the DragBoxLayer.\n     */\n    DragBoxLayer.prototype.dragInteraction = function () {\n        return this._dragInteraction;\n    };\n    DragBoxLayer.prototype.enabled = function (enabled) {\n        if (enabled == null) {\n            return this._dragInteraction.enabled();\n        }\n        this._dragInteraction.enabled(enabled);\n        this._setResizableClasses(this.resizable());\n        this._setMovableClass();\n        return this;\n    };\n    DragBoxLayer.prototype.destroy = function () {\n        var _this = this;\n        _super.prototype.destroy.call(this);\n        this._dragStartCallbacks.forEach(function (callback) { return _this._dragCallbacks.delete(callback); });\n        this._dragCallbacks.forEach(function (callback) { return _this._dragCallbacks.delete(callback); });\n        this._dragEndCallbacks.forEach(function (callback) { return _this._dragEndCallbacks.delete(callback); });\n        this._disconnectInteraction();\n    };\n    DragBoxLayer.prototype.detach = function () {\n        this._resetState();\n        this._dragInteraction.detachFrom(this);\n        _super.prototype.detach.call(this);\n        return this;\n    };\n    DragBoxLayer.prototype.anchor = function (selection) {\n        this._dragInteraction.attachTo(this);\n        _super.prototype.anchor.call(this, selection);\n        return this;\n    };\n    DragBoxLayer.prototype._resetState = function () {\n        this.bounds({\n            topLeft: { x: 0, y: 0 },\n            bottomRight: { x: 0, y: 0 },\n        });\n    };\n    return DragBoxLayer;\n}(selectionBoxLayer_1.SelectionBoxLayer));\nexports.DragBoxLayer = DragBoxLayer;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/dragBoxLayer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/dragLineLayer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/dragLineLayer.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar guideLineLayer_1 = __webpack_require__(/*! ../components/guideLineLayer */ \"./node_modules/plottable/build/src/components/guideLineLayer.js\");\nvar Interactions = __webpack_require__(/*! ../interactions */ \"./node_modules/plottable/build/src/interactions/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar DragLineLayer = (function (_super) {\n    __extends(DragLineLayer, _super);\n    function DragLineLayer(orientation) {\n        var _this = this;\n        _super.call(this, orientation);\n        this._detectionRadius = 3;\n        this._enabled = true;\n        this.addClass(\"drag-line-layer\");\n        this.addClass(\"enabled\");\n        this._dragInteraction = new Interactions.Drag();\n        this._dragInteraction.attachTo(this);\n        var onLine = function (p) {\n            return (_this._isVertical() &&\n                _this.pixelPosition() - _this.detectionRadius() <= p.x &&\n                p.x <= _this.pixelPosition() + _this.detectionRadius()) ||\n                (!_this._isVertical() &&\n                    _this.pixelPosition() - _this.detectionRadius() <= p.y &&\n                    p.y <= _this.pixelPosition() + _this.detectionRadius());\n        };\n        var dragging = false;\n        var interactionDragStartCallback = function (start) {\n            if (onLine(start)) {\n                dragging = true;\n                _this._dragStartCallbacks.callCallbacks(_this);\n            }\n        };\n        this._dragInteraction.onDragStart(interactionDragStartCallback);\n        var interactionDragCallback = function (start, end) {\n            if (dragging) {\n                _this._setPixelPositionWithoutChangingMode(_this._isVertical() ? end.x : end.y);\n                _this._dragCallbacks.callCallbacks(_this);\n            }\n        };\n        this._dragInteraction.onDrag(interactionDragCallback);\n        var interactionDragEndCallback = function (start, end) {\n            if (dragging) {\n                dragging = false;\n                _this._dragEndCallbacks.callCallbacks(_this);\n            }\n        };\n        this._dragInteraction.onDragEnd(interactionDragEndCallback);\n        this._disconnectInteraction = function () {\n            _this._dragInteraction.offDragStart(interactionDragStartCallback);\n            _this._dragInteraction.offDrag(interactionDragCallback);\n            _this._dragInteraction.offDragEnd(interactionDragEndCallback);\n            _this._dragInteraction.detachFrom(_this);\n        };\n        this._dragStartCallbacks = new Utils.CallbackSet();\n        this._dragCallbacks = new Utils.CallbackSet();\n        this._dragEndCallbacks = new Utils.CallbackSet();\n    }\n    DragLineLayer.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._detectionEdge = this.content().append(\"line\").style({\n            \"opacity\": 0,\n            \"stroke\": \"pink\",\n            \"pointer-events\": \"visibleStroke\",\n        }).classed(\"drag-edge\", true);\n    };\n    DragLineLayer.prototype.renderImmediately = function () {\n        _super.prototype.renderImmediately.call(this);\n        this._detectionEdge.attr({\n            x1: this._isVertical() ? this.pixelPosition() : 0,\n            y1: this._isVertical() ? 0 : this.pixelPosition(),\n            x2: this._isVertical() ? this.pixelPosition() : this.width(),\n            y2: this._isVertical() ? this.height() : this.pixelPosition(),\n            \"stroke-width\": this._detectionRadius * 2,\n        });\n        return this;\n    };\n    DragLineLayer.prototype.detectionRadius = function (detectionRadius) {\n        if (detectionRadius == null) {\n            return this._detectionRadius;\n        }\n        if (detectionRadius < 0) {\n            throw new Error(\"detection radius cannot be negative.\");\n        }\n        this._detectionRadius = detectionRadius;\n        this.render();\n        return this;\n    };\n    DragLineLayer.prototype.enabled = function (enabled) {\n        if (enabled == null) {\n            return this._enabled;\n        }\n        this._enabled = enabled;\n        if (enabled) {\n            this.addClass(\"enabled\");\n        }\n        else {\n            this.removeClass(\"enabled\");\n        }\n        this._dragInteraction.enabled(enabled);\n        return this;\n    };\n    /**\n     * Sets the callback to be called when dragging starts.\n     * The callback will be passed the calling DragLineLayer.\n     *\n     * @param {DragLineCallback<D>} callback\n     * @returns {DragLineLayer<D>} The calling DragLineLayer.\n     */\n    DragLineLayer.prototype.onDragStart = function (callback) {\n        this._dragStartCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when dragging starts.\n     *\n     * @param {DragLineCallback<D>} callback\n     * @returns {DragLineLayer<D>} The calling DragLineLayer.\n     */\n    DragLineLayer.prototype.offDragStart = function (callback) {\n        this._dragStartCallbacks.delete(callback);\n        return this;\n    };\n    /**\n     * Sets a callback to be called during dragging.\n     * The callback will be passed the calling DragLineLayer.\n     *\n     * @param {DragLineCallback<D>} callback\n     * @returns {DragLineLayer<D>} The calling DragLineLayer.\n     */\n    DragLineLayer.prototype.onDrag = function (callback) {\n        this._dragCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called during dragging.\n     *\n     * @param {DragLineCallback<D>} callback\n     * @returns {DragLineLayer<D>} The calling DragLineLayer.\n     */\n    DragLineLayer.prototype.offDrag = function (callback) {\n        this._dragCallbacks.delete(callback);\n        return this;\n    };\n    /**\n     * Sets a callback to be called when dragging ends.\n     * The callback will be passed the calling DragLineLayer.\n     *\n     * @param {DragLineCallback<D>} callback\n     * @returns {DragLineLayer<D>} The calling DragLineLayer.\n     */\n    DragLineLayer.prototype.onDragEnd = function (callback) {\n        this._dragEndCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when dragging ends.\n     *\n     * @param {DragLineCallback<D>} callback\n     * @returns {DragLineLayer<D>} The calling DragLineLayer.\n     */\n    DragLineLayer.prototype.offDragEnd = function (callback) {\n        this._dragEndCallbacks.delete(callback);\n        return this;\n    };\n    DragLineLayer.prototype.destroy = function () {\n        var _this = this;\n        _super.prototype.destroy.call(this);\n        this._dragStartCallbacks.forEach(function (callback) { return _this._dragStartCallbacks.delete(callback); });\n        this._dragCallbacks.forEach(function (callback) { return _this._dragCallbacks.delete(callback); });\n        this._dragEndCallbacks.forEach(function (callback) { return _this._dragEndCallbacks.delete(callback); });\n        this._disconnectInteraction();\n    };\n    return DragLineLayer;\n}(guideLineLayer_1.GuideLineLayer));\nexports.DragLineLayer = DragLineLayer;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/dragLineLayer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/gridlines.js":
/*!******************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/gridlines.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar quantitativeScale_1 = __webpack_require__(/*! ../scales/quantitativeScale */ \"./node_modules/plottable/build/src/scales/quantitativeScale.js\");\nvar component_1 = __webpack_require__(/*! ./component */ \"./node_modules/plottable/build/src/components/component.js\");\nvar Gridlines = (function (_super) {\n    __extends(Gridlines, _super);\n    /**\n     * @constructor\n     * @param {QuantitativeScale} xScale The scale to base the x gridlines on. Pass null if no gridlines are desired.\n     * @param {QuantitativeScale} yScale The scale to base the y gridlines on. Pass null if no gridlines are desired.\n     */\n    function Gridlines(xScale, yScale) {\n        var _this = this;\n        if (xScale != null && !(quantitativeScale_1.QuantitativeScale.prototype.isPrototypeOf(xScale))) {\n            throw new Error(\"xScale needs to inherit from Scale.QuantitativeScale\");\n        }\n        if (yScale != null && !(quantitativeScale_1.QuantitativeScale.prototype.isPrototypeOf(yScale))) {\n            throw new Error(\"yScale needs to inherit from Scale.QuantitativeScale\");\n        }\n        _super.call(this);\n        this.addClass(\"gridlines\");\n        this._xScale = xScale;\n        this._yScale = yScale;\n        this._renderCallback = function (scale) { return _this.render(); };\n        if (this._xScale) {\n            this._xScale.onUpdate(this._renderCallback);\n        }\n        if (this._yScale) {\n            this._yScale.onUpdate(this._renderCallback);\n        }\n    }\n    Gridlines.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this._xScale) {\n            this._xScale.offUpdate(this._renderCallback);\n        }\n        if (this._yScale) {\n            this._yScale.offUpdate(this._renderCallback);\n        }\n        return this;\n    };\n    Gridlines.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._xLinesContainer = this.content().append(\"g\").classed(\"x-gridlines\", true);\n        this._yLinesContainer = this.content().append(\"g\").classed(\"y-gridlines\", true);\n    };\n    Gridlines.prototype.renderImmediately = function () {\n        _super.prototype.renderImmediately.call(this);\n        this._redrawXLines();\n        this._redrawYLines();\n        return this;\n    };\n    Gridlines.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\n        if (this._xScale != null) {\n            this._xScale.range([0, this.width()]);\n        }\n        if (this._yScale != null) {\n            this._yScale.range([this.height(), 0]);\n        }\n        return this;\n    };\n    Gridlines.prototype._redrawXLines = function () {\n        var _this = this;\n        if (this._xScale) {\n            var xTicks = this._xScale.ticks();\n            var getScaledXValue = function (tickVal) { return _this._xScale.scale(tickVal); };\n            var xLines = this._xLinesContainer.selectAll(\"line\").data(xTicks);\n            xLines.enter().append(\"line\");\n            xLines.attr(\"x1\", getScaledXValue)\n                .attr(\"y1\", 0)\n                .attr(\"x2\", getScaledXValue)\n                .attr(\"y2\", this.height())\n                .classed(\"zeroline\", function (t) { return t === 0; });\n            xLines.exit().remove();\n        }\n    };\n    Gridlines.prototype._redrawYLines = function () {\n        var _this = this;\n        if (this._yScale) {\n            var yTicks = this._yScale.ticks();\n            var getScaledYValue = function (tickVal) { return _this._yScale.scale(tickVal); };\n            var yLines = this._yLinesContainer.selectAll(\"line\").data(yTicks);\n            yLines.enter().append(\"line\");\n            yLines.attr(\"x1\", 0)\n                .attr(\"y1\", getScaledYValue)\n                .attr(\"x2\", this.width())\n                .attr(\"y2\", getScaledYValue)\n                .classed(\"zeroline\", function (t) { return t === 0; });\n            yLines.exit().remove();\n        }\n    };\n    return Gridlines;\n}(component_1.Component));\nexports.Gridlines = Gridlines;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/gridlines.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/group.js":
/*!**************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/group.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar componentContainer_1 = __webpack_require__(/*! ./componentContainer */ \"./node_modules/plottable/build/src/components/componentContainer.js\");\nvar Group = (function (_super) {\n    __extends(Group, _super);\n    /**\n     * Constructs a Group.\n     *\n     * A Group contains Components that will be rendered on top of each other.\n     * Components added later will be rendered above Components already in the Group.\n     *\n     * @constructor\n     * @param {Component[]} [components=[]] Components to be added to the Group.\n     */\n    function Group(components) {\n        var _this = this;\n        if (components === void 0) { components = []; }\n        _super.call(this);\n        this._components = [];\n        this.addClass(\"component-group\");\n        components.forEach(function (c) { return _this.append(c); });\n    }\n    Group.prototype._forEach = function (callback) {\n        this.components().forEach(callback);\n    };\n    /**\n     * Checks whether the specified Component is in the Group.\n     */\n    Group.prototype.has = function (component) {\n        return this._components.indexOf(component) >= 0;\n    };\n    Group.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\n        var requests = this._components.map(function (c) { return c.requestedSpace(offeredWidth, offeredHeight); });\n        return {\n            minWidth: Utils.Math.max(requests, function (request) { return request.minWidth; }, 0),\n            minHeight: Utils.Math.max(requests, function (request) { return request.minHeight; }, 0),\n        };\n    };\n    Group.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\n        var _this = this;\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\n        this._forEach(function (component) {\n            component.computeLayout({ x: 0, y: 0 }, _this.width(), _this.height());\n        });\n        return this;\n    };\n    Group.prototype._sizeFromOffer = function (availableWidth, availableHeight) {\n        return {\n            width: availableWidth,\n            height: availableHeight,\n        };\n    };\n    Group.prototype.fixedWidth = function () {\n        return this._components.every(function (c) { return c.fixedWidth(); });\n    };\n    Group.prototype.fixedHeight = function () {\n        return this._components.every(function (c) { return c.fixedHeight(); });\n    };\n    /**\n     * @return {Component[]} The Components in this Group.\n     */\n    Group.prototype.components = function () {\n        return this._components.slice();\n    };\n    /**\n     * Adds a Component to this Group.\n     * The added Component will be rendered above Components already in the Group.\n     */\n    Group.prototype.append = function (component) {\n        if (component != null && !this.has(component)) {\n            component.detach();\n            this._components.push(component);\n            this._adoptAndAnchor(component);\n            this.redraw();\n        }\n        return this;\n    };\n    Group.prototype._remove = function (component) {\n        var removeIndex = this._components.indexOf(component);\n        if (removeIndex >= 0) {\n            this._components.splice(removeIndex, 1);\n            return true;\n        }\n        return false;\n    };\n    return Group;\n}(componentContainer_1.ComponentContainer));\nexports.Group = Group;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/group.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/guideLineLayer.js":
/*!***********************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/guideLineLayer.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar component_1 = __webpack_require__(/*! ./component */ \"./node_modules/plottable/build/src/components/component.js\");\nvar PropertyMode;\n(function (PropertyMode) {\n    PropertyMode[PropertyMode[\"VALUE\"] = 0] = \"VALUE\";\n    PropertyMode[PropertyMode[\"PIXEL\"] = 1] = \"PIXEL\";\n})(PropertyMode || (PropertyMode = {}));\nvar GuideLineLayer = (function (_super) {\n    __extends(GuideLineLayer, _super);\n    function GuideLineLayer(orientation) {\n        var _this = this;\n        _super.call(this);\n        this._mode = PropertyMode.VALUE;\n        if (orientation !== GuideLineLayer.ORIENTATION_VERTICAL && orientation !== GuideLineLayer.ORIENTATION_HORIZONTAL) {\n            throw new Error(orientation + \" is not a valid orientation for GuideLineLayer\");\n        }\n        this._orientation = orientation;\n        this._clipPathEnabled = true;\n        this.addClass(\"guide-line-layer\");\n        if (this._isVertical()) {\n            this.addClass(\"vertical\");\n        }\n        else {\n            this.addClass(\"horizontal\");\n        }\n        this._scaleUpdateCallback = function () {\n            _this._syncPixelPositionAndValue();\n            _this.render();\n        };\n    }\n    GuideLineLayer.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._guideLine = this.content().append(\"line\").classed(\"guide-line\", true);\n    };\n    GuideLineLayer.prototype._sizeFromOffer = function (availableWidth, availableHeight) {\n        return {\n            width: availableWidth,\n            height: availableHeight,\n        };\n    };\n    GuideLineLayer.prototype._isVertical = function () {\n        return this._orientation === GuideLineLayer.ORIENTATION_VERTICAL;\n    };\n    GuideLineLayer.prototype.fixedWidth = function () {\n        return true;\n    };\n    GuideLineLayer.prototype.fixedHeight = function () {\n        return true;\n    };\n    GuideLineLayer.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\n        if (this.scale() != null) {\n            if (this._isVertical()) {\n                this.scale().range([0, this.width()]);\n            }\n            else {\n                this.scale().range([this.height(), 0]);\n            }\n        }\n        return this;\n    };\n    GuideLineLayer.prototype.renderImmediately = function () {\n        _super.prototype.renderImmediately.call(this);\n        this._syncPixelPositionAndValue();\n        this._guideLine.attr({\n            x1: this._isVertical() ? this.pixelPosition() : 0,\n            y1: this._isVertical() ? 0 : this.pixelPosition(),\n            x2: this._isVertical() ? this.pixelPosition() : this.width(),\n            y2: this._isVertical() ? this.height() : this.pixelPosition(),\n        });\n        return this;\n    };\n    // sets pixelPosition() or value() based on the other, depending on which was the last one set\n    GuideLineLayer.prototype._syncPixelPositionAndValue = function () {\n        if (this.scale() == null) {\n            return;\n        }\n        if (this._mode === PropertyMode.VALUE && this.value() != null) {\n            this._pixelPosition = this.scale().scale(this.value());\n        }\n        else if (this._mode === PropertyMode.PIXEL && this.pixelPosition() != null) {\n            this._value = this.scale().invert(this.pixelPosition());\n        }\n    };\n    GuideLineLayer.prototype._setPixelPositionWithoutChangingMode = function (pixelPosition) {\n        this._pixelPosition = pixelPosition;\n        if (this.scale() != null) {\n            this._value = this.scale().invert(this.pixelPosition());\n        }\n        this.render();\n    };\n    GuideLineLayer.prototype.scale = function (scale) {\n        if (scale == null) {\n            return this._scale;\n        }\n        var previousScale = this._scale;\n        if (previousScale != null) {\n            previousScale.offUpdate(this._scaleUpdateCallback);\n        }\n        this._scale = scale;\n        this._scale.onUpdate(this._scaleUpdateCallback);\n        this._syncPixelPositionAndValue();\n        this.redraw();\n        return this;\n    };\n    GuideLineLayer.prototype.value = function (value) {\n        if (value == null) {\n            return this._value;\n        }\n        this._value = value;\n        this._mode = PropertyMode.VALUE;\n        this._syncPixelPositionAndValue();\n        this.render();\n        return this;\n    };\n    GuideLineLayer.prototype.pixelPosition = function (pixelPosition) {\n        if (pixelPosition == null) {\n            return this._pixelPosition;\n        }\n        if (!Utils.Math.isValidNumber(pixelPosition)) {\n            throw new Error(\"pixelPosition must be a finite number\");\n        }\n        this._pixelPosition = pixelPosition;\n        this._mode = PropertyMode.PIXEL;\n        this._syncPixelPositionAndValue();\n        this.render();\n        return this;\n    };\n    GuideLineLayer.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.scale() != null) {\n            this.scale().offUpdate(this._scaleUpdateCallback);\n        }\n    };\n    GuideLineLayer.ORIENTATION_VERTICAL = \"vertical\";\n    GuideLineLayer.ORIENTATION_HORIZONTAL = \"horizontal\";\n    return GuideLineLayer;\n}(component_1.Component));\nexports.GuideLineLayer = GuideLineLayer;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/guideLineLayer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./dragBoxLayer */ \"./node_modules/plottable/build/src/components/dragBoxLayer.js\"));\n__export(__webpack_require__(/*! ./dragLineLayer */ \"./node_modules/plottable/build/src/components/dragLineLayer.js\"));\n__export(__webpack_require__(/*! ./gridlines */ \"./node_modules/plottable/build/src/components/gridlines.js\"));\n__export(__webpack_require__(/*! ./group */ \"./node_modules/plottable/build/src/components/group.js\"));\n__export(__webpack_require__(/*! ./guideLineLayer */ \"./node_modules/plottable/build/src/components/guideLineLayer.js\"));\n__export(__webpack_require__(/*! ./interpolatedColorLegend */ \"./node_modules/plottable/build/src/components/interpolatedColorLegend.js\"));\n__export(__webpack_require__(/*! ./label */ \"./node_modules/plottable/build/src/components/label.js\"));\n__export(__webpack_require__(/*! ./legend */ \"./node_modules/plottable/build/src/components/legend.js\"));\n__export(__webpack_require__(/*! ./plotGroup */ \"./node_modules/plottable/build/src/components/plotGroup.js\"));\n__export(__webpack_require__(/*! ./selectionBoxLayer */ \"./node_modules/plottable/build/src/components/selectionBoxLayer.js\"));\n__export(__webpack_require__(/*! ./table */ \"./node_modules/plottable/build/src/components/table.js\"));\n__export(__webpack_require__(/*! ./xDragBoxLayer */ \"./node_modules/plottable/build/src/components/xDragBoxLayer.js\"));\n__export(__webpack_require__(/*! ./yDragBoxLayer */ \"./node_modules/plottable/build/src/components/yDragBoxLayer.js\"));\nvar Alignment = (function () {\n    function Alignment() {\n    }\n    Alignment.TOP = \"top\";\n    Alignment.BOTTOM = \"bottom\";\n    Alignment.LEFT = \"left\";\n    Alignment.RIGHT = \"right\";\n    Alignment.CENTER = \"center\";\n    return Alignment;\n}());\nexports.Alignment = Alignment;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/index.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/interpolatedColorLegend.js":
/*!********************************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/interpolatedColorLegend.js ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SVGTypewriter = __webpack_require__(/*! svg-typewriter */ \"./node_modules/svg-typewriter/build/src/index.js\");\nvar Configs = __webpack_require__(/*! ../core/config */ \"./node_modules/plottable/build/src/core/config.js\");\nvar Formatters = __webpack_require__(/*! ../core/formatters */ \"./node_modules/plottable/build/src/core/formatters.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar component_1 = __webpack_require__(/*! ./component */ \"./node_modules/plottable/build/src/components/component.js\");\nvar InterpolatedColorLegend = (function (_super) {\n    __extends(InterpolatedColorLegend, _super);\n    /**\n     * Creates an InterpolatedColorLegend.\n     *\n     * The InterpolatedColorLegend consists of a sequence of swatches that show the\n     * associated InterpolatedColor Scale sampled at various points.\n     * Two labels show the maximum and minimum values of the InterpolatedColor Scale.\n     *\n     * @constructor\n     * @param {Scales.InterpolatedColor} interpolatedColorScale\n     */\n    function InterpolatedColorLegend(interpolatedColorScale) {\n        var _this = this;\n        _super.call(this);\n        this._textPadding = 5;\n        if (interpolatedColorScale == null) {\n            throw new Error(\"InterpolatedColorLegend requires a interpolatedColorScale\");\n        }\n        this._scale = interpolatedColorScale;\n        this._redrawCallback = function (scale) { return _this.redraw(); };\n        this._scale.onUpdate(this._redrawCallback);\n        this._formatter = Formatters.general();\n        this._orientation = \"horizontal\";\n        this._expands = false;\n        this.addClass(\"legend\");\n        this.addClass(\"interpolated-color-legend\");\n    }\n    InterpolatedColorLegend.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this._scale.offUpdate(this._redrawCallback);\n    };\n    InterpolatedColorLegend.prototype.formatter = function (formatter) {\n        if (formatter === undefined) {\n            return this._formatter;\n        }\n        this._formatter = formatter;\n        this.redraw();\n        return this;\n    };\n    InterpolatedColorLegend.prototype.expands = function (expands) {\n        if (expands == null) {\n            return this._expands;\n        }\n        this._expands = expands;\n        this.redraw();\n        return this;\n    };\n    InterpolatedColorLegend._ensureOrientation = function (orientation) {\n        orientation = orientation.toLowerCase();\n        if (orientation === \"horizontal\" || orientation === \"left\" || orientation === \"right\") {\n            return orientation;\n        }\n        else {\n            throw new Error(\"\\\"\" + orientation + \"\\\" is not a valid orientation for InterpolatedColorLegend\");\n        }\n    };\n    InterpolatedColorLegend.prototype.orientation = function (orientation) {\n        if (orientation == null) {\n            return this._orientation;\n        }\n        else {\n            this._orientation = InterpolatedColorLegend._ensureOrientation(orientation);\n            this.redraw();\n            return this;\n        }\n    };\n    InterpolatedColorLegend.prototype.fixedWidth = function () {\n        return !this.expands() || this._isVertical();\n    };\n    InterpolatedColorLegend.prototype.fixedHeight = function () {\n        return !this.expands() || !this._isVertical();\n    };\n    InterpolatedColorLegend.prototype._generateTicks = function (numSwatches) {\n        if (numSwatches === void 0) { numSwatches = InterpolatedColorLegend._DEFAULT_NUM_SWATCHES; }\n        var domain = this._scale.domain();\n        if (numSwatches === 1) {\n            return [domain[0]];\n        }\n        var slope = (domain[1] - domain[0]) / (numSwatches - 1);\n        var ticks = [];\n        for (var i = 0; i < numSwatches; i++) {\n            ticks.push(domain[0] + slope * i);\n        }\n        return ticks;\n    };\n    InterpolatedColorLegend.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._swatchContainer = this.content().append(\"g\").classed(\"swatch-container\", true);\n        this._swatchBoundingBox = this.content().append(\"rect\").classed(\"swatch-bounding-box\", true);\n        this._lowerLabel = this.content().append(\"g\").classed(InterpolatedColorLegend.LEGEND_LABEL_CLASS, true);\n        this._upperLabel = this.content().append(\"g\").classed(InterpolatedColorLegend.LEGEND_LABEL_CLASS, true);\n        this._measurer = new SVGTypewriter.Measurer(this.content());\n        this._wrapper = new SVGTypewriter.Wrapper();\n        this._writer = new SVGTypewriter.Writer(this._measurer, this._wrapper);\n    };\n    InterpolatedColorLegend.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\n        var _this = this;\n        var textHeight = this._measurer.measure().height;\n        var padding = textHeight;\n        var domain = this._scale.domain();\n        var labelWidths = domain.map(function (d) { return _this._measurer.measure(_this._formatter(d)).width; });\n        var desiredHeight;\n        var desiredWidth;\n        var numSwatches = InterpolatedColorLegend._DEFAULT_NUM_SWATCHES;\n        if (this._isVertical()) {\n            var longestWidth = Utils.Math.max(labelWidths, 0);\n            desiredWidth = padding + textHeight + this._textPadding + longestWidth + this._textPadding;\n            desiredHeight = numSwatches * textHeight;\n        }\n        else {\n            desiredHeight = padding + textHeight + padding;\n            desiredWidth = this._textPadding + labelWidths[0] + numSwatches * textHeight\n                + labelWidths[1] + this._textPadding;\n        }\n        return {\n            minWidth: desiredWidth,\n            minHeight: desiredHeight,\n        };\n    };\n    InterpolatedColorLegend.prototype._isVertical = function () {\n        return this._orientation !== \"horizontal\";\n    };\n    InterpolatedColorLegend.prototype.renderImmediately = function () {\n        var _this = this;\n        _super.prototype.renderImmediately.call(this);\n        var domain = this._scale.domain();\n        var text0 = this._formatter(domain[0]);\n        var text0Width = this._measurer.measure(text0).width;\n        var text1 = this._formatter(domain[1]);\n        var text1Width = this._measurer.measure(text1).width;\n        var textHeight = this._measurer.measure().height;\n        var textPadding = this._textPadding;\n        var upperLabelShift = { x: 0, y: 0 };\n        var lowerLabelShift = { x: 0, y: 0 };\n        var lowerWriteOptions = {\n            selection: this._lowerLabel,\n            xAlign: \"center\",\n            yAlign: \"center\",\n            textRotation: 0,\n        };\n        var upperWriteOptions = {\n            selection: this._upperLabel,\n            xAlign: \"center\",\n            yAlign: \"center\",\n            textRotation: 0,\n        };\n        var swatchWidth;\n        var swatchHeight;\n        var swatchX;\n        var swatchY;\n        var boundingBoxAttr = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n        var padding;\n        var numSwatches;\n        if (this._isVertical()) {\n            numSwatches = Math.floor(this.height());\n            var longestTextWidth_1 = Math.max(text0Width, text1Width);\n            padding = (this.width() - longestTextWidth_1 - 2 * this._textPadding) / 2;\n            swatchWidth = Math.max(this.width() - padding - 2 * textPadding - longestTextWidth_1, 0);\n            swatchHeight = 1;\n            swatchY = function (d, i) { return _this.height() - (i + 1); };\n            upperWriteOptions.yAlign = \"top\";\n            upperLabelShift.y = 0;\n            lowerWriteOptions.yAlign = \"bottom\";\n            lowerLabelShift.y = 0;\n            if (this._orientation === \"left\") {\n                swatchX = function (d, i) { return textPadding + longestTextWidth_1 + textPadding; };\n                upperWriteOptions.xAlign = \"right\";\n                upperLabelShift.x = -(padding + swatchWidth + textPadding);\n                lowerWriteOptions.xAlign = \"right\";\n                lowerLabelShift.x = -(padding + swatchWidth + textPadding);\n            }\n            else {\n                swatchX = function (d, i) { return padding; };\n                upperWriteOptions.xAlign = \"left\";\n                upperLabelShift.x = padding + swatchWidth + textPadding;\n                lowerWriteOptions.xAlign = \"left\";\n                lowerLabelShift.x = padding + swatchWidth + textPadding;\n            }\n            boundingBoxAttr[\"width\"] = swatchWidth;\n            boundingBoxAttr[\"height\"] = numSwatches * swatchHeight;\n        }\n        else {\n            padding = Math.max(textPadding, (this.height() - textHeight) / 2);\n            numSwatches = Math.max(Math.floor(this.width() - textPadding * 4 - text0Width - text1Width), 0);\n            swatchWidth = 1;\n            swatchHeight = Math.max((this.height() - 2 * padding), 0);\n            swatchX = function (d, i) { return Math.floor(text0Width + 2 * textPadding) + i; };\n            swatchY = function (d, i) { return padding; };\n            upperWriteOptions.xAlign = \"right\";\n            upperLabelShift.x = -textPadding;\n            lowerWriteOptions.xAlign = \"left\";\n            lowerLabelShift.x = textPadding;\n            boundingBoxAttr[\"y\"] = padding;\n            boundingBoxAttr[\"width\"] = numSwatches * swatchWidth;\n            boundingBoxAttr[\"height\"] = swatchHeight;\n        }\n        boundingBoxAttr[\"x\"] = swatchX(null, 0); // position of the first swatch\n        this._upperLabel.text(\"\"); // clear the upper label\n        this._writer.write(text1, this.width(), this.height(), upperWriteOptions);\n        var upperTranslateString = \"translate(\" + upperLabelShift.x + \", \" + upperLabelShift.y + \")\";\n        this._upperLabel.attr(\"transform\", upperTranslateString);\n        this._lowerLabel.text(\"\"); // clear the lower label\n        this._writer.write(text0, this.width(), this.height(), lowerWriteOptions);\n        var lowerTranslateString = \"translate(\" + lowerLabelShift.x + \", \" + lowerLabelShift.y + \")\";\n        this._lowerLabel.attr(\"transform\", lowerTranslateString);\n        this._swatchBoundingBox.attr(boundingBoxAttr);\n        var ticks = this._generateTicks(numSwatches);\n        var swatches = this._swatchContainer.selectAll(\"rect.swatch\").data(ticks);\n        var rects = swatches.enter().append(\"rect\").classed(\"swatch\", true);\n        swatches.exit().remove();\n        swatches.attr({\n            \"fill\": function (d, i) { return _this._scale.scale(d); },\n            \"width\": swatchWidth,\n            \"height\": swatchHeight,\n            \"x\": swatchX,\n            \"y\": swatchY,\n            \"shape-rendering\": \"crispEdges\",\n        });\n        if (Configs.ADD_TITLE_ELEMENTS) {\n            rects.append(\"title\").text(function (d) { return _this._formatter(d); });\n        }\n        return this;\n    };\n    InterpolatedColorLegend._DEFAULT_NUM_SWATCHES = 11;\n    /**\n     * The css class applied to the legend labels.\n     */\n    InterpolatedColorLegend.LEGEND_LABEL_CLASS = \"legend-label\";\n    return InterpolatedColorLegend;\n}(component_1.Component));\nexports.InterpolatedColorLegend = InterpolatedColorLegend;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/interpolatedColorLegend.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/label.js":
/*!**************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/label.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SVGTypewriter = __webpack_require__(/*! svg-typewriter */ \"./node_modules/svg-typewriter/build/src/index.js\");\nvar component_1 = __webpack_require__(/*! ./component */ \"./node_modules/plottable/build/src/components/component.js\");\nvar Label = (function (_super) {\n    __extends(Label, _super);\n    /**\n     * A Label is a Component that displays a single line of text.\n     *\n     * @constructor\n     * @param {string} [displayText=\"\"] The text of the Label.\n     * @param {number} [angle=0] The angle of the Label in degrees (-90/0/90). 0 is horizontal.\n     */\n    function Label(displayText, angle) {\n        if (displayText === void 0) { displayText = \"\"; }\n        if (angle === void 0) { angle = 0; }\n        _super.call(this);\n        this.addClass(\"label\");\n        this.text(displayText);\n        this.angle(angle);\n        this.xAlignment(\"center\").yAlignment(\"center\");\n        this._padding = 0;\n    }\n    Label.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\n        var desiredWH = this._measurer.measure(this._text);\n        var desiredWidth = (this.angle() === 0 ? desiredWH.width : desiredWH.height) + 2 * this.padding();\n        var desiredHeight = (this.angle() === 0 ? desiredWH.height : desiredWH.width) + 2 * this.padding();\n        return {\n            minWidth: desiredWidth,\n            minHeight: desiredHeight,\n        };\n    };\n    Label.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._textContainer = this.content().append(\"g\");\n        this._measurer = new SVGTypewriter.CacheMeasurer(this._textContainer);\n        this._wrapper = new SVGTypewriter.Wrapper();\n        this._writer = new SVGTypewriter.Writer(this._measurer, this._wrapper);\n        this.text(this._text);\n    };\n    Label.prototype.text = function (displayText) {\n        if (displayText == null) {\n            return this._text;\n        }\n        else {\n            if (typeof displayText !== \"string\") {\n                throw new Error(\"Label.text() only takes strings as input\");\n            }\n            this._text = displayText;\n            this.redraw();\n            return this;\n        }\n    };\n    Label.prototype.angle = function (angle) {\n        if (angle == null) {\n            return this._angle;\n        }\n        else {\n            angle %= 360;\n            if (angle > 180) {\n                angle -= 360;\n            }\n            else if (angle < -180) {\n                angle += 360;\n            }\n            if (angle === -90 || angle === 0 || angle === 90) {\n                this._angle = angle;\n            }\n            else {\n                throw new Error(angle + \" is not a valid angle for Label\");\n            }\n            this.redraw();\n            return this;\n        }\n    };\n    Label.prototype.padding = function (padAmount) {\n        if (padAmount == null) {\n            return this._padding;\n        }\n        else {\n            padAmount = +padAmount;\n            if (padAmount < 0) {\n                throw new Error(padAmount + \" is not a valid padding value. Cannot be less than 0.\");\n            }\n            this._padding = padAmount;\n            this.redraw();\n            return this;\n        }\n    };\n    Label.prototype.fixedWidth = function () {\n        return true;\n    };\n    Label.prototype.fixedHeight = function () {\n        return true;\n    };\n    Label.prototype.renderImmediately = function () {\n        _super.prototype.renderImmediately.call(this);\n        // HACKHACK SVGTypewriter.remove existing content - #21 on SVGTypewriter.\n        this._textContainer.selectAll(\"g\").remove();\n        var textMeasurement = this._measurer.measure(this._text);\n        var heightPadding = Math.max(Math.min((this.height() - textMeasurement.height) / 2, this.padding()), 0);\n        var widthPadding = Math.max(Math.min((this.width() - textMeasurement.width) / 2, this.padding()), 0);\n        this._textContainer.attr(\"transform\", \"translate(\" + widthPadding + \",\" + heightPadding + \")\");\n        var writeWidth = this.width() - 2 * widthPadding;\n        var writeHeight = this.height() - 2 * heightPadding;\n        var writeOptions = {\n            selection: this._textContainer,\n            xAlign: this.xAlignment(),\n            yAlign: this.yAlignment(),\n            textRotation: this.angle(),\n        };\n        this._writer.write(this._text, writeWidth, writeHeight, writeOptions);\n        return this;\n    };\n    return Label;\n}(component_1.Component));\nexports.Label = Label;\nvar TitleLabel = (function (_super) {\n    __extends(TitleLabel, _super);\n    /**\n     * @constructor\n     * @param {string} [text]\n     * @param {number} [angle] One of -90/0/90. 0 is horizontal.\n     */\n    function TitleLabel(text, angle) {\n        _super.call(this, text, angle);\n        this.addClass(TitleLabel.TITLE_LABEL_CLASS);\n    }\n    TitleLabel.TITLE_LABEL_CLASS = \"title-label\";\n    return TitleLabel;\n}(Label));\nexports.TitleLabel = TitleLabel;\nvar AxisLabel = (function (_super) {\n    __extends(AxisLabel, _super);\n    /**\n     * @constructor\n     * @param {string} [text]\n     * @param {number} [angle] One of -90/0/90. 0 is horizontal.\n     */\n    function AxisLabel(text, angle) {\n        _super.call(this, text, angle);\n        this.addClass(AxisLabel.AXIS_LABEL_CLASS);\n    }\n    AxisLabel.AXIS_LABEL_CLASS = \"axis-label\";\n    return AxisLabel;\n}(Label));\nexports.AxisLabel = AxisLabel;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/label.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/legend.js":
/*!***************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/legend.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar SVGTypewriter = __webpack_require__(/*! svg-typewriter */ \"./node_modules/svg-typewriter/build/src/index.js\");\nvar Configs = __webpack_require__(/*! ../core/config */ \"./node_modules/plottable/build/src/core/config.js\");\nvar Formatters = __webpack_require__(/*! ../core/formatters */ \"./node_modules/plottable/build/src/core/formatters.js\");\nvar SymbolFactories = __webpack_require__(/*! ../core/symbolFactories */ \"./node_modules/plottable/build/src/core/symbolFactories.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar component_1 = __webpack_require__(/*! ./component */ \"./node_modules/plottable/build/src/components/component.js\");\n/**\n * The Legend's row representations. Stores positioning information\n * and column data.\n */\nvar LegendRow = (function () {\n    function LegendRow(\n        /**\n         * Columns within the row\n         * @param {LegendColumn<any>[]} columns\n         */\n        columns, \n        /**\n         * Padding applied below the row. Affects the spacing between rows. Defaults to 0.\n         * @param {bottomPadding} number\n         */\n        bottomPadding, \n        /**\n         * Sets the maximum allowable width of this column.\n         * @param {number} maxWidth\n         */\n        maxWidth) {\n        if (columns === void 0) { columns = []; }\n        if (bottomPadding === void 0) { bottomPadding = 0; }\n        if (maxWidth === void 0) { maxWidth = Infinity; }\n        this.columns = columns;\n        this.bottomPadding = bottomPadding;\n        this.maxWidth = maxWidth;\n    }\n    /**\n     * Adds a column to the list of columns within the row. May readjust the size of the\n     * column to fit within the row\n     *\n     * @param {LegendColumn<any>} column\n     */\n    LegendRow.prototype.addColumn = function (column) {\n        var desiredColumnWidth = column.width;\n        // choose the smaller of 1) remaining space, 2) desired width\n        var widthRemaining = this.getWidthAvailable();\n        column.width = Math.min(widthRemaining, desiredColumnWidth);\n        this.columns.push(column);\n    };\n    /**\n     * Returns the bounds the column, relative to the row.\n     * @param {number} columnIndex The index of the column in question\n     * @returns {Bounds} bounds\n     */\n    LegendRow.prototype.getBounds = function (columnIndex) {\n        var column = this.columns[columnIndex];\n        var columnXOffset = 0;\n        for (var i = 0; i < columnIndex; i++) {\n            columnXOffset += this.columns[i].width;\n        }\n        return {\n            topLeft: { x: columnXOffset, y: 0 },\n            bottomRight: {\n                x: columnXOffset + column.width,\n                y: column.height,\n            }\n        };\n    };\n    /**\n     * Returns the height of the row, including the bottomPadding.\n     * @return {number} height\n     */\n    LegendRow.prototype.getHeight = function () {\n        return Utils.Math.max(this.columns.map(function (_a) {\n            var height = _a.height;\n            return height;\n        }), 0) + this.bottomPadding;\n    };\n    /**\n     * Returns the current width of the row constrained by maxWidth, if set.\n     * @returns {number} width\n     */\n    LegendRow.prototype.getWidth = function () {\n        return Math.min(this.columns.reduce(function (sum, _a) {\n            var width = _a.width;\n            return sum + width;\n        }, 0), this.maxWidth);\n    };\n    /**\n     * Returns the remaining width available in the row based on the maximum\n     * width of this row.\n     * @returns {number} widthRemaining\n     */\n    LegendRow.prototype.getWidthAvailable = function () {\n        var widthConsumed = this.getWidth();\n        return Math.max(this.maxWidth - widthConsumed, 0);\n    };\n    return LegendRow;\n}());\n/**\n * Stores LegendRows. Useful for calculating and maintaining\n * positioning information about the Legend.\n */\nvar LegendTable = (function () {\n    function LegendTable(maxWidth, maxHeight, padding, rows) {\n        if (maxWidth === void 0) { maxWidth = Infinity; }\n        if (maxHeight === void 0) { maxHeight = Infinity; }\n        if (padding === void 0) { padding = 0; }\n        if (rows === void 0) { rows = []; }\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this.padding = padding;\n        this.rows = rows;\n    }\n    LegendTable.prototype.addRow = function (row) {\n        row.maxWidth = this.maxWidth - this.padding * 2;\n        this.rows.push(row);\n    };\n    /**\n     * Returns the bounds of the column relative to the parent and siblings of the\n     * column.\n     *\n     * @param {number} rowIndex The parent row containing the desired column.\n     * @param {number} columnIndex The column to calculate bounds.\n     * @returns {Bounds}\n     */\n    LegendTable.prototype.getColumnBounds = function (rowIndex, columnIndex) {\n        var rowBounds = this.getRowBounds(rowIndex);\n        var columnBounds = this.rows[rowIndex].getBounds(columnIndex);\n        columnBounds.topLeft.x += rowBounds.topLeft.x;\n        columnBounds.bottomRight.x += rowBounds.topLeft.x;\n        columnBounds.topLeft.y += rowBounds.topLeft.y;\n        columnBounds.bottomRight.y += rowBounds.topLeft.y;\n        return columnBounds;\n    };\n    /**\n     * Returns the bounds relative to the parent and siblings of the row.\n     *\n     * @param {number} rowIndex The row to calculate bounds\n     * @returns {Bounds}\n     */\n    LegendTable.prototype.getRowBounds = function (rowIndex) {\n        var rowXOffset = this.padding;\n        var rowYOffset = this.padding;\n        for (var i = 0; i < rowIndex; i++) {\n            rowYOffset += this.rows[i].getHeight();\n        }\n        var rowBounds = {\n            topLeft: { x: rowXOffset, y: rowYOffset },\n            bottomRight: {\n                x: rowXOffset + this.rows[rowIndex].getWidth(),\n                y: rowYOffset + this.rows[rowIndex].getHeight(),\n            }\n        };\n        return rowBounds;\n    };\n    /**\n     * Returns the height of the Table, constrained by a maximum height, if set.\n     * The height includes the padding, if set.\n     * @returns {number} height\n     */\n    LegendTable.prototype.getHeight = function () {\n        return Math.min(this.rows.reduce(function (sum, row) { return sum + row.getHeight(); }, 0) + this.padding * 2, this.maxHeight);\n    };\n    /**\n     * Returns the width of the table, constrained by the maximum width, if set.\n     * The width includes the padding, if set.\n     * @returns {number} width\n     */\n    LegendTable.prototype.getWidth = function () {\n        return Math.min(Utils.Math.max(this.rows.map(function (row) { return row.getWidth(); }), 0) + this.padding * 2, this.maxWidth);\n    };\n    return LegendTable;\n}());\nvar Legend = (function (_super) {\n    __extends(Legend, _super);\n    /**\n     * The Legend consists of a series of entries, each with a color and label taken from the Color Scale.\n     *\n     * @constructor\n     * @param {Scale.Color} scale\n     */\n    function Legend(colorScale) {\n        var _this = this;\n        _super.call(this);\n        this._padding = 5;\n        this._rowBottomPadding = 3;\n        this.addClass(\"legend\");\n        this.maxEntriesPerRow(1);\n        if (colorScale == null) {\n            throw new Error(\"Legend requires a colorScale\");\n        }\n        this._colorScale = colorScale;\n        this._redrawCallback = function (scale) { return _this.redraw(); };\n        this._colorScale.onUpdate(this._redrawCallback);\n        this._formatter = Formatters.identity();\n        this.maxLinesPerEntry(1);\n        this.xAlignment(\"right\").yAlignment(\"top\");\n        this.comparator(function (a, b) {\n            var formattedText = _this._colorScale.domain().slice().map(function (d) { return _this._formatter(d); });\n            return formattedText.indexOf(a) - formattedText.indexOf(b);\n        });\n        this._symbolFactoryAccessor = function () { return SymbolFactories.circle(); };\n        this._symbolOpacityAccessor = function () { return 1; };\n    }\n    Legend.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        var fakeLegendRow = this.content().append(\"g\").classed(Legend.LEGEND_ROW_CLASS, true);\n        var fakeLegendEntry = fakeLegendRow.append(\"g\").classed(Legend.LEGEND_ENTRY_CLASS, true);\n        fakeLegendEntry.append(\"text\");\n        this._measurer = new SVGTypewriter.Measurer(fakeLegendRow);\n        this._wrapper = new SVGTypewriter.Wrapper().maxLines(this.maxLinesPerEntry());\n        this._writer = new SVGTypewriter.Writer(this._measurer, this._wrapper).addTitleElement(Configs.ADD_TITLE_ELEMENTS);\n    };\n    Legend.prototype.formatter = function (formatter) {\n        if (formatter == null) {\n            return this._formatter;\n        }\n        this._formatter = formatter;\n        this.redraw();\n        return this;\n    };\n    Legend.prototype.maxEntriesPerRow = function (maxEntriesPerRow) {\n        if (maxEntriesPerRow == null) {\n            return this._maxEntriesPerRow;\n        }\n        else {\n            this._maxEntriesPerRow = maxEntriesPerRow;\n            this.redraw();\n            return this;\n        }\n    };\n    Legend.prototype.maxLinesPerEntry = function (maxLinesPerEntry) {\n        if (maxLinesPerEntry == null) {\n            return this._maxLinesPerEntry;\n        }\n        else {\n            this._maxLinesPerEntry = maxLinesPerEntry;\n            this.redraw();\n            return this;\n        }\n    };\n    Legend.prototype.maxWidth = function (maxWidth) {\n        if (maxWidth == null) {\n            return this._maxWidth;\n        }\n        else {\n            this._maxWidth = maxWidth;\n            this.redraw();\n            return this;\n        }\n    };\n    Legend.prototype.comparator = function (comparator) {\n        if (comparator == null) {\n            return this._comparator;\n        }\n        else {\n            this._comparator = comparator;\n            this.redraw();\n            return this;\n        }\n    };\n    Legend.prototype.colorScale = function (colorScale) {\n        if (colorScale != null) {\n            this._colorScale.offUpdate(this._redrawCallback);\n            this._colorScale = colorScale;\n            this._colorScale.onUpdate(this._redrawCallback);\n            this.redraw();\n            return this;\n        }\n        else {\n            return this._colorScale;\n        }\n    };\n    Legend.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        this._colorScale.offUpdate(this._redrawCallback);\n    };\n    Legend.prototype._buildLegendTable = function (width, height) {\n        var _this = this;\n        var textHeight = this._measurer.measure().height;\n        var table = new LegendTable(width, height, this._padding);\n        var entryNames = this._colorScale.domain().slice().sort(function (a, b) { return _this._comparator(_this._formatter(a), _this._formatter(b)); });\n        var row = new LegendRow();\n        table.addRow(row);\n        row.bottomPadding = this._rowBottomPadding;\n        entryNames.forEach(function (name, index) {\n            if (row.columns.length / 2 === _this.maxEntriesPerRow()) {\n                // we add two columns per entry, a symbol column and a name column\n                // if the current row is full, according to the number of entries\n                // we're allowed to have per row, we need to allocate new space\n                row = new LegendRow();\n                row.bottomPadding = _this._rowBottomPadding;\n                table.addRow(row);\n            }\n            var availableWidth = row.getWidthAvailable();\n            var formattedName = _this._formatter(name);\n            // this is the width of the series name without any line wrapping\n            // it is the most optimal presentation of the name\n            var unwrappedNameWidth = _this._measurer.measure(formattedName).width;\n            var willBeSquished = (availableWidth - textHeight - unwrappedNameWidth) < 0;\n            if (willBeSquished && row.columns.length > 1) {\n                // adding the entry to this row will squish this\n                // entry. The row already contains entries so create\n                // a new row to add this entry to for optimal display\n                row = new LegendRow();\n                row.bottomPadding = _this._rowBottomPadding;\n                table.addRow(row);\n            }\n            var symbolColumn = { width: textHeight, height: textHeight, data: { name: name, type: \"symbol\" } };\n            row.addColumn(symbolColumn);\n            // the space consumed by the name field is the minimum of the space available in the table\n            // and the actual width consumed by the name\n            availableWidth = row.getWidthAvailable();\n            var usedNameWidth = Math.min(availableWidth, unwrappedNameWidth);\n            _this._wrapper.maxLines(_this.maxLinesPerEntry());\n            var numberOfRows = _this._wrapper.wrap(formattedName, _this._measurer, usedNameWidth).noLines;\n            var nameColumnHeight = numberOfRows * textHeight;\n            var nameColumn = { width: usedNameWidth, height: nameColumnHeight, data: { name: name, type: \"text\" } };\n            row.addColumn(nameColumn);\n        });\n        return table;\n    };\n    Legend.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\n        // if max width is set, the table is guaranteed to be at most maxWidth wide.\n        // if max width is not set, the table will be as wide as the longest untruncated row\n        var table = this._buildLegendTable(Utils.Math.min([this.maxWidth(), offeredWidth], offeredWidth), offeredHeight);\n        return {\n            minHeight: table.getHeight(),\n            minWidth: table.getWidth()\n        };\n    };\n    /**\n     * Gets the Entities (representing Legend entries) at a particular point.\n     * Returns an empty array if no Entities are present at that location.\n     *\n     * @param {Point} p\n     * @returns {Entity<Legend>[]}\n     */\n    Legend.prototype.entitiesAt = function (p) {\n        var _this = this;\n        if (!this._isSetup) {\n            return [];\n        }\n        var table = this._buildLegendTable(this.width(), this.height());\n        return table.rows.reduce(function (entity, row, rowIndex) {\n            if (entity.length !== 0) {\n                // we've already found the nearest entity; just return it.\n                return entity;\n            }\n            var rowBounds = table.getRowBounds(rowIndex);\n            var withinRow = Utils.Math.within(p, rowBounds);\n            if (!withinRow) {\n                // the nearest entity isn't within this row, continue;\n                return entity;\n            }\n            return row.columns.reduce(function (entity, column, columnIndex) {\n                var columnBounds = table.getColumnBounds(rowIndex, columnIndex);\n                var withinColumn = Utils.Math.within(p, columnBounds);\n                if (withinColumn) {\n                    var rowElement = _this.content().selectAll(\".\" + Legend.LEGEND_ROW_CLASS)[0][rowIndex];\n                    // HACKHACK The 2.x API chooses the symbol element as the \"selection\" to return, regardless of what\n                    // was actually selected\n                    var entryElement = d3.select(rowElement)\n                        .selectAll(\".\" + Legend.LEGEND_ENTRY_CLASS)[0][Math.floor(columnIndex / 2)];\n                    var symbolElement = d3.select(entryElement).select(\".\" + Legend.LEGEND_SYMBOL_CLASS);\n                    // HACKHACK The 2.x API returns the center {x, y} of the symbol as the position.\n                    var rowTranslate = d3.transform(d3.select(rowElement).attr(\"transform\")).translate;\n                    var symbolTranslate = d3.transform(symbolElement.attr(\"transform\")).translate;\n                    return [{\n                            datum: column.data.name,\n                            position: { x: rowTranslate[0] + symbolTranslate[0], y: rowTranslate[1] + symbolTranslate[1] },\n                            selection: d3.select(entryElement),\n                            component: _this,\n                        }];\n                }\n                return entity;\n            }, entity);\n        }, []);\n    };\n    Legend.prototype.renderImmediately = function () {\n        var _this = this;\n        _super.prototype.renderImmediately.call(this);\n        var table = this._buildLegendTable(this.width(), this.height());\n        var entryNames = this._colorScale.domain().slice().sort(function (a, b) { return _this._comparator(_this._formatter(a), _this._formatter(b)); });\n        // clear content from previous renders\n        this.content().selectAll(\"*\").remove();\n        var rows = this.content().selectAll(\"g.\" + Legend.LEGEND_ROW_CLASS).data(table.rows);\n        rows.enter().append(\"g\").classed(Legend.LEGEND_ROW_CLASS, true);\n        rows.exit().remove();\n        rows.attr(\"transform\", function (row, rowIndex) {\n            var rowBounds = table.getRowBounds(rowIndex);\n            return \"translate(\" + rowBounds.topLeft.x + \", \" + rowBounds.topLeft.y + \")\";\n        });\n        var entries = rows.selectAll(\"g.\" + Legend.LEGEND_ENTRY_CLASS).data(function (row) {\n            var symbolEntryPairs = [];\n            for (var i = 0; i < row.columns.length; i += 2) {\n                symbolEntryPairs.push([row.columns[i], row.columns[i + 1]]);\n            }\n            return symbolEntryPairs;\n        });\n        var entriesEnter = entries.enter().append(\"g\").classed(Legend.LEGEND_ENTRY_CLASS, true);\n        entriesEnter.append(\"path\")\n            .attr(\"d\", function (symbolEntryPair, columnIndex, rowIndex) {\n            var symbol = symbolEntryPair[0];\n            return _this.symbol()(symbol.data.name, rowIndex)(symbol.height * 0.6);\n        })\n            .attr(\"transform\", function (symbolEntryPair, i, rowIndex) {\n            var symbol = symbolEntryPair[0];\n            var columnIndex = table.rows[rowIndex].columns.indexOf(symbol);\n            var columnBounds = table.getColumnBounds(rowIndex, columnIndex);\n            return \"translate(\" + (columnBounds.topLeft.x + symbol.width / 2) + \", \" + symbol.height / 2 + \")\";\n        })\n            .attr(\"fill\", function (symbolEntryPair) { return _this._colorScale.scale(symbolEntryPair[0].data.name); })\n            .attr(\"opacity\", function (symbolEntryPair, _columnIndex, rowIndex) {\n            return _this.symbolOpacity()(symbolEntryPair[0].data.name, rowIndex);\n        })\n            .classed(Legend.LEGEND_SYMBOL_CLASS, true);\n        var self = this;\n        entriesEnter.append(\"g\").classed(\"text-container\", true)\n            .attr(\"transform\", function (symbolEntryPair, i, rowIndex) {\n            var entry = symbolEntryPair[1];\n            var columnIndex = table.rows[rowIndex].columns.indexOf(entry);\n            var columnBounds = table.getColumnBounds(rowIndex, columnIndex);\n            return \"translate(\" + columnBounds.topLeft.x + \", 0)\";\n        })\n            .each(function (symbolEntryPair, i, rowIndex) {\n            var textContainer = d3.select(this);\n            var column = symbolEntryPair[1];\n            var writeOptions = {\n                selection: textContainer,\n                xAlign: \"left\",\n                yAlign: \"top\",\n                textRotation: 0,\n            };\n            self._writer.write(self._formatter(column.data.name), column.width, self.height(), writeOptions);\n        });\n        entries.exit().remove();\n        return this;\n    };\n    Legend.prototype.symbol = function (symbol) {\n        if (symbol == null) {\n            return this._symbolFactoryAccessor;\n        }\n        else {\n            this._symbolFactoryAccessor = symbol;\n            this.render();\n            return this;\n        }\n    };\n    Legend.prototype.symbolOpacity = function (symbolOpacity) {\n        if (symbolOpacity == null) {\n            return this._symbolOpacityAccessor;\n        }\n        else if (typeof symbolOpacity === \"number\") {\n            this._symbolOpacityAccessor = function () { return symbolOpacity; };\n        }\n        else {\n            this._symbolOpacityAccessor = symbolOpacity;\n        }\n        this.render();\n        return this;\n    };\n    Legend.prototype.fixedWidth = function () {\n        return true;\n    };\n    Legend.prototype.fixedHeight = function () {\n        return true;\n    };\n    /**\n     * The css class applied to each legend row\n     */\n    Legend.LEGEND_ROW_CLASS = \"legend-row\";\n    /**\n     * The css class applied to each legend entry\n     */\n    Legend.LEGEND_ENTRY_CLASS = \"legend-entry\";\n    /**\n     * The css class applied to each legend symbol\n     */\n    Legend.LEGEND_SYMBOL_CLASS = \"legend-symbol\";\n    return Legend;\n}(component_1.Component));\nexports.Legend = Legend;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/legend.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/plotGroup.js":
/*!******************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/plotGroup.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar plot_1 = __webpack_require__(/*! ../plots/plot */ \"./node_modules/plottable/build/src/plots/plot.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar group_1 = __webpack_require__(/*! ./group */ \"./node_modules/plottable/build/src/components/group.js\");\nvar PlotGroup = (function (_super) {\n    __extends(PlotGroup, _super);\n    function PlotGroup() {\n        _super.apply(this, arguments);\n    }\n    PlotGroup.prototype.entityNearest = function (point) {\n        var closestPlotEntity;\n        var minDistSquared = Infinity;\n        this.components().forEach(function (plotComponent) {\n            // we know it's a Plot since .append() throws a runtime error otherwise\n            var plot = plotComponent;\n            var candidatePlotEntity = plot.entityNearest(point);\n            if (candidatePlotEntity == null) {\n                return;\n            }\n            var distSquared = Utils.Math.distanceSquared(candidatePlotEntity.position, point);\n            if (distSquared <= minDistSquared) {\n                minDistSquared = distSquared;\n                closestPlotEntity = candidatePlotEntity;\n            }\n        });\n        return closestPlotEntity;\n    };\n    /**\n     * Adds a Plot to this Plot Group.\n     * The added Plot will be rendered above Plots already in the Group.\n     */\n    PlotGroup.prototype.append = function (plot) {\n        if (plot != null && !(plot instanceof plot_1.Plot)) {\n            throw new Error(\"Plot Group only accepts plots\");\n        }\n        _super.prototype.append.call(this, plot);\n        return this;\n    };\n    return PlotGroup;\n}(group_1.Group));\nexports.PlotGroup = PlotGroup;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/plotGroup.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/selectionBoxLayer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/selectionBoxLayer.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar component_1 = __webpack_require__(/*! ./component */ \"./node_modules/plottable/build/src/components/component.js\");\n(function (PropertyMode) {\n    PropertyMode[PropertyMode[\"VALUE\"] = 0] = \"VALUE\";\n    PropertyMode[PropertyMode[\"PIXEL\"] = 1] = \"PIXEL\";\n})(exports.PropertyMode || (exports.PropertyMode = {}));\nvar PropertyMode = exports.PropertyMode;\nvar SelectionBoxLayer = (function (_super) {\n    __extends(SelectionBoxLayer, _super);\n    function SelectionBoxLayer() {\n        var _this = this;\n        _super.call(this);\n        this._boxVisible = false;\n        this._boxBounds = {\n            topLeft: { x: 0, y: 0 },\n            bottomRight: { x: 0, y: 0 },\n        };\n        this._xBoundsMode = PropertyMode.PIXEL;\n        this._yBoundsMode = PropertyMode.PIXEL;\n        this.addClass(\"selection-box-layer\");\n        this._adjustBoundsCallback = function () {\n            _this.render();\n        };\n        this._clipPathEnabled = true;\n        this._xExtent = [undefined, undefined];\n        this._yExtent = [undefined, undefined];\n    }\n    SelectionBoxLayer.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._box = this.content().append(\"g\").classed(\"selection-box\", true).remove();\n        this._boxArea = this._box.append(\"rect\").classed(\"selection-area\", true);\n    };\n    SelectionBoxLayer.prototype._sizeFromOffer = function (availableWidth, availableHeight) {\n        return {\n            width: availableWidth,\n            height: availableHeight,\n        };\n    };\n    SelectionBoxLayer.prototype.bounds = function (newBounds) {\n        if (newBounds == null) {\n            return this._getBounds();\n        }\n        this._setBounds(newBounds);\n        this._xBoundsMode = PropertyMode.PIXEL;\n        this._yBoundsMode = PropertyMode.PIXEL;\n        this.render();\n        return this;\n    };\n    SelectionBoxLayer.prototype._setBounds = function (newBounds) {\n        var topLeft = {\n            x: Math.min(newBounds.topLeft.x, newBounds.bottomRight.x),\n            y: Math.min(newBounds.topLeft.y, newBounds.bottomRight.y),\n        };\n        var bottomRight = {\n            x: Math.max(newBounds.topLeft.x, newBounds.bottomRight.x),\n            y: Math.max(newBounds.topLeft.y, newBounds.bottomRight.y),\n        };\n        this._boxBounds = {\n            topLeft: topLeft,\n            bottomRight: bottomRight,\n        };\n    };\n    SelectionBoxLayer.prototype._getBounds = function () {\n        return {\n            topLeft: {\n                x: this._xBoundsMode === PropertyMode.PIXEL ?\n                    this._boxBounds.topLeft.x :\n                    (this._xScale == null ?\n                        0 :\n                        Math.min(this.xScale().scale(this.xExtent()[0]), this.xScale().scale(this.xExtent()[1]))),\n                y: this._yBoundsMode === PropertyMode.PIXEL ?\n                    this._boxBounds.topLeft.y :\n                    (this._yScale == null ?\n                        0 :\n                        Math.min(this.yScale().scale(this.yExtent()[0]), this.yScale().scale(this.yExtent()[1]))),\n            },\n            bottomRight: {\n                x: this._xBoundsMode === PropertyMode.PIXEL ?\n                    this._boxBounds.bottomRight.x :\n                    (this._xScale == null ?\n                        0 :\n                        Math.max(this.xScale().scale(this.xExtent()[0]), this.xScale().scale(this.xExtent()[1]))),\n                y: this._yBoundsMode === PropertyMode.PIXEL ?\n                    this._boxBounds.bottomRight.y :\n                    (this._yScale == null ?\n                        0 :\n                        Math.max(this.yScale().scale(this.yExtent()[0]), this.yScale().scale(this.yExtent()[1]))),\n            },\n        };\n    };\n    SelectionBoxLayer.prototype.renderImmediately = function () {\n        _super.prototype.renderImmediately.call(this);\n        if (this._boxVisible) {\n            var bounds = this.bounds();\n            var t = bounds.topLeft.y;\n            var b = bounds.bottomRight.y;\n            var l = bounds.topLeft.x;\n            var r = bounds.bottomRight.x;\n            if (!(Utils.Math.isValidNumber(t) &&\n                Utils.Math.isValidNumber(b) &&\n                Utils.Math.isValidNumber(l) &&\n                Utils.Math.isValidNumber(r))) {\n                throw new Error(\"bounds have not been properly set\");\n            }\n            this._boxArea.attr({\n                x: l, y: t, width: r - l, height: b - t,\n            });\n            this.content().node().appendChild(this._box.node());\n        }\n        else {\n            this._box.remove();\n        }\n        return this;\n    };\n    SelectionBoxLayer.prototype.boxVisible = function (show) {\n        if (show == null) {\n            return this._boxVisible;\n        }\n        this._boxVisible = show;\n        this.render();\n        return this;\n    };\n    SelectionBoxLayer.prototype.fixedWidth = function () {\n        return true;\n    };\n    SelectionBoxLayer.prototype.fixedHeight = function () {\n        return true;\n    };\n    SelectionBoxLayer.prototype.xScale = function (xScale) {\n        if (xScale == null) {\n            return this._xScale;\n        }\n        if (this._xScale != null) {\n            this._xScale.offUpdate(this._adjustBoundsCallback);\n        }\n        this._xScale = xScale;\n        this._xBoundsMode = PropertyMode.VALUE;\n        this._xScale.onUpdate(this._adjustBoundsCallback);\n        this.render();\n        return this;\n    };\n    SelectionBoxLayer.prototype.yScale = function (yScale) {\n        if (yScale == null) {\n            return this._yScale;\n        }\n        if (this._yScale != null) {\n            this._yScale.offUpdate(this._adjustBoundsCallback);\n        }\n        this._yScale = yScale;\n        this._yBoundsMode = PropertyMode.VALUE;\n        this._yScale.onUpdate(this._adjustBoundsCallback);\n        this.render();\n        return this;\n    };\n    SelectionBoxLayer.prototype.xExtent = function (xExtent) {\n        // Explicit typing for Typescript 1.4\n        if (xExtent == null) {\n            return this._getXExtent();\n        }\n        this._setXExtent(xExtent);\n        this._xBoundsMode = PropertyMode.VALUE;\n        this.render();\n        return this;\n    };\n    SelectionBoxLayer.prototype._getXExtent = function () {\n        return this._xBoundsMode === PropertyMode.VALUE ?\n            this._xExtent :\n            (this._xScale == null ?\n                [undefined, undefined] :\n                [\n                    this._xScale.invert(this._boxBounds.topLeft.x),\n                    this._xScale.invert(this._boxBounds.bottomRight.x),\n                ]);\n    };\n    SelectionBoxLayer.prototype._setXExtent = function (xExtent) {\n        this._xExtent = xExtent;\n    };\n    SelectionBoxLayer.prototype.yExtent = function (yExtent) {\n        // Explicit typing for Typescript 1.4\n        if (yExtent == null) {\n            return this._getYExtent();\n        }\n        this._setYExtent(yExtent);\n        this._yBoundsMode = PropertyMode.VALUE;\n        this.render();\n        return this;\n    };\n    SelectionBoxLayer.prototype._getYExtent = function () {\n        return this._yBoundsMode === PropertyMode.VALUE ?\n            this._yExtent :\n            (this._yScale == null ?\n                [undefined, undefined] :\n                [\n                    this._yScale.invert(this._boxBounds.topLeft.y),\n                    this._yScale.invert(this._boxBounds.bottomRight.y),\n                ]);\n    };\n    SelectionBoxLayer.prototype._setYExtent = function (yExtent) {\n        this._yExtent = yExtent;\n    };\n    SelectionBoxLayer.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this._xScale != null) {\n            this.xScale().offUpdate(this._adjustBoundsCallback);\n        }\n        if (this._yScale != null) {\n            this.yScale().offUpdate(this._adjustBoundsCallback);\n        }\n    };\n    return SelectionBoxLayer;\n}(component_1.Component));\nexports.SelectionBoxLayer = SelectionBoxLayer;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/selectionBoxLayer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/table.js":
/*!**************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/table.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar componentContainer_1 = __webpack_require__(/*! ./componentContainer */ \"./node_modules/plottable/build/src/components/componentContainer.js\");\nvar Table = (function (_super) {\n    __extends(Table, _super);\n    /**\n     * A Table combines Components in the form of a grid. A\n     * common case is combining a y-axis, x-axis, and the plotted data via\n     * ```typescript\n     * new Table([[yAxis, plot],\n     *            [null,  xAxis]]);\n     * ```\n     *\n     * @constructor\n     * @param {Component[][]} [rows=[]] A 2-D array of Components to be added to the Table.\n     *   null can be used if a cell is empty.\n     */\n    function Table(rows) {\n        var _this = this;\n        if (rows === void 0) { rows = []; }\n        _super.call(this);\n        this._rowPadding = 0;\n        this._columnPadding = 0;\n        this._rows = [];\n        this._rowWeights = [];\n        this._columnWeights = [];\n        this._nRows = 0;\n        this._nCols = 0;\n        this._calculatedLayout = null;\n        this.addClass(\"table\");\n        rows.forEach(function (row, rowIndex) {\n            row.forEach(function (component, colIndex) {\n                if (component != null) {\n                    _this.add(component, rowIndex, colIndex);\n                }\n            });\n        });\n    }\n    Table.prototype._forEach = function (callback) {\n        for (var r = 0; r < this._nRows; r++) {\n            for (var c = 0; c < this._nCols; c++) {\n                if (this._rows[r][c] != null) {\n                    callback(this._rows[r][c]);\n                }\n            }\n        }\n    };\n    /**\n     * Checks whether the specified Component is in the Table.\n     */\n    Table.prototype.has = function (component) {\n        for (var r = 0; r < this._nRows; r++) {\n            for (var c = 0; c < this._nCols; c++) {\n                if (this._rows[r][c] === component) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Returns the Component at the specified row and column index.\n     *\n     * @param {number} rowIndex\n     * @param {number} columnIndex\n     * @returns {Component} The Component at the specified position, or null if no Component is there.\n     */\n    Table.prototype.componentAt = function (rowIndex, columnIndex) {\n        if (rowIndex < 0 || rowIndex >= this._nRows || columnIndex < 0 || columnIndex >= this._nCols) {\n            return null;\n        }\n        return this._rows[rowIndex][columnIndex];\n    };\n    ;\n    /**\n     * Adds a Component in the specified row and column position.\n     *\n     * For example, instead of calling `new Table([[a, b], [null, c]])`, you\n     * could call\n     * var table = new Plottable.Components.Table();\n     * table.add(a, 0, 0);\n     * table.add(b, 0, 1);\n     * table.add(c, 1, 1);\n     *\n     * @param {Component} component The Component to be added.\n     * @param {number} row\n     * @param {number} col\n     * @returns {Table} The calling Table.\n     */\n    Table.prototype.add = function (component, row, col) {\n        if (component == null) {\n            throw Error(\"Cannot add null to a table cell\");\n        }\n        if (!this.has(component)) {\n            var currentComponent = this._rows[row] && this._rows[row][col];\n            if (currentComponent != null) {\n                throw new Error(\"cell is occupied\");\n            }\n            component.detach();\n            this._nRows = Math.max(row + 1, this._nRows);\n            this._nCols = Math.max(col + 1, this._nCols);\n            this._padTableToSize(this._nRows, this._nCols);\n            this._rows[row][col] = component;\n            this._adoptAndAnchor(component);\n            this.redraw();\n        }\n        return this;\n    };\n    Table.prototype._remove = function (component) {\n        for (var r = 0; r < this._nRows; r++) {\n            for (var c = 0; c < this._nCols; c++) {\n                if (this._rows[r][c] === component) {\n                    this._rows[r][c] = null;\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Table.prototype._iterateLayout = function (availableWidth, availableHeight, isFinalOffer) {\n        if (isFinalOffer === void 0) { isFinalOffer = false; }\n        /*\n         * Given availableWidth and availableHeight, figure out how to allocate it between rows and columns using an iterative algorithm.\n         *\n         * For both dimensions, keeps track of \"guaranteedSpace\", which the fixed-size components have requested, and\n         * \"proportionalSpace\", which is being given to proportionally-growing components according to the weights on the table.\n         * Here is how it works (example uses width but it is the same for height). First, columns are guaranteed no width, and\n         * the free width is allocated to columns based on their colWeights. Then, in determineGuarantees, every component is\n         * offered its column's width and may request some amount of it, which increases that column's guaranteed\n         * width. If there are some components that were not satisfied with the width they were offered, and there is free\n         * width that has not already been guaranteed, then the remaining width is allocated to the unsatisfied columns and the\n         * algorithm runs again. If all components are satisfied, then the remaining width is allocated as proportional space\n         * according to the colWeights.\n         *\n         * The guaranteed width for each column is monotonically increasing as the algorithm iterates. Since it is deterministic\n         * and monotonically increasing, if the freeWidth does not change during an iteration it implies that no further progress\n         * is possible, so the algorithm will not continue iterating on that dimension's account.\n         *\n         * If the algorithm runs more than 5 times, we stop and just use whatever we arrived at. It's not clear under what\n         * circumstances this will happen or if it will happen at all. A message will be printed to the console if this occurs.\n         *\n         */\n        var rows = this._rows;\n        var cols = d3.transpose(this._rows);\n        var availableWidthAfterPadding = availableWidth - this._columnPadding * (this._nCols - 1);\n        var availableHeightAfterPadding = availableHeight - this._rowPadding * (this._nRows - 1);\n        var rowWeights = Table._calcComponentWeights(this._rowWeights, rows, function (c) { return (c == null) || c.fixedHeight(); });\n        var colWeights = Table._calcComponentWeights(this._columnWeights, cols, function (c) { return (c == null) || c.fixedWidth(); });\n        // To give the table a good starting position to iterate from, we give the fixed-width components half-weight\n        // so that they will get some initial space allocated to work with\n        var heuristicColWeights = colWeights.map(function (c) { return c === 0 ? 0.5 : c; });\n        var heuristicRowWeights = rowWeights.map(function (c) { return c === 0 ? 0.5 : c; });\n        var colProportionalSpace = Table._calcProportionalSpace(heuristicColWeights, availableWidthAfterPadding);\n        var rowProportionalSpace = Table._calcProportionalSpace(heuristicRowWeights, availableHeightAfterPadding);\n        var guaranteedWidths = Utils.Array.createFilledArray(0, this._nCols);\n        var guaranteedHeights = Utils.Array.createFilledArray(0, this._nRows);\n        var freeWidth;\n        var freeHeight;\n        var nIterations = 0;\n        var guarantees;\n        var wantsWidth;\n        var wantsHeight;\n        while (true) {\n            var offeredHeights = Utils.Array.add(guaranteedHeights, rowProportionalSpace);\n            var offeredWidths = Utils.Array.add(guaranteedWidths, colProportionalSpace);\n            guarantees = this._determineGuarantees(offeredWidths, offeredHeights, isFinalOffer);\n            guaranteedWidths = guarantees.guaranteedWidths;\n            guaranteedHeights = guarantees.guaranteedHeights;\n            wantsWidth = guarantees.wantsWidthArr.some(function (x) { return x; });\n            wantsHeight = guarantees.wantsHeightArr.some(function (x) { return x; });\n            var lastFreeWidth = freeWidth;\n            var lastFreeHeight = freeHeight;\n            freeWidth = availableWidthAfterPadding - d3.sum(guarantees.guaranteedWidths);\n            freeHeight = availableHeightAfterPadding - d3.sum(guarantees.guaranteedHeights);\n            var xWeights = void 0;\n            if (wantsWidth) {\n                xWeights = guarantees.wantsWidthArr.map(function (x) { return x ? 0.1 : 0; });\n                xWeights = Utils.Array.add(xWeights, colWeights);\n            }\n            else {\n                xWeights = colWeights;\n            }\n            var yWeights = void 0;\n            if (wantsHeight) {\n                yWeights = guarantees.wantsHeightArr.map(function (x) { return x ? 0.1 : 0; });\n                yWeights = Utils.Array.add(yWeights, rowWeights);\n            }\n            else {\n                yWeights = rowWeights;\n            }\n            colProportionalSpace = Table._calcProportionalSpace(xWeights, freeWidth);\n            rowProportionalSpace = Table._calcProportionalSpace(yWeights, freeHeight);\n            nIterations++;\n            var canImproveWidthAllocation = freeWidth > 0 && freeWidth !== lastFreeWidth;\n            var canImproveHeightAllocation = freeHeight > 0 && freeHeight !== lastFreeHeight;\n            if (!(canImproveWidthAllocation || canImproveHeightAllocation)) {\n                break;\n            }\n            if (nIterations > 5) {\n                break;\n            }\n        }\n        // Redo the proportional space one last time, to ensure we use the real weights not the wantsWidth/Height weights\n        freeWidth = availableWidthAfterPadding - d3.sum(guarantees.guaranteedWidths);\n        freeHeight = availableHeightAfterPadding - d3.sum(guarantees.guaranteedHeights);\n        colProportionalSpace = Table._calcProportionalSpace(colWeights, freeWidth);\n        rowProportionalSpace = Table._calcProportionalSpace(rowWeights, freeHeight);\n        return {\n            colProportionalSpace: colProportionalSpace,\n            rowProportionalSpace: rowProportionalSpace,\n            guaranteedWidths: guarantees.guaranteedWidths,\n            guaranteedHeights: guarantees.guaranteedHeights,\n            wantsWidth: wantsWidth,\n            wantsHeight: wantsHeight,\n        };\n    };\n    Table.prototype._determineGuarantees = function (offeredWidths, offeredHeights, isFinalOffer) {\n        if (isFinalOffer === void 0) { isFinalOffer = false; }\n        var requestedWidths = Utils.Array.createFilledArray(0, this._nCols);\n        var requestedHeights = Utils.Array.createFilledArray(0, this._nRows);\n        var columnNeedsWidth = Utils.Array.createFilledArray(false, this._nCols);\n        var rowNeedsHeight = Utils.Array.createFilledArray(false, this._nRows);\n        this._rows.forEach(function (row, rowIndex) {\n            row.forEach(function (component, colIndex) {\n                var spaceRequest;\n                if (component != null) {\n                    spaceRequest = component.requestedSpace(offeredWidths[colIndex], offeredHeights[rowIndex]);\n                }\n                else {\n                    spaceRequest = {\n                        minWidth: 0,\n                        minHeight: 0,\n                    };\n                }\n                var columnWidth = isFinalOffer ? Math.min(spaceRequest.minWidth, offeredWidths[colIndex]) : spaceRequest.minWidth;\n                requestedWidths[colIndex] = Math.max(requestedWidths[colIndex], columnWidth);\n                var rowHeight = isFinalOffer ? Math.min(spaceRequest.minHeight, offeredHeights[rowIndex]) : spaceRequest.minHeight;\n                requestedHeights[rowIndex] = Math.max(requestedHeights[rowIndex], rowHeight);\n                var componentNeedsWidth = spaceRequest.minWidth > offeredWidths[colIndex];\n                columnNeedsWidth[colIndex] = columnNeedsWidth[colIndex] || componentNeedsWidth;\n                var componentNeedsHeight = spaceRequest.minHeight > offeredHeights[rowIndex];\n                rowNeedsHeight[rowIndex] = rowNeedsHeight[rowIndex] || componentNeedsHeight;\n            });\n        });\n        return {\n            guaranteedWidths: requestedWidths,\n            guaranteedHeights: requestedHeights,\n            wantsWidthArr: columnNeedsWidth,\n            wantsHeightArr: rowNeedsHeight,\n        };\n    };\n    Table.prototype.requestedSpace = function (offeredWidth, offeredHeight) {\n        this._calculatedLayout = this._iterateLayout(offeredWidth, offeredHeight);\n        return {\n            minWidth: d3.sum(this._calculatedLayout.guaranteedWidths),\n            minHeight: d3.sum(this._calculatedLayout.guaranteedHeights),\n        };\n    };\n    Table.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\n        var _this = this;\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\n        var lastLayoutWidth = d3.sum(this._calculatedLayout.guaranteedWidths);\n        var lastLayoutHeight = d3.sum(this._calculatedLayout.guaranteedHeights);\n        var layout = this._calculatedLayout;\n        if (lastLayoutWidth > this.width() || lastLayoutHeight > this.height()) {\n            layout = this._iterateLayout(this.width(), this.height(), true);\n        }\n        var childYOrigin = 0;\n        var rowHeights = Utils.Array.add(layout.rowProportionalSpace, layout.guaranteedHeights);\n        var colWidths = Utils.Array.add(layout.colProportionalSpace, layout.guaranteedWidths);\n        this._rows.forEach(function (row, rowIndex) {\n            var childXOrigin = 0;\n            row.forEach(function (component, colIndex) {\n                // recursively compute layout\n                if (component != null) {\n                    component.computeLayout({ x: childXOrigin, y: childYOrigin }, colWidths[colIndex], rowHeights[rowIndex]);\n                }\n                childXOrigin += colWidths[colIndex] + _this._columnPadding;\n            });\n            childYOrigin += rowHeights[rowIndex] + _this._rowPadding;\n        });\n        return this;\n    };\n    Table.prototype.rowPadding = function (rowPadding) {\n        if (rowPadding == null) {\n            return this._rowPadding;\n        }\n        if (!Utils.Math.isValidNumber(rowPadding) || rowPadding < 0) {\n            throw Error(\"rowPadding must be a non-negative finite value\");\n        }\n        this._rowPadding = rowPadding;\n        this.redraw();\n        return this;\n    };\n    Table.prototype.columnPadding = function (columnPadding) {\n        if (columnPadding == null) {\n            return this._columnPadding;\n        }\n        if (!Utils.Math.isValidNumber(columnPadding) || columnPadding < 0) {\n            throw Error(\"columnPadding must be a non-negative finite value\");\n        }\n        this._columnPadding = columnPadding;\n        this.redraw();\n        return this;\n    };\n    Table.prototype.rowWeight = function (index, weight) {\n        if (weight == null) {\n            return this._rowWeights[index];\n        }\n        if (!Utils.Math.isValidNumber(weight) || weight < 0) {\n            throw Error(\"rowWeight must be a non-negative finite value\");\n        }\n        this._rowWeights[index] = weight;\n        this.redraw();\n        return this;\n    };\n    Table.prototype.columnWeight = function (index, weight) {\n        if (weight == null) {\n            return this._columnWeights[index];\n        }\n        if (!Utils.Math.isValidNumber(weight) || weight < 0) {\n            throw Error(\"columnWeight must be a non-negative finite value\");\n        }\n        this._columnWeights[index] = weight;\n        this.redraw();\n        return this;\n    };\n    Table.prototype.fixedWidth = function () {\n        var cols = d3.transpose(this._rows);\n        return Table._fixedSpace(cols, function (c) { return (c == null) || c.fixedWidth(); });\n    };\n    Table.prototype.fixedHeight = function () {\n        return Table._fixedSpace(this._rows, function (c) { return (c == null) || c.fixedHeight(); });\n    };\n    Table.prototype._padTableToSize = function (nRows, nCols) {\n        for (var i = 0; i < nRows; i++) {\n            if (this._rows[i] === undefined) {\n                this._rows[i] = [];\n                this._rowWeights[i] = null;\n            }\n            for (var j = 0; j < nCols; j++) {\n                if (this._rows[i][j] === undefined) {\n                    this._rows[i][j] = null;\n                }\n            }\n        }\n        for (var j = 0; j < nCols; j++) {\n            if (this._columnWeights[j] === undefined) {\n                this._columnWeights[j] = null;\n            }\n        }\n    };\n    Table._calcComponentWeights = function (setWeights, componentGroups, fixityAccessor) {\n        // If the row/col weight was explicitly set, then return it outright\n        // If the weight was not explicitly set, then guess it using the heuristic that if all components are fixed-space\n        // then weight is 0, otherwise weight is 1\n        return setWeights.map(function (w, i) {\n            if (w != null) {\n                return w;\n            }\n            var fixities = componentGroups[i].map(fixityAccessor);\n            var allFixed = fixities.reduce(function (a, b) { return a && b; }, true);\n            return allFixed ? 0 : 1;\n        });\n    };\n    Table._calcProportionalSpace = function (weights, freeSpace) {\n        var weightSum = d3.sum(weights);\n        if (weightSum === 0) {\n            return Utils.Array.createFilledArray(0, weights.length);\n        }\n        else {\n            return weights.map(function (w) { return freeSpace * w / weightSum; });\n        }\n    };\n    Table._fixedSpace = function (componentGroup, fixityAccessor) {\n        var all = function (bools) { return bools.reduce(function (a, b) { return a && b; }, true); };\n        var groupIsFixed = function (components) { return all(components.map(fixityAccessor)); };\n        return all(componentGroup.map(groupIsFixed));\n    };\n    return Table;\n}(componentContainer_1.ComponentContainer));\nexports.Table = Table;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/table.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/xDragBoxLayer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/xDragBoxLayer.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar dragBoxLayer_1 = __webpack_require__(/*! ./dragBoxLayer */ \"./node_modules/plottable/build/src/components/dragBoxLayer.js\");\nvar XDragBoxLayer = (function (_super) {\n    __extends(XDragBoxLayer, _super);\n    /**\n     * An XDragBoxLayer is a DragBoxLayer whose size can only be set in the X-direction.\n     * The y-values of the bounds() are always set to 0 and the height() of the XDragBoxLayer.\n     *\n     * @constructor\n     */\n    function XDragBoxLayer() {\n        _super.call(this);\n        this.addClass(\"x-drag-box-layer\");\n        this._hasCorners = false;\n    }\n    XDragBoxLayer.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\n        // set correct bounds when width/height changes\n        this._setBounds(this.bounds());\n        return this;\n    };\n    XDragBoxLayer.prototype._setBounds = function (newBounds) {\n        _super.prototype._setBounds.call(this, {\n            topLeft: { x: newBounds.topLeft.x, y: 0 },\n            bottomRight: { x: newBounds.bottomRight.x, y: this.height() },\n        });\n    };\n    XDragBoxLayer.prototype._setResizableClasses = function (canResize) {\n        if (canResize && this.enabled()) {\n            this.addClass(\"x-resizable\");\n        }\n        else {\n            this.removeClass(\"x-resizable\");\n        }\n    };\n    XDragBoxLayer.prototype.yScale = function (yScale) {\n        if (yScale == null) {\n            return _super.prototype.yScale.call(this);\n        }\n        throw new Error(\"yScales cannot be set on an XDragBoxLayer\");\n    };\n    XDragBoxLayer.prototype.yExtent = function (yExtent) {\n        if (yExtent == null) {\n            return _super.prototype.yExtent.call(this);\n        }\n        throw new Error(\"XDragBoxLayer has no yExtent\");\n    };\n    return XDragBoxLayer;\n}(dragBoxLayer_1.DragBoxLayer));\nexports.XDragBoxLayer = XDragBoxLayer;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/xDragBoxLayer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/components/yDragBoxLayer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/plottable/build/src/components/yDragBoxLayer.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar dragBoxLayer_1 = __webpack_require__(/*! ./dragBoxLayer */ \"./node_modules/plottable/build/src/components/dragBoxLayer.js\");\nvar YDragBoxLayer = (function (_super) {\n    __extends(YDragBoxLayer, _super);\n    /**\n     * A YDragBoxLayer is a DragBoxLayer whose size can only be set in the Y-direction.\n     * The x-values of the bounds() are always set to 0 and the width() of the YDragBoxLayer.\n     *\n     * @constructor\n     */\n    function YDragBoxLayer() {\n        _super.call(this);\n        this.addClass(\"y-drag-box-layer\");\n        this._hasCorners = false;\n    }\n    YDragBoxLayer.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\n        // set correct bounds when width/height changes\n        this._setBounds(this.bounds());\n        return this;\n    };\n    YDragBoxLayer.prototype._setBounds = function (newBounds) {\n        _super.prototype._setBounds.call(this, {\n            topLeft: { x: 0, y: newBounds.topLeft.y },\n            bottomRight: { x: this.width(), y: newBounds.bottomRight.y },\n        });\n    };\n    YDragBoxLayer.prototype._setResizableClasses = function (canResize) {\n        if (canResize && this.enabled()) {\n            this.addClass(\"y-resizable\");\n        }\n        else {\n            this.removeClass(\"y-resizable\");\n        }\n    };\n    YDragBoxLayer.prototype.xScale = function (xScale) {\n        if (xScale == null) {\n            return _super.prototype.xScale.call(this);\n        }\n        throw new Error(\"xScales cannot be set on an YDragBoxLayer\");\n    };\n    YDragBoxLayer.prototype.xExtent = function (xExtent) {\n        if (xExtent == null) {\n            return _super.prototype.xExtent.call(this);\n        }\n        throw new Error(\"YDragBoxLayer has no xExtent\");\n    };\n    return YDragBoxLayer;\n}(dragBoxLayer_1.DragBoxLayer));\nexports.YDragBoxLayer = YDragBoxLayer;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/components/yDragBoxLayer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/core/config.js":
/*!*********************************************************!*\
  !*** ./node_modules/plottable/build/src/core/config.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Specifies if Plottable should show warnings.\n */\nexports.SHOW_WARNINGS = true;\n/**\n * Specifies if Plottable should add <title> elements to text.\n */\nexports.ADD_TITLE_ELEMENTS = true;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/core/config.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/core/dataset.js":
/*!**********************************************************!*\
  !*** ./node_modules/plottable/build/src/core/dataset.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Dataset = (function () {\n    /**\n     * A Dataset contains an array of data and some metadata.\n     * Changes to the data or metadata will cause anything subscribed to the Dataset to update.\n     *\n     * @constructor\n     * @param {any[]} [data=[]] The data for this Dataset.\n     * @param {any} [metadata={}] An object containing additional information.\n     */\n    function Dataset(data, metadata) {\n        if (data === void 0) { data = []; }\n        if (metadata === void 0) { metadata = {}; }\n        this._data = data;\n        this._metadata = metadata;\n        this._callbacks = new Utils.CallbackSet();\n    }\n    /**\n     * Adds a callback to be called when the Dataset updates.\n     *\n     * @param {DatasetCallback} callback.\n     * @returns {Dataset} The calling Dataset.\n     */\n    Dataset.prototype.onUpdate = function (callback) {\n        this._callbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when the Dataset updates.\n     *\n     * @param {DatasetCallback} callback\n     * @returns {Dataset} The calling Dataset.\n     */\n    Dataset.prototype.offUpdate = function (callback) {\n        this._callbacks.delete(callback);\n        return this;\n    };\n    Dataset.prototype.data = function (data) {\n        if (data == null) {\n            return this._data;\n        }\n        else {\n            this._data = data;\n            this._callbacks.callCallbacks(this);\n            return this;\n        }\n    };\n    Dataset.prototype.metadata = function (metadata) {\n        if (metadata == null) {\n            return this._metadata;\n        }\n        else {\n            this._metadata = metadata;\n            this._callbacks.callCallbacks(this);\n            return this;\n        }\n    };\n    return Dataset;\n}());\nexports.Dataset = Dataset;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/core/dataset.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/core/formatters.js":
/*!*************************************************************!*\
  !*** ./node_modules/plottable/build/src/core/formatters.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\n/**\n * Creates a formatter for currency values.\n *\n * @param {number} [precision] The number of decimal places to show (default 2).\n * @param {string} [symbol] The currency symbol to use (default \"$\").\n * @param {boolean} [prefix] Whether to prepend or append the currency symbol (default true).\n *\n * @returns {Formatter} A formatter for currency values.\n */\nfunction currency(precision, symbol, prefix) {\n    if (precision === void 0) { precision = 2; }\n    if (symbol === void 0) { symbol = \"$\"; }\n    if (prefix === void 0) { prefix = true; }\n    var fixedFormatter = fixed(precision);\n    return function (d) {\n        var formattedValue = fixedFormatter(Math.abs(d));\n        if (formattedValue !== \"\") {\n            if (prefix) {\n                formattedValue = symbol + formattedValue;\n            }\n            else {\n                formattedValue += symbol;\n            }\n            if (d < 0) {\n                formattedValue = \"-\" + formattedValue;\n            }\n        }\n        return formattedValue;\n    };\n}\nexports.currency = currency;\n/**\n * Creates a formatter that displays exactly [precision] decimal places.\n *\n * @param {number} [precision] The number of decimal places to show (default 3).\n *\n * @returns {Formatter} A formatter that displays exactly [precision] decimal places.\n */\nfunction fixed(precision) {\n    if (precision === void 0) { precision = 3; }\n    verifyPrecision(precision);\n    return function (d) { return d.toFixed(precision); };\n}\nexports.fixed = fixed;\n/**\n * Creates a formatter that formats numbers to show no more than\n * [maxNumberOfDecimalPlaces] decimal places. All other values are stringified.\n *\n * @param {number} [maxNumberOfDecimalPlaces] The number of decimal places to show (default 3).\n *\n * @returns {Formatter} A formatter for general values.\n */\nfunction general(maxNumberOfDecimalPlaces) {\n    if (maxNumberOfDecimalPlaces === void 0) { maxNumberOfDecimalPlaces = 3; }\n    verifyPrecision(maxNumberOfDecimalPlaces);\n    return function (d) {\n        if (typeof d === \"number\") {\n            var multiplier = Math.pow(10, maxNumberOfDecimalPlaces);\n            return String(Math.round(d * multiplier) / multiplier);\n        }\n        else {\n            return String(d);\n        }\n    };\n}\nexports.general = general;\n/**\n * Creates a formatter that stringifies its input.\n *\n * @returns {Formatter} A formatter that stringifies its input.\n */\nfunction identity() {\n    return function (d) { return String(d); };\n}\nexports.identity = identity;\n/**\n * Creates a formatter for percentage values.\n * Multiplies the input by 100 and appends \"%\".\n *\n * @param {number} [precision] The number of decimal places to show (default 0).\n *\n * @returns {Formatter} A formatter for percentage values.\n */\nfunction percentage(precision) {\n    if (precision === void 0) { precision = 0; }\n    var fixedFormatter = fixed(precision);\n    return function (d) {\n        var valToFormat = d * 100;\n        // Account for float imprecision\n        var valString = d.toString();\n        var integerPowerTen = Math.pow(10, valString.length - (valString.indexOf(\".\") + 1));\n        valToFormat = parseInt((valToFormat * integerPowerTen).toString(), 10) / integerPowerTen;\n        return fixedFormatter(valToFormat) + \"%\";\n    };\n}\nexports.percentage = percentage;\n/**\n * Creates a formatter for values that displays [numberOfSignificantFigures] significant figures\n * and puts SI notation.\n *\n * @param {number} [numberOfSignificantFigures] The number of significant figures to show (default 3).\n *\n * @returns {Formatter} A formatter for SI values.\n */\nfunction siSuffix(numberOfSignificantFigures) {\n    if (numberOfSignificantFigures === void 0) { numberOfSignificantFigures = 3; }\n    verifyPrecision(numberOfSignificantFigures);\n    return function (d) { return d3.format(\".\" + numberOfSignificantFigures + \"s\")(d); };\n}\nexports.siSuffix = siSuffix;\n/**\n * Creates a formatter for values that displays abbreviated values\n * and uses standard short scale suffixes\n * - K - thousands - 10 ^ 3\n * - M - millions - 10 ^ 6\n * - B - billions - 10 ^ 9\n * - T - trillions - 10 ^ 12\n * - Q - quadrillions - 10 ^ 15\n *\n * Numbers with a magnitude outside of (10 ^ (-precision), 10 ^ 15) are shown using\n * scientific notation to avoid creating extremely long decimal strings.\n *\n * @param {number} [precision] the number of decimal places to show (default 3)\n * @returns {Formatter} A formatter with short scale formatting\n */\nfunction shortScale(precision) {\n    if (precision === void 0) { precision = 3; }\n    verifyPrecision(precision);\n    var suffixes = \"KMBTQ\";\n    var exponentFormatter = d3.format(\".\" + precision + \"e\");\n    var fixedFormatter = d3.format(\".\" + precision + \"f\");\n    var max = Math.pow(10, (3 * (suffixes.length + 1)));\n    var min = Math.pow(10, -precision);\n    return function (num) {\n        var absNum = Math.abs(num);\n        if ((absNum < min || absNum >= max) && absNum !== 0) {\n            return exponentFormatter(num);\n        }\n        var idx = -1;\n        while (absNum >= Math.pow(1000, idx + 2) && idx < (suffixes.length - 1)) {\n            idx++;\n        }\n        var output = \"\";\n        if (idx === -1) {\n            output = fixedFormatter(num);\n        }\n        else {\n            output = fixedFormatter(num / Math.pow(1000, idx + 1)) + suffixes[idx];\n        }\n        // catch rounding by the underlying d3 formatter\n        if ((num > 0 && output.substr(0, 4) === \"1000\") || (num < 0 && output.substr(0, 5) === \"-1000\")) {\n            if (idx < suffixes.length - 1) {\n                idx++;\n                output = fixedFormatter(num / Math.pow(1000, idx + 1)) + suffixes[idx];\n            }\n            else {\n                output = exponentFormatter(num);\n            }\n        }\n        return output;\n    };\n}\nexports.shortScale = shortScale;\n/**\n * Creates a multi time formatter that displays dates.\n *\n * @returns {Formatter} A formatter for time/date values.\n */\nfunction multiTime() {\n    // Formatter tiers going from shortest time scale to largest - these were taken from d3\n    // https://github.com/mbostock/d3/wiki/Time-Formatting#format_multi\n    var candidateFormats = [\n        {\n            specifier: \".%L\",\n            predicate: function (d) { return d.getMilliseconds() !== 0; },\n        },\n        {\n            specifier: \":%S\",\n            predicate: function (d) { return d.getSeconds() !== 0; },\n        },\n        {\n            specifier: \"%I:%M\",\n            predicate: function (d) { return d.getMinutes() !== 0; },\n        },\n        {\n            specifier: \"%I %p\",\n            predicate: function (d) { return d.getHours() !== 0; },\n        },\n        {\n            specifier: \"%a %d\",\n            predicate: function (d) { return d.getDay() !== 0 && d.getDate() !== 1; },\n        },\n        {\n            specifier: \"%b %d\",\n            predicate: function (d) { return d.getDate() !== 1; },\n        },\n        {\n            specifier: \"%b\",\n            predicate: function (d) { return d.getMonth() !== 0; },\n        },\n    ];\n    return function (d) {\n        var acceptableFormats = candidateFormats.filter(function (candidate) { return candidate.predicate(d); });\n        var specifier = acceptableFormats.length > 0\n            ? acceptableFormats[0].specifier\n            : \"%Y\";\n        return d3.time.format(specifier)(d);\n    };\n}\nexports.multiTime = multiTime;\n/**\n * Creates a time formatter that displays time/date using given specifier.\n *\n * List of directives can be found on: https://github.com/mbostock/d3/wiki/Time-Formatting#format\n *\n * @param {string} [specifier] The specifier for the formatter.\n *\n * @returns {Formatter} A formatter for time/date values.\n */\nfunction time(specifier) {\n    return d3.time.format(specifier);\n}\nexports.time = time;\nfunction verifyPrecision(precision) {\n    if (precision < 0 || precision > 20) {\n        throw new RangeError(\"Formatter precision must be between 0 and 20\");\n    }\n    if (precision !== Math.floor(precision)) {\n        throw new RangeError(\"Formatter precision must be an integer\");\n    }\n}\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/core/formatters.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/core/renderController.js":
/*!*******************************************************************!*\
  !*** ./node_modules/plottable/build/src/core/renderController.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar RenderPolicies = __webpack_require__(/*! ./renderPolicy */ \"./node_modules/plottable/build/src/core/renderPolicy.js\");\n/**\n * The RenderController is responsible for enqueueing and synchronizing\n * layout and render calls for Components.\n *\n * Layout and render calls occur inside an animation callback\n * (window.requestAnimationFrame if available).\n *\n * RenderController.flush() immediately lays out and renders all Components currently enqueued.\n *\n * To always have immediate rendering (useful for debugging), call\n * ```typescript\n * Plottable.RenderController.setRenderPolicy(\n *   new Plottable.RenderPolicies.Immediate()\n * );\n * ```\n */\nvar _componentsNeedingRender = new Utils.Set();\nvar _componentsNeedingComputeLayout = new Utils.Set();\nvar _animationRequested = false;\nvar _isCurrentlyFlushing = false;\nvar Policy;\n(function (Policy) {\n    Policy.IMMEDIATE = \"immediate\";\n    Policy.ANIMATION_FRAME = \"animationframe\";\n    Policy.TIMEOUT = \"timeout\";\n})(Policy = exports.Policy || (exports.Policy = {}));\nvar _renderPolicy = new RenderPolicies.AnimationFrame();\nfunction renderPolicy(renderPolicy) {\n    if (renderPolicy == null) {\n        return _renderPolicy;\n    }\n    switch (renderPolicy.toLowerCase()) {\n        case Policy.IMMEDIATE:\n            _renderPolicy = new RenderPolicies.Immediate();\n            break;\n        case Policy.ANIMATION_FRAME:\n            _renderPolicy = new RenderPolicies.AnimationFrame();\n            break;\n        case Policy.TIMEOUT:\n            _renderPolicy = new RenderPolicies.Timeout();\n            break;\n        default:\n            Utils.Window.warn(\"Unrecognized renderPolicy: \" + renderPolicy);\n    }\n}\nexports.renderPolicy = renderPolicy;\n/**\n * Enqueues the Component for rendering.\n *\n * @param {Component} component\n */\nfunction registerToRender(component) {\n    if (_isCurrentlyFlushing) {\n        Utils.Window.warn(\"Registered to render while other components are flushing: request may be ignored\");\n    }\n    _componentsNeedingRender.add(component);\n    requestRender();\n}\nexports.registerToRender = registerToRender;\n/**\n * Enqueues the Component for layout and rendering.\n *\n * @param {Component} component\n */\nfunction registerToComputeLayoutAndRender(component) {\n    _componentsNeedingComputeLayout.add(component);\n    _componentsNeedingRender.add(component);\n    requestRender();\n}\nexports.registerToComputeLayoutAndRender = registerToComputeLayoutAndRender;\n/**\n * Enqueues the Component for layout and rendering.\n *\n * @param {Component} component\n * @deprecated This method has been renamed to `RenderController.registerToComputeLayoutAndRender()`.\n */\nfunction registerToComputeLayout(component) {\n    registerToComputeLayoutAndRender(component);\n}\nexports.registerToComputeLayout = registerToComputeLayout;\nfunction requestRender() {\n    // Only run or enqueue flush on first request.\n    if (!_animationRequested) {\n        _animationRequested = true;\n        _renderPolicy.render();\n    }\n}\n/**\n * Renders all Components waiting to be rendered immediately\n * instead of waiting until the next frame. Flush is idempotent (given there are no intermediate registrations).\n *\n * Useful to call when debugging.\n */\nfunction flush() {\n    if (_animationRequested) {\n        // Layout\n        _componentsNeedingComputeLayout.forEach(function (component) { return component.computeLayout(); });\n        // Top level render; Containers will put their children in the toRender queue\n        _componentsNeedingRender.forEach(function (component) { return component.render(); });\n        _isCurrentlyFlushing = true;\n        var failed_1 = new Utils.Set();\n        _componentsNeedingRender.forEach(function (component) {\n            try {\n                component.renderImmediately();\n            }\n            catch (err) {\n                // throw error with timeout to avoid interrupting further renders\n                window.setTimeout(function () {\n                    throw err;\n                }, 0);\n                failed_1.add(component);\n            }\n        });\n        _componentsNeedingComputeLayout = new Utils.Set();\n        _componentsNeedingRender = failed_1;\n        _animationRequested = false;\n        _isCurrentlyFlushing = false;\n    }\n}\nexports.flush = flush;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/core/renderController.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/core/renderPolicy.js":
/*!***************************************************************!*\
  !*** ./node_modules/plottable/build/src/core/renderPolicy.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar RenderController = __webpack_require__(/*! ./renderController */ \"./node_modules/plottable/build/src/core/renderController.js\");\n/**\n * Renders Components immediately after they are enqueued.\n * Useful for debugging, horrible for performance.\n */\nvar Immediate = (function () {\n    function Immediate() {\n    }\n    Immediate.prototype.render = function () {\n        RenderController.flush();\n    };\n    return Immediate;\n}());\nexports.Immediate = Immediate;\n/**\n * The default way to render, which only tries to render every frame\n * (usually, 1/60th of a second).\n */\nvar AnimationFrame = (function () {\n    function AnimationFrame() {\n    }\n    AnimationFrame.prototype.render = function () {\n        Utils.DOM.requestAnimationFramePolyfill(RenderController.flush);\n    };\n    return AnimationFrame;\n}());\nexports.AnimationFrame = AnimationFrame;\n/**\n * Renders with `setTimeout()`.\n * Generally an inferior way to render compared to `requestAnimationFrame`,\n * but useful for browsers that don't suppoort `requestAnimationFrame`.\n */\nvar Timeout = (function () {\n    function Timeout() {\n        this._timeoutMsec = Utils.DOM.SCREEN_REFRESH_RATE_MILLISECONDS;\n    }\n    Timeout.prototype.render = function () {\n        setTimeout(RenderController.flush, this._timeoutMsec);\n    };\n    return Timeout;\n}());\nexports.Timeout = Timeout;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/core/renderPolicy.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/core/symbolFactories.js":
/*!******************************************************************!*\
  !*** ./node_modules/plottable/build/src/core/symbolFactories.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nfunction circle() {\n    return function (symbolSize) { return d3.svg.symbol().type(\"circle\").size(Math.PI * Math.pow(symbolSize / 2, 2))(null); };\n}\nexports.circle = circle;\nfunction square() {\n    return function (symbolSize) { return d3.svg.symbol().type(\"square\").size(Math.pow(symbolSize, 2))(null); };\n}\nexports.square = square;\nfunction cross() {\n    return function (symbolSize) { return d3.svg.symbol().type(\"cross\").size((5 / 9) * Math.pow(symbolSize, 2))(null); };\n}\nexports.cross = cross;\nfunction diamond() {\n    return function (symbolSize) { return d3.svg.symbol().type(\"diamond\").size(Math.tan(Math.PI / 6) * Math.pow(symbolSize, 2) / 2)(null); };\n}\nexports.diamond = diamond;\nfunction triangleUp() {\n    return function (symbolSize) { return d3.svg.symbol().type(\"triangle-up\").size(Math.sqrt(3) * Math.pow(symbolSize / 2, 2))(null); };\n}\nexports.triangleUp = triangleUp;\nfunction triangleDown() {\n    return function (symbolSize) { return d3.svg.symbol().type(\"triangle-down\").size(Math.sqrt(3) * Math.pow(symbolSize / 2, 2))(null); };\n}\nexports.triangleDown = triangleDown;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/core/symbolFactories.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/core/version.js":
/*!**********************************************************!*\
  !*** ./node_modules/plottable/build/src/core/version.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nexports.version = \"@VERSION\";\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/core/version.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/dispatchers/dispatcher.js":
/*!********************************************************************!*\
  !*** ./node_modules/plottable/build/src/dispatchers/dispatcher.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Dispatcher = (function () {\n    function Dispatcher() {\n        this._eventToProcessingFunction = {};\n        this._eventNameToCallbackSet = {};\n        this._connected = false;\n    }\n    Dispatcher.prototype._hasNoCallbacks = function () {\n        var eventNames = Object.keys(this._eventNameToCallbackSet);\n        for (var i = 0; i < eventNames.length; i++) {\n            if (this._eventNameToCallbackSet[eventNames[i]].size !== 0) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Dispatcher.prototype._connect = function () {\n        var _this = this;\n        if (this._connected) {\n            return;\n        }\n        Object.keys(this._eventToProcessingFunction).forEach(function (event) {\n            var processingFunction = _this._eventToProcessingFunction[event];\n            document.addEventListener(event, processingFunction);\n        });\n        this._connected = true;\n    };\n    Dispatcher.prototype._disconnect = function () {\n        var _this = this;\n        if (this._connected && this._hasNoCallbacks()) {\n            Object.keys(this._eventToProcessingFunction).forEach(function (event) {\n                var processingFunction = _this._eventToProcessingFunction[event];\n                document.removeEventListener(event, processingFunction);\n            });\n            this._connected = false;\n        }\n    };\n    Dispatcher.prototype._addCallbackForEvent = function (eventName, callback) {\n        if (this._eventNameToCallbackSet[eventName] == null) {\n            this._eventNameToCallbackSet[eventName] = new Utils.CallbackSet();\n        }\n        this._eventNameToCallbackSet[eventName].add(callback);\n        this._connect();\n    };\n    Dispatcher.prototype._removeCallbackForEvent = function (eventName, callback) {\n        if (this._eventNameToCallbackSet[eventName] != null) {\n            this._eventNameToCallbackSet[eventName].delete(callback);\n        }\n        this._disconnect();\n    };\n    Dispatcher.prototype._callCallbacksForEvent = function (eventName) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var callbackSet = this._eventNameToCallbackSet[eventName];\n        if (callbackSet != null) {\n            callbackSet.callCallbacks.apply(callbackSet, args);\n        }\n    };\n    return Dispatcher;\n}());\nexports.Dispatcher = Dispatcher;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/dispatchers/dispatcher.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/dispatchers/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/plottable/build/src/dispatchers/index.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./keyDispatcher */ \"./node_modules/plottable/build/src/dispatchers/keyDispatcher.js\"));\n__export(__webpack_require__(/*! ./mouseDispatcher */ \"./node_modules/plottable/build/src/dispatchers/mouseDispatcher.js\"));\n__export(__webpack_require__(/*! ./touchDispatcher */ \"./node_modules/plottable/build/src/dispatchers/touchDispatcher.js\"));\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/dispatchers/index.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/dispatchers/keyDispatcher.js":
/*!***********************************************************************!*\
  !*** ./node_modules/plottable/build/src/dispatchers/keyDispatcher.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar dispatcher_1 = __webpack_require__(/*! ./dispatcher */ \"./node_modules/plottable/build/src/dispatchers/dispatcher.js\");\nvar Key = (function (_super) {\n    __extends(Key, _super);\n    /**\n     * This constructor should not be invoked directly.\n     *\n     * @constructor\n     */\n    function Key() {\n        var _this = this;\n        _super.call(this);\n        this._eventToProcessingFunction[Key._KEYDOWN_EVENT_NAME] = function (e) { return _this._processKeydown(e); };\n        this._eventToProcessingFunction[Key._KEYUP_EVENT_NAME] = function (e) { return _this._processKeyup(e); };\n    }\n    /**\n     * Gets a Key Dispatcher. If one already exists it will be returned;\n     * otherwise, a new one will be created.\n     *\n     * @return {Dispatchers.Key}\n     */\n    Key.getDispatcher = function () {\n        var dispatcher = document[Key._DISPATCHER_KEY];\n        if (dispatcher == null) {\n            dispatcher = new Key();\n            document[Key._DISPATCHER_KEY] = dispatcher;\n        }\n        return dispatcher;\n    };\n    Key.prototype._processKeydown = function (event) {\n        this._callCallbacksForEvent(Key._KEYDOWN_EVENT_NAME, event.keyCode, event);\n    };\n    Key.prototype._processKeyup = function (event) {\n        this._callCallbacksForEvent(Key._KEYUP_EVENT_NAME, event.keyCode, event);\n    };\n    /**\n     * Registers a callback to be called whenever a key is pressed.\n     *\n     * @param {KeyCallback} callback\n     * @return {Dispatchers.Key} The calling Key Dispatcher.\n     */\n    Key.prototype.onKeyDown = function (callback) {\n        this._addCallbackForEvent(Key._KEYDOWN_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Removes the callback to be called whenever a key is pressed.\n     *\n     * @param {KeyCallback} callback\n     * @return {Dispatchers.Key} The calling Key Dispatcher.\n     */\n    Key.prototype.offKeyDown = function (callback) {\n        this._removeCallbackForEvent(Key._KEYDOWN_EVENT_NAME, callback);\n        return this;\n    };\n    /** Registers a callback to be called whenever a key is released.\n     *\n     * @param {KeyCallback} callback\n     * @return {Dispatchers.Key} The calling Key Dispatcher.\n     */\n    Key.prototype.onKeyUp = function (callback) {\n        this._addCallbackForEvent(Key._KEYUP_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Removes the callback to be called whenever a key is released.\n     *\n     * @param {KeyCallback} callback\n     * @return {Dispatchers.Key} The calling Key Dispatcher.\n     */\n    Key.prototype.offKeyUp = function (callback) {\n        this._removeCallbackForEvent(Key._KEYUP_EVENT_NAME, callback);\n        return this;\n    };\n    Key._DISPATCHER_KEY = \"__Plottable_Dispatcher_Key\";\n    Key._KEYDOWN_EVENT_NAME = \"keydown\";\n    Key._KEYUP_EVENT_NAME = \"keyup\";\n    return Key;\n}(dispatcher_1.Dispatcher));\nexports.Key = Key;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/dispatchers/keyDispatcher.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/dispatchers/mouseDispatcher.js":
/*!*************************************************************************!*\
  !*** ./node_modules/plottable/build/src/dispatchers/mouseDispatcher.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar dispatcher_1 = __webpack_require__(/*! ./dispatcher */ \"./node_modules/plottable/build/src/dispatchers/dispatcher.js\");\nvar Mouse = (function (_super) {\n    __extends(Mouse, _super);\n    /**\n     * This constructor not be invoked directly.\n     *\n     * @constructor\n     * @param {SVGElement} svg The root <svg> to attach to.\n     */\n    function Mouse(svg) {\n        var _this = this;\n        _super.call(this);\n        this._translator = Utils.ClientToSVGTranslator.getTranslator(svg);\n        this._lastMousePosition = { x: -1, y: -1 };\n        var processMoveCallback = function (e) { return _this._measureAndDispatch(e, Mouse._MOUSEMOVE_EVENT_NAME, \"page\"); };\n        this._eventToProcessingFunction[Mouse._MOUSEOVER_EVENT_NAME] = processMoveCallback;\n        this._eventToProcessingFunction[Mouse._MOUSEMOVE_EVENT_NAME] = processMoveCallback;\n        this._eventToProcessingFunction[Mouse._MOUSEOUT_EVENT_NAME] = processMoveCallback;\n        this._eventToProcessingFunction[Mouse._MOUSEDOWN_EVENT_NAME] =\n            function (e) { return _this._measureAndDispatch(e, Mouse._MOUSEDOWN_EVENT_NAME); };\n        this._eventToProcessingFunction[Mouse._MOUSEUP_EVENT_NAME] =\n            function (e) { return _this._measureAndDispatch(e, Mouse._MOUSEUP_EVENT_NAME, \"page\"); };\n        this._eventToProcessingFunction[Mouse._WHEEL_EVENT_NAME] =\n            function (e) { return _this._measureAndDispatch(e, Mouse._WHEEL_EVENT_NAME); };\n        this._eventToProcessingFunction[Mouse._DBLCLICK_EVENT_NAME] =\n            function (e) { return _this._measureAndDispatch(e, Mouse._DBLCLICK_EVENT_NAME); };\n    }\n    /**\n     * Get a Mouse Dispatcher for the <svg> containing elem.\n     * If one already exists on that <svg>, it will be returned; otherwise, a new one will be created.\n     *\n     * @param {SVGElement} elem\n     * @return {Dispatchers.Mouse}\n     */\n    Mouse.getDispatcher = function (elem) {\n        var svg = Utils.DOM.boundingSVG(elem);\n        var dispatcher = svg[Mouse._DISPATCHER_KEY];\n        if (dispatcher == null) {\n            dispatcher = new Mouse(svg);\n            svg[Mouse._DISPATCHER_KEY] = dispatcher;\n        }\n        return dispatcher;\n    };\n    /**\n     * Registers a callback to be called when the mouse position changes.\n     *\n     * @param {MouseCallback} callback\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\n     */\n    Mouse.prototype.onMouseMove = function (callback) {\n        this._addCallbackForEvent(Mouse._MOUSEMOVE_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when the mouse position changes.\n     *\n     * @param {MouseCallback} callback\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\n     */\n    Mouse.prototype.offMouseMove = function (callback) {\n        this._removeCallbackForEvent(Mouse._MOUSEMOVE_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Registers a callback to be called when a mousedown occurs.\n     *\n     * @param {MouseCallback} callback\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\n     */\n    Mouse.prototype.onMouseDown = function (callback) {\n        this._addCallbackForEvent(Mouse._MOUSEDOWN_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when a mousedown occurs.\n     *\n     * @param {MouseCallback} callback\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\n     */\n    Mouse.prototype.offMouseDown = function (callback) {\n        this._removeCallbackForEvent(Mouse._MOUSEDOWN_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Registers a callback to be called when a mouseup occurs.\n     *\n     * @param {MouseCallback} callback\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\n     */\n    Mouse.prototype.onMouseUp = function (callback) {\n        this._addCallbackForEvent(Mouse._MOUSEUP_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when a mouseup occurs.\n     *\n     * @param {MouseCallback} callback\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\n     */\n    Mouse.prototype.offMouseUp = function (callback) {\n        this._removeCallbackForEvent(Mouse._MOUSEUP_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Registers a callback to be called when a wheel event occurs.\n     *\n     * @param {MouseCallback} callback\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\n     */\n    Mouse.prototype.onWheel = function (callback) {\n        this._addCallbackForEvent(Mouse._WHEEL_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when a wheel event occurs.\n     *\n     * @param {MouseCallback} callback\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\n     */\n    Mouse.prototype.offWheel = function (callback) {\n        this._removeCallbackForEvent(Mouse._WHEEL_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Registers a callback to be called when a dblClick occurs.\n     *\n     * @param {MouseCallback} callback\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\n     */\n    Mouse.prototype.onDblClick = function (callback) {\n        this._addCallbackForEvent(Mouse._DBLCLICK_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when a dblClick occurs.\n     *\n     * @param {MouseCallback} callback\n     * @return {Dispatchers.Mouse} The calling Mouse Dispatcher.\n     */\n    Mouse.prototype.offDblClick = function (callback) {\n        this._removeCallbackForEvent(Mouse._DBLCLICK_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Computes the mouse position from the given event, and if successful\n     * calls all the callbacks in the provided callbackSet.\n     */\n    Mouse.prototype._measureAndDispatch = function (event, eventName, scope) {\n        if (scope === void 0) { scope = \"element\"; }\n        if (scope !== \"page\" && scope !== \"element\") {\n            throw new Error(\"Invalid scope '\" + scope + \"', must be 'element' or 'page'\");\n        }\n        if (scope === \"page\" || this.eventInsideSVG(event)) {\n            var newMousePosition = this._translator.computePosition(event.clientX, event.clientY);\n            if (newMousePosition != null) {\n                this._lastMousePosition = newMousePosition;\n                this._callCallbacksForEvent(eventName, this.lastMousePosition(), event);\n            }\n        }\n    };\n    Mouse.prototype.eventInsideSVG = function (event) {\n        return this._translator.insideSVG(event);\n    };\n    /**\n     * Returns the last computed mouse position in <svg> coordinate space.\n     *\n     * @return {Point}\n     */\n    Mouse.prototype.lastMousePosition = function () {\n        return this._lastMousePosition;\n    };\n    Mouse._DISPATCHER_KEY = \"__Plottable_Dispatcher_Mouse\";\n    Mouse._MOUSEOVER_EVENT_NAME = \"mouseover\";\n    Mouse._MOUSEMOVE_EVENT_NAME = \"mousemove\";\n    Mouse._MOUSEOUT_EVENT_NAME = \"mouseout\";\n    Mouse._MOUSEDOWN_EVENT_NAME = \"mousedown\";\n    Mouse._MOUSEUP_EVENT_NAME = \"mouseup\";\n    Mouse._WHEEL_EVENT_NAME = \"wheel\";\n    Mouse._DBLCLICK_EVENT_NAME = \"dblclick\";\n    return Mouse;\n}(dispatcher_1.Dispatcher));\nexports.Mouse = Mouse;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/dispatchers/mouseDispatcher.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/dispatchers/touchDispatcher.js":
/*!*************************************************************************!*\
  !*** ./node_modules/plottable/build/src/dispatchers/touchDispatcher.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar dispatcher_1 = __webpack_require__(/*! ./dispatcher */ \"./node_modules/plottable/build/src/dispatchers/dispatcher.js\");\nvar Touch = (function (_super) {\n    __extends(Touch, _super);\n    /**\n     * This constructor should not be invoked directly.\n     *\n     * @constructor\n     * @param {SVGElement} svg The root <svg> to attach to.\n     */\n    function Touch(svg) {\n        var _this = this;\n        _super.call(this);\n        this._translator = Utils.ClientToSVGTranslator.getTranslator(svg);\n        this._eventToProcessingFunction[Touch._TOUCHSTART_EVENT_NAME] =\n            function (e) { return _this._measureAndDispatch(e, Touch._TOUCHSTART_EVENT_NAME, \"page\"); };\n        this._eventToProcessingFunction[Touch._TOUCHMOVE_EVENT_NAME] =\n            function (e) { return _this._measureAndDispatch(e, Touch._TOUCHMOVE_EVENT_NAME, \"page\"); };\n        this._eventToProcessingFunction[Touch._TOUCHEND_EVENT_NAME] =\n            function (e) { return _this._measureAndDispatch(e, Touch._TOUCHEND_EVENT_NAME, \"page\"); };\n        this._eventToProcessingFunction[Touch._TOUCHCANCEL_EVENT_NAME] =\n            function (e) { return _this._measureAndDispatch(e, Touch._TOUCHCANCEL_EVENT_NAME, \"page\"); };\n    }\n    /**\n     * Gets a Touch Dispatcher for the <svg> containing elem.\n     * If one already exists on that <svg>, it will be returned; otherwise, a new one will be created.\n     *\n     * @param {SVGElement} elem\n     * @return {Dispatchers.Touch}\n     */\n    Touch.getDispatcher = function (elem) {\n        var svg = Utils.DOM.boundingSVG(elem);\n        var dispatcher = svg[Touch._DISPATCHER_KEY];\n        if (dispatcher == null) {\n            dispatcher = new Touch(svg);\n            svg[Touch._DISPATCHER_KEY] = dispatcher;\n        }\n        return dispatcher;\n    };\n    /**\n     * Registers a callback to be called when a touch starts.\n     *\n     * @param {TouchCallback} callback\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\n     */\n    Touch.prototype.onTouchStart = function (callback) {\n        this._addCallbackForEvent(Touch._TOUCHSTART_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when a touch starts.\n     *\n     * @param {TouchCallback} callback\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\n     */\n    Touch.prototype.offTouchStart = function (callback) {\n        this._removeCallbackForEvent(Touch._TOUCHSTART_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Registers a callback to be called when the touch position changes.\n     *\n     * @param {TouchCallback} callback\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\n     */\n    Touch.prototype.onTouchMove = function (callback) {\n        this._addCallbackForEvent(Touch._TOUCHMOVE_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when the touch position changes.\n     *\n     * @param {TouchCallback} callback\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\n     */\n    Touch.prototype.offTouchMove = function (callback) {\n        this._removeCallbackForEvent(Touch._TOUCHMOVE_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Registers a callback to be called when a touch ends.\n     *\n     * @param {TouchCallback} callback\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\n     */\n    Touch.prototype.onTouchEnd = function (callback) {\n        this._addCallbackForEvent(Touch._TOUCHEND_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when a touch ends.\n     *\n     * @param {TouchCallback} callback\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\n     */\n    Touch.prototype.offTouchEnd = function (callback) {\n        this._removeCallbackForEvent(Touch._TOUCHEND_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Registers a callback to be called when a touch is cancelled.\n     *\n     * @param {TouchCallback} callback\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\n     */\n    Touch.prototype.onTouchCancel = function (callback) {\n        this._addCallbackForEvent(Touch._TOUCHCANCEL_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when a touch is cancelled.\n     *\n     * @param {TouchCallback} callback\n     * @return {Dispatchers.Touch} The calling Touch Dispatcher.\n     */\n    Touch.prototype.offTouchCancel = function (callback) {\n        this._removeCallbackForEvent(Touch._TOUCHCANCEL_EVENT_NAME, callback);\n        return this;\n    };\n    /**\n     * Computes the Touch position from the given event, and if successful\n     * calls all the callbacks in the provided callbackSet.\n     */\n    Touch.prototype._measureAndDispatch = function (event, eventName, scope) {\n        if (scope === void 0) { scope = \"element\"; }\n        if (scope !== \"page\" && scope !== \"element\") {\n            throw new Error(\"Invalid scope '\" + scope + \"', must be 'element' or 'page'\");\n        }\n        if (scope === \"element\" && !this.eventInsideSVG(event)) {\n            return;\n        }\n        var touches = event.changedTouches;\n        var touchPositions = {};\n        var touchIdentifiers = [];\n        for (var i = 0; i < touches.length; i++) {\n            var touch = touches[i];\n            var touchID = touch.identifier;\n            var newTouchPosition = this._translator.computePosition(touch.clientX, touch.clientY);\n            if (newTouchPosition != null) {\n                touchPositions[touchID] = newTouchPosition;\n                touchIdentifiers.push(touchID);\n            }\n        }\n        ;\n        if (touchIdentifiers.length > 0) {\n            this._callCallbacksForEvent(eventName, touchIdentifiers, touchPositions, event);\n        }\n    };\n    Touch.prototype.eventInsideSVG = function (event) {\n        return this._translator.insideSVG(event);\n    };\n    Touch._DISPATCHER_KEY = \"__Plottable_Dispatcher_Touch\";\n    Touch._TOUCHSTART_EVENT_NAME = \"touchstart\";\n    Touch._TOUCHMOVE_EVENT_NAME = \"touchmove\";\n    Touch._TOUCHEND_EVENT_NAME = \"touchend\";\n    Touch._TOUCHCANCEL_EVENT_NAME = \"touchcancel\";\n    return Touch;\n}(dispatcher_1.Dispatcher));\nexports.Touch = Touch;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/dispatchers/touchDispatcher.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/drawers/arcDrawer.js":
/*!***************************************************************!*\
  !*** ./node_modules/plottable/build/src/drawers/arcDrawer.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar drawer_1 = __webpack_require__(/*! ./drawer */ \"./node_modules/plottable/build/src/drawers/drawer.js\");\nvar Arc = (function (_super) {\n    __extends(Arc, _super);\n    function Arc(dataset) {\n        _super.call(this, dataset);\n        this._className = \"arc fill\";\n        this._svgElementName = \"path\";\n    }\n    Arc.prototype._applyDefaultAttributes = function (selection) {\n        _super.prototype._applyDefaultAttributes.call(this, selection);\n        selection.style(\"stroke\", \"none\");\n    };\n    return Arc;\n}(drawer_1.Drawer));\nexports.Arc = Arc;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/drawers/arcDrawer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/drawers/arcOutlineDrawer.js":
/*!**********************************************************************!*\
  !*** ./node_modules/plottable/build/src/drawers/arcOutlineDrawer.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar drawer_1 = __webpack_require__(/*! ./drawer */ \"./node_modules/plottable/build/src/drawers/drawer.js\");\nvar ArcOutline = (function (_super) {\n    __extends(ArcOutline, _super);\n    function ArcOutline(dataset) {\n        _super.call(this, dataset);\n        this._className = \"arc outline\";\n        this._svgElementName = \"path\";\n    }\n    ArcOutline.prototype._applyDefaultAttributes = function (selection) {\n        _super.prototype._applyDefaultAttributes.call(this, selection);\n        selection.style(\"fill\", \"none\");\n    };\n    return ArcOutline;\n}(drawer_1.Drawer));\nexports.ArcOutline = ArcOutline;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/drawers/arcOutlineDrawer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/drawers/areaDrawer.js":
/*!****************************************************************!*\
  !*** ./node_modules/plottable/build/src/drawers/areaDrawer.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar drawer_1 = __webpack_require__(/*! ./drawer */ \"./node_modules/plottable/build/src/drawers/drawer.js\");\nvar Area = (function (_super) {\n    __extends(Area, _super);\n    function Area(dataset) {\n        _super.call(this, dataset);\n        this._className = \"area\";\n        this._svgElementName = \"path\";\n    }\n    Area.prototype._applyDefaultAttributes = function (selection) {\n        _super.prototype._applyDefaultAttributes.call(this, selection);\n        selection.style(\"stroke\", \"none\");\n    };\n    Area.prototype.selectionForIndex = function (index) {\n        return d3.select(this.selection()[0][0]);\n    };\n    return Area;\n}(drawer_1.Drawer));\nexports.Area = Area;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/drawers/areaDrawer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/drawers/drawer.js":
/*!************************************************************!*\
  !*** ./node_modules/plottable/build/src/drawers/drawer.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Drawer = (function () {\n    /**\n     * A Drawer draws svg elements based on the input Dataset.\n     *\n     * @constructor\n     * @param {Dataset} dataset The dataset associated with this Drawer\n     */\n    function Drawer(dataset) {\n        this._cachedSelectionValid = false;\n        this._dataset = dataset;\n        this._svgElementName = \"path\";\n    }\n    Drawer.prototype.renderArea = function (area) {\n        if (area == null) {\n            return this._renderArea;\n        }\n        this._renderArea = area;\n        this._cachedSelectionValid = false;\n        return this;\n    };\n    /**\n     * Removes the Drawer and its renderArea\n     */\n    Drawer.prototype.remove = function () {\n        if (this.renderArea() != null) {\n            this.renderArea().remove();\n        }\n    };\n    /**\n     * Binds data to selection\n     *\n     * @param{any[]} data The data to be drawn\n     */\n    Drawer.prototype._bindSelectionData = function (data) {\n        var dataElements = this.selection().data(data);\n        dataElements.enter().append(this._svgElementName);\n        dataElements.exit().remove();\n        this._applyDefaultAttributes(dataElements);\n    };\n    Drawer.prototype._applyDefaultAttributes = function (selection) {\n        if (this._className != null) {\n            selection.classed(this._className, true);\n        }\n    };\n    /**\n     * Draws data using one step\n     *\n     * @param{AppliedDrawStep} step The step, how data should be drawn.\n     */\n    Drawer.prototype._drawStep = function (step) {\n        var selection = this.selection();\n        var colorAttributes = [\"fill\", \"stroke\"];\n        colorAttributes.forEach(function (colorAttribute) {\n            if (step.attrToAppliedProjector[colorAttribute] != null) {\n                selection.attr(colorAttribute, step.attrToAppliedProjector[colorAttribute]);\n            }\n        });\n        step.animator.animate(selection, step.attrToAppliedProjector);\n        if (this._className != null) {\n            this.selection().classed(this._className, true);\n        }\n    };\n    Drawer.prototype._appliedProjectors = function (attrToProjector) {\n        var _this = this;\n        var modifiedAttrToProjector = {};\n        Object.keys(attrToProjector).forEach(function (attr) {\n            modifiedAttrToProjector[attr] =\n                function (datum, index) { return attrToProjector[attr](datum, index, _this._dataset); };\n        });\n        return modifiedAttrToProjector;\n    };\n    /**\n     * Calculates the total time it takes to use the input drawSteps to draw the input data\n     *\n     * @param {any[]} data The data that would have been drawn\n     * @param {Drawers.DrawStep[]} drawSteps The DrawSteps to use\n     * @returns {number} The total time it takes to draw\n     */\n    Drawer.prototype.totalDrawTime = function (data, drawSteps) {\n        var delay = 0;\n        drawSteps.forEach(function (drawStep, i) {\n            delay += drawStep.animator.totalTime(data.length);\n        });\n        return delay;\n    };\n    /**\n     * Draws the data into the renderArea using the spefic steps and metadata\n     *\n     * @param{any[]} data The data to be drawn\n     * @param{DrawStep[]} drawSteps The list of steps, which needs to be drawn\n     */\n    Drawer.prototype.draw = function (data, drawSteps) {\n        var _this = this;\n        var appliedDrawSteps = drawSteps.map(function (dr) {\n            var attrToAppliedProjector = _this._appliedProjectors(dr.attrToProjector);\n            return {\n                attrToAppliedProjector: attrToAppliedProjector,\n                animator: dr.animator,\n            };\n        });\n        this._bindSelectionData(data);\n        this._cachedSelectionValid = false;\n        var delay = 0;\n        appliedDrawSteps.forEach(function (drawStep, i) {\n            Utils.Window.setTimeout(function () { return _this._drawStep(drawStep); }, delay);\n            delay += drawStep.animator.totalTime(data.length);\n        });\n        return this;\n    };\n    Drawer.prototype.selection = function () {\n        if (!this._cachedSelectionValid) {\n            this._cachedSelection = this.renderArea().selectAll(this.selector());\n            this._cachedSelectionValid = true;\n        }\n        return this._cachedSelection;\n    };\n    /**\n     * Returns the CSS selector for this Drawer's visual elements.\n     */\n    Drawer.prototype.selector = function () {\n        return this._svgElementName;\n    };\n    /**\n     * Returns the D3 selection corresponding to the datum with the specified index.\n     */\n    Drawer.prototype.selectionForIndex = function (index) {\n        return d3.select(this.selection()[0][index]);\n    };\n    return Drawer;\n}());\nexports.Drawer = Drawer;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/drawers/drawer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/drawers/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/plottable/build/src/drawers/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./arcDrawer */ \"./node_modules/plottable/build/src/drawers/arcDrawer.js\"));\n__export(__webpack_require__(/*! ./arcOutlineDrawer */ \"./node_modules/plottable/build/src/drawers/arcOutlineDrawer.js\"));\n__export(__webpack_require__(/*! ./areaDrawer */ \"./node_modules/plottable/build/src/drawers/areaDrawer.js\"));\n__export(__webpack_require__(/*! ./lineDrawer */ \"./node_modules/plottable/build/src/drawers/lineDrawer.js\"));\n__export(__webpack_require__(/*! ./rectangleDrawer */ \"./node_modules/plottable/build/src/drawers/rectangleDrawer.js\"));\n__export(__webpack_require__(/*! ./segmentDrawer */ \"./node_modules/plottable/build/src/drawers/segmentDrawer.js\"));\n__export(__webpack_require__(/*! ./symbolDrawer */ \"./node_modules/plottable/build/src/drawers/symbolDrawer.js\"));\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/drawers/index.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/drawers/lineDrawer.js":
/*!****************************************************************!*\
  !*** ./node_modules/plottable/build/src/drawers/lineDrawer.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar drawer_1 = __webpack_require__(/*! ./drawer */ \"./node_modules/plottable/build/src/drawers/drawer.js\");\nvar Line = (function (_super) {\n    __extends(Line, _super);\n    function Line(dataset) {\n        _super.call(this, dataset);\n        this._className = \"line\";\n        this._svgElementName = \"path\";\n    }\n    Line.prototype._applyDefaultAttributes = function (selection) {\n        _super.prototype._applyDefaultAttributes.call(this, selection);\n        selection.style(\"fill\", \"none\");\n    };\n    Line.prototype.selectionForIndex = function (index) {\n        return d3.select(this.selection()[0][0]);\n    };\n    return Line;\n}(drawer_1.Drawer));\nexports.Line = Line;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/drawers/lineDrawer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/drawers/rectangleDrawer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/plottable/build/src/drawers/rectangleDrawer.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar drawer_1 = __webpack_require__(/*! ./drawer */ \"./node_modules/plottable/build/src/drawers/drawer.js\");\nvar Rectangle = (function (_super) {\n    __extends(Rectangle, _super);\n    function Rectangle(dataset) {\n        _super.call(this, dataset);\n        this._svgElementName = \"rect\";\n    }\n    return Rectangle;\n}(drawer_1.Drawer));\nexports.Rectangle = Rectangle;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/drawers/rectangleDrawer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/drawers/segmentDrawer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/plottable/build/src/drawers/segmentDrawer.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar drawer_1 = __webpack_require__(/*! ./drawer */ \"./node_modules/plottable/build/src/drawers/drawer.js\");\nvar Segment = (function (_super) {\n    __extends(Segment, _super);\n    function Segment(dataset) {\n        _super.call(this, dataset);\n        this._svgElementName = \"line\";\n    }\n    return Segment;\n}(drawer_1.Drawer));\nexports.Segment = Segment;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/drawers/segmentDrawer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/drawers/symbolDrawer.js":
/*!******************************************************************!*\
  !*** ./node_modules/plottable/build/src/drawers/symbolDrawer.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar drawer_1 = __webpack_require__(/*! ./drawer */ \"./node_modules/plottable/build/src/drawers/drawer.js\");\nvar Symbol = (function (_super) {\n    __extends(Symbol, _super);\n    function Symbol(dataset) {\n        _super.call(this, dataset);\n        this._svgElementName = \"path\";\n        this._className = \"symbol\";\n    }\n    return Symbol;\n}(drawer_1.Drawer));\nexports.Symbol = Symbol;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/drawers/symbolDrawer.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/index.js":
/*!***************************************************!*\
  !*** ./node_modules/plottable/build/src/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar Animators = __webpack_require__(/*! ./animators */ \"./node_modules/plottable/build/src/animators/index.js\");\nexports.Animators = Animators;\nvar Axes = __webpack_require__(/*! ./axes */ \"./node_modules/plottable/build/src/axes/index.js\");\nexports.Axes = Axes;\nvar Components = __webpack_require__(/*! ./components */ \"./node_modules/plottable/build/src/components/index.js\");\nexports.Components = Components;\nvar Configs = __webpack_require__(/*! ./core/config */ \"./node_modules/plottable/build/src/core/config.js\");\nexports.Configs = Configs;\nvar Formatters = __webpack_require__(/*! ./core/formatters */ \"./node_modules/plottable/build/src/core/formatters.js\");\nexports.Formatters = Formatters;\nvar RenderController = __webpack_require__(/*! ./core/renderController */ \"./node_modules/plottable/build/src/core/renderController.js\");\nexports.RenderController = RenderController;\nvar RenderPolicies = __webpack_require__(/*! ./core/renderPolicy */ \"./node_modules/plottable/build/src/core/renderPolicy.js\");\nexports.RenderPolicies = RenderPolicies;\nvar SymbolFactories = __webpack_require__(/*! ./core/symbolFactories */ \"./node_modules/plottable/build/src/core/symbolFactories.js\");\nexports.SymbolFactories = SymbolFactories;\nvar Dispatchers = __webpack_require__(/*! ./dispatchers */ \"./node_modules/plottable/build/src/dispatchers/index.js\");\nexports.Dispatchers = Dispatchers;\nvar Drawers = __webpack_require__(/*! ./drawers */ \"./node_modules/plottable/build/src/drawers/index.js\");\nexports.Drawers = Drawers;\nvar Interactions = __webpack_require__(/*! ./interactions */ \"./node_modules/plottable/build/src/interactions/index.js\");\nexports.Interactions = Interactions;\nvar Plots = __webpack_require__(/*! ./plots */ \"./node_modules/plottable/build/src/plots/index.js\");\nexports.Plots = Plots;\nvar Scales = __webpack_require__(/*! ./scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nexports.Scales = Scales;\nvar Utils = __webpack_require__(/*! ./utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nexports.Utils = Utils;\n__export(__webpack_require__(/*! ./axes/axis */ \"./node_modules/plottable/build/src/axes/axis.js\"));\nvar timeAxis_1 = __webpack_require__(/*! ./axes/timeAxis */ \"./node_modules/plottable/build/src/axes/timeAxis.js\");\nexports.TimeInterval = timeAxis_1.TimeInterval;\n__export(__webpack_require__(/*! ./components/component */ \"./node_modules/plottable/build/src/components/component.js\"));\n__export(__webpack_require__(/*! ./components/componentContainer */ \"./node_modules/plottable/build/src/components/componentContainer.js\"));\n__export(__webpack_require__(/*! ./core/dataset */ \"./node_modules/plottable/build/src/core/dataset.js\"));\nvar version_1 = __webpack_require__(/*! ./core/version */ \"./node_modules/plottable/build/src/core/version.js\");\nexports.version = version_1.version;\n__export(__webpack_require__(/*! ./dispatchers/dispatcher */ \"./node_modules/plottable/build/src/dispatchers/dispatcher.js\"));\n__export(__webpack_require__(/*! ./drawers/drawer */ \"./node_modules/plottable/build/src/drawers/drawer.js\"));\n__export(__webpack_require__(/*! ./interactions/interaction */ \"./node_modules/plottable/build/src/interactions/interaction.js\"));\n__export(__webpack_require__(/*! ./interactions/keyInteraction */ \"./node_modules/plottable/build/src/interactions/keyInteraction.js\"));\n__export(__webpack_require__(/*! ./plots/xyPlot */ \"./node_modules/plottable/build/src/plots/xyPlot.js\"));\n__export(__webpack_require__(/*! ./plots/plot */ \"./node_modules/plottable/build/src/plots/plot.js\"));\n__export(__webpack_require__(/*! ./scales/quantitativeScale */ \"./node_modules/plottable/build/src/scales/quantitativeScale.js\"));\n__export(__webpack_require__(/*! ./scales/scale */ \"./node_modules/plottable/build/src/scales/scale.js\"));\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/index.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/interactions/clickInteraction.js":
/*!***************************************************************************!*\
  !*** ./node_modules/plottable/build/src/interactions/clickInteraction.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Dispatchers = __webpack_require__(/*! ../dispatchers */ \"./node_modules/plottable/build/src/dispatchers/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar interaction_1 = __webpack_require__(/*! ./interaction */ \"./node_modules/plottable/build/src/interactions/interaction.js\");\nvar Click = (function (_super) {\n    __extends(Click, _super);\n    function Click() {\n        var _this = this;\n        _super.apply(this, arguments);\n        this._clickedDown = false;\n        this._onClickCallbacks = new Utils.CallbackSet();\n        this._mouseDownCallback = function (p, event) { return _this._handleClickDown(p, event); };\n        this._mouseUpCallback = function (p, event) { return _this._handleClickUp(p, event); };\n        this._touchStartCallback = function (ids, idToPoint, event) { return _this._handleClickDown(idToPoint[ids[0]], event); };\n        this._touchEndCallback = function (ids, idToPoint, event) { return _this._handleClickUp(idToPoint[ids[0]], event); };\n        this._touchCancelCallback = function (ids, idToPoint) { return _this._clickedDown = false; };\n    }\n    Click.prototype._anchor = function (component) {\n        _super.prototype._anchor.call(this, component);\n        this._mouseDispatcher = Dispatchers.Mouse.getDispatcher(component.content().node());\n        this._mouseDispatcher.onMouseDown(this._mouseDownCallback);\n        this._mouseDispatcher.onMouseUp(this._mouseUpCallback);\n        this._touchDispatcher = Dispatchers.Touch.getDispatcher(component.content().node());\n        this._touchDispatcher.onTouchStart(this._touchStartCallback);\n        this._touchDispatcher.onTouchEnd(this._touchEndCallback);\n        this._touchDispatcher.onTouchCancel(this._touchCancelCallback);\n    };\n    Click.prototype._unanchor = function () {\n        _super.prototype._unanchor.call(this);\n        this._mouseDispatcher.offMouseDown(this._mouseDownCallback);\n        this._mouseDispatcher.offMouseUp(this._mouseUpCallback);\n        this._mouseDispatcher = null;\n        this._touchDispatcher.offTouchStart(this._touchStartCallback);\n        this._touchDispatcher.offTouchEnd(this._touchEndCallback);\n        this._touchDispatcher.offTouchCancel(this._touchCancelCallback);\n        this._touchDispatcher = null;\n    };\n    Click.prototype._handleClickDown = function (p, e) {\n        var translatedPoint = this._translateToComponentSpace(p);\n        if (this._isInsideComponent(translatedPoint)) {\n            this._clickedDown = true;\n        }\n    };\n    Click.prototype._handleClickUp = function (p, e) {\n        var translatedPoint = this._translateToComponentSpace(p);\n        if (this._clickedDown && this._isInsideComponent(translatedPoint)) {\n            this._onClickCallbacks.callCallbacks(translatedPoint, e);\n        }\n        this._clickedDown = false;\n    };\n    /**\n     * Adds a callback to be called when the Component is clicked.\n     *\n     * @param {ClickCallback} callback\n     * @return {Interactions.Click} The calling Click Interaction.\n     */\n    Click.prototype.onClick = function (callback) {\n        this._onClickCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when the Component is clicked.\n     *\n     * @param {ClickCallback} callback\n     * @return {Interactions.Click} The calling Click Interaction.\n     */\n    Click.prototype.offClick = function (callback) {\n        this._onClickCallbacks.delete(callback);\n        return this;\n    };\n    return Click;\n}(interaction_1.Interaction));\nexports.Click = Click;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/interactions/clickInteraction.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/interactions/doubleClickInteraction.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/plottable/build/src/interactions/doubleClickInteraction.js ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Dispatchers = __webpack_require__(/*! ../dispatchers */ \"./node_modules/plottable/build/src/dispatchers/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar interaction_1 = __webpack_require__(/*! ./interaction */ \"./node_modules/plottable/build/src/interactions/interaction.js\");\nvar ClickState;\n(function (ClickState) {\n    ClickState[ClickState[\"NotClicked\"] = 0] = \"NotClicked\";\n    ClickState[ClickState[\"SingleClicked\"] = 1] = \"SingleClicked\";\n    ClickState[ClickState[\"DoubleClicked\"] = 2] = \"DoubleClicked\";\n})(ClickState || (ClickState = {}));\nvar DoubleClick = (function (_super) {\n    __extends(DoubleClick, _super);\n    function DoubleClick() {\n        var _this = this;\n        _super.apply(this, arguments);\n        this._clickState = ClickState.NotClicked;\n        this._clickedDown = false;\n        this._onDoubleClickCallbacks = new Utils.CallbackSet();\n        this._mouseDownCallback = function (p) { return _this._handleClickDown(p); };\n        this._mouseUpCallback = function (p) { return _this._handleClickUp(p); };\n        this._dblClickCallback = function (p) { return _this._handleDblClick(); };\n        this._touchStartCallback = function (ids, idToPoint) { return _this._handleClickDown(idToPoint[ids[0]]); };\n        this._touchEndCallback = function (ids, idToPoint) { return _this._handleClickUp(idToPoint[ids[0]]); };\n        this._touchCancelCallback = function (ids, idToPoint) { return _this._handleClickCancel(); };\n    }\n    DoubleClick.prototype._anchor = function (component) {\n        _super.prototype._anchor.call(this, component);\n        this._mouseDispatcher = Dispatchers.Mouse.getDispatcher(component.content().node());\n        this._mouseDispatcher.onMouseDown(this._mouseDownCallback);\n        this._mouseDispatcher.onMouseUp(this._mouseUpCallback);\n        this._mouseDispatcher.onDblClick(this._dblClickCallback);\n        this._touchDispatcher = Dispatchers.Touch.getDispatcher(component.content().node());\n        this._touchDispatcher.onTouchStart(this._touchStartCallback);\n        this._touchDispatcher.onTouchEnd(this._touchEndCallback);\n        this._touchDispatcher.onTouchCancel(this._touchCancelCallback);\n    };\n    DoubleClick.prototype._unanchor = function () {\n        _super.prototype._unanchor.call(this);\n        this._mouseDispatcher.offMouseDown(this._mouseDownCallback);\n        this._mouseDispatcher.offMouseUp(this._mouseUpCallback);\n        this._mouseDispatcher.offDblClick(this._dblClickCallback);\n        this._mouseDispatcher = null;\n        this._touchDispatcher.offTouchStart(this._touchStartCallback);\n        this._touchDispatcher.offTouchEnd(this._touchEndCallback);\n        this._touchDispatcher.offTouchCancel(this._touchCancelCallback);\n        this._touchDispatcher = null;\n    };\n    DoubleClick.prototype._handleClickDown = function (p) {\n        var translatedP = this._translateToComponentSpace(p);\n        if (this._isInsideComponent(translatedP)) {\n            if (!(this._clickState === ClickState.SingleClicked) || !DoubleClick._pointsEqual(translatedP, this._clickedPoint)) {\n                this._clickState = ClickState.NotClicked;\n            }\n            this._clickedPoint = translatedP;\n            this._clickedDown = true;\n        }\n    };\n    DoubleClick.prototype._handleClickUp = function (p) {\n        var translatedP = this._translateToComponentSpace(p);\n        if (this._clickedDown && DoubleClick._pointsEqual(translatedP, this._clickedPoint)) {\n            this._clickState = this._clickState === ClickState.NotClicked ? ClickState.SingleClicked : ClickState.DoubleClicked;\n        }\n        else {\n            this._clickState = ClickState.NotClicked;\n        }\n        this._clickedDown = false;\n    };\n    DoubleClick.prototype._handleDblClick = function () {\n        if (this._clickState === ClickState.DoubleClicked) {\n            this._onDoubleClickCallbacks.callCallbacks(this._clickedPoint);\n            this._clickState = ClickState.NotClicked;\n        }\n    };\n    DoubleClick.prototype._handleClickCancel = function () {\n        this._clickState = ClickState.NotClicked;\n        this._clickedDown = false;\n    };\n    DoubleClick._pointsEqual = function (p1, p2) {\n        return p1.x === p2.x && p1.y === p2.y;\n    };\n    /**\n     * Adds a callback to be called when the Component is double-clicked.\n     *\n     * @param {ClickCallback} callback\n     * @return {Interactions.DoubleClick} The calling DoubleClick Interaction.\n     */\n    DoubleClick.prototype.onDoubleClick = function (callback) {\n        this._onDoubleClickCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when the Component is double-clicked.\n     *\n     * @param {ClickCallback} callback\n     * @return {Interactions.DoubleClick} The calling DoubleClick Interaction.\n     */\n    DoubleClick.prototype.offDoubleClick = function (callback) {\n        this._onDoubleClickCallbacks.delete(callback);\n        return this;\n    };\n    return DoubleClick;\n}(interaction_1.Interaction));\nexports.DoubleClick = DoubleClick;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/interactions/doubleClickInteraction.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/interactions/dragInteraction.js":
/*!**************************************************************************!*\
  !*** ./node_modules/plottable/build/src/interactions/dragInteraction.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Dispatchers = __webpack_require__(/*! ../dispatchers */ \"./node_modules/plottable/build/src/dispatchers/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar interaction_1 = __webpack_require__(/*! ./interaction */ \"./node_modules/plottable/build/src/interactions/interaction.js\");\nvar Drag = (function (_super) {\n    __extends(Drag, _super);\n    function Drag() {\n        var _this = this;\n        _super.apply(this, arguments);\n        this._dragging = false;\n        this._constrainedToComponent = true;\n        this._dragStartCallbacks = new Utils.CallbackSet();\n        this._dragCallbacks = new Utils.CallbackSet();\n        this._dragEndCallbacks = new Utils.CallbackSet();\n        this._mouseDownCallback = function (p, e) { return _this._startDrag(p, e); };\n        this._mouseMoveCallback = function (p, e) { return _this._doDrag(p, e); };\n        this._mouseUpCallback = function (p, e) { return _this._endDrag(p, e); };\n        this._touchStartCallback = function (ids, idToPoint, e) { return _this._startDrag(idToPoint[ids[0]], e); };\n        this._touchMoveCallback = function (ids, idToPoint, e) { return _this._doDrag(idToPoint[ids[0]], e); };\n        this._touchEndCallback = function (ids, idToPoint, e) { return _this._endDrag(idToPoint[ids[0]], e); };\n    }\n    Drag.prototype._anchor = function (component) {\n        _super.prototype._anchor.call(this, component);\n        this._mouseDispatcher = Dispatchers.Mouse.getDispatcher(this._componentAttachedTo.content().node());\n        this._mouseDispatcher.onMouseDown(this._mouseDownCallback);\n        this._mouseDispatcher.onMouseMove(this._mouseMoveCallback);\n        this._mouseDispatcher.onMouseUp(this._mouseUpCallback);\n        this._touchDispatcher = Dispatchers.Touch.getDispatcher(this._componentAttachedTo.content().node());\n        this._touchDispatcher.onTouchStart(this._touchStartCallback);\n        this._touchDispatcher.onTouchMove(this._touchMoveCallback);\n        this._touchDispatcher.onTouchEnd(this._touchEndCallback);\n    };\n    Drag.prototype._unanchor = function () {\n        _super.prototype._unanchor.call(this);\n        this._mouseDispatcher.offMouseDown(this._mouseDownCallback);\n        this._mouseDispatcher.offMouseMove(this._mouseMoveCallback);\n        this._mouseDispatcher.offMouseUp(this._mouseUpCallback);\n        this._mouseDispatcher = null;\n        this._touchDispatcher.offTouchStart(this._touchStartCallback);\n        this._touchDispatcher.offTouchMove(this._touchMoveCallback);\n        this._touchDispatcher.offTouchEnd(this._touchEndCallback);\n        this._touchDispatcher = null;\n    };\n    Drag.prototype._translateAndConstrain = function (p) {\n        var translatedP = this._translateToComponentSpace(p);\n        if (!this._constrainedToComponent) {\n            return translatedP;\n        }\n        return {\n            x: Utils.Math.clamp(translatedP.x, 0, this._componentAttachedTo.width()),\n            y: Utils.Math.clamp(translatedP.y, 0, this._componentAttachedTo.height()),\n        };\n    };\n    Drag.prototype._startDrag = function (point, event) {\n        if (event instanceof MouseEvent && event.button !== 0) {\n            return;\n        }\n        var translatedP = this._translateToComponentSpace(point);\n        if (this._isInsideComponent(translatedP)) {\n            event.preventDefault();\n            this._dragging = true;\n            this._dragOrigin = translatedP;\n            this._dragStartCallbacks.callCallbacks(this._dragOrigin);\n        }\n    };\n    Drag.prototype._doDrag = function (point, event) {\n        if (this._dragging) {\n            this._dragCallbacks.callCallbacks(this._dragOrigin, this._translateAndConstrain(point));\n        }\n    };\n    Drag.prototype._endDrag = function (point, event) {\n        if (event instanceof MouseEvent && event.button !== 0) {\n            return;\n        }\n        if (this._dragging) {\n            this._dragging = false;\n            this._dragEndCallbacks.callCallbacks(this._dragOrigin, this._translateAndConstrain(point));\n        }\n    };\n    Drag.prototype.constrainedToComponent = function (constrainedToComponent) {\n        if (constrainedToComponent == null) {\n            return this._constrainedToComponent;\n        }\n        this._constrainedToComponent = constrainedToComponent;\n        return this;\n    };\n    /**\n     * Adds a callback to be called when dragging starts.\n     *\n     * @param {DragCallback} callback\n     * @returns {Drag} The calling Drag Interaction.\n     */\n    Drag.prototype.onDragStart = function (callback) {\n        this._dragStartCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when dragging starts.\n     *\n     * @param {DragCallback} callback\n     * @returns {Drag} The calling Drag Interaction.\n     */\n    Drag.prototype.offDragStart = function (callback) {\n        this._dragStartCallbacks.delete(callback);\n        return this;\n    };\n    /**\n     * Adds a callback to be called during dragging.\n     *\n     * @param {DragCallback} callback\n     * @returns {Drag} The calling Drag Interaction.\n     */\n    Drag.prototype.onDrag = function (callback) {\n        this._dragCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called during dragging.\n     *\n     * @param {DragCallback} callback\n     * @returns {Drag} The calling Drag Interaction.\n     */\n    Drag.prototype.offDrag = function (callback) {\n        this._dragCallbacks.delete(callback);\n        return this;\n    };\n    /**\n     * Adds a callback to be called when dragging ends.\n     *\n     * @param {DragCallback} callback\n     * @returns {Drag} The calling Drag Interaction.\n     */\n    Drag.prototype.onDragEnd = function (callback) {\n        this._dragEndCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when dragging ends.\n     *\n     * @param {DragCallback} callback\n     * @returns {Drag} The calling Drag Interaction.\n     */\n    Drag.prototype.offDragEnd = function (callback) {\n        this._dragEndCallbacks.delete(callback);\n        return this;\n    };\n    return Drag;\n}(interaction_1.Interaction));\nexports.Drag = Drag;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/interactions/dragInteraction.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/interactions/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/plottable/build/src/interactions/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./clickInteraction */ \"./node_modules/plottable/build/src/interactions/clickInteraction.js\"));\n__export(__webpack_require__(/*! ./doubleClickInteraction */ \"./node_modules/plottable/build/src/interactions/doubleClickInteraction.js\"));\n__export(__webpack_require__(/*! ./dragInteraction */ \"./node_modules/plottable/build/src/interactions/dragInteraction.js\"));\n__export(__webpack_require__(/*! ./keyInteraction */ \"./node_modules/plottable/build/src/interactions/keyInteraction.js\"));\n__export(__webpack_require__(/*! ./panZoomInteraction */ \"./node_modules/plottable/build/src/interactions/panZoomInteraction.js\"));\n__export(__webpack_require__(/*! ./pointerInteraction */ \"./node_modules/plottable/build/src/interactions/pointerInteraction.js\"));\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/interactions/index.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/interactions/interaction.js":
/*!**********************************************************************!*\
  !*** ./node_modules/plottable/build/src/interactions/interaction.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Interaction = (function () {\n    function Interaction() {\n        var _this = this;\n        this._anchorCallback = function (component) { return _this._anchor(component); };\n        this._enabled = true;\n    }\n    Interaction.prototype._anchor = function (component) {\n        this._isAnchored = true;\n    };\n    Interaction.prototype._unanchor = function () {\n        this._isAnchored = false;\n    };\n    /**\n     * Attaches this Interaction to a Component.\n     * If the Interaction was already attached to a Component, it first detaches itself from the old Component.\n     *\n     * @param {Component} component\n     * @returns {Interaction} The calling Interaction.\n     */\n    Interaction.prototype.attachTo = function (component) {\n        this._disconnect();\n        this._componentAttachedTo = component;\n        this._connect();\n        return this;\n    };\n    Interaction.prototype._connect = function () {\n        if (this.enabled() && this._componentAttachedTo != null && !this._isAnchored) {\n            this._componentAttachedTo.onAnchor(this._anchorCallback);\n        }\n    };\n    /**\n     * Detaches this Interaction from the Component.\n     * This Interaction can be reused.\n     *\n     * @param {Component} component\n     * @returns {Interaction} The calling Interaction.\n     */\n    Interaction.prototype.detachFrom = function (component) {\n        this._disconnect();\n        this._componentAttachedTo = null;\n        return this;\n    };\n    Interaction.prototype._disconnect = function () {\n        if (this._isAnchored) {\n            this._unanchor();\n        }\n        if (this._componentAttachedTo != null) {\n            this._componentAttachedTo.offAnchor(this._anchorCallback);\n        }\n    };\n    Interaction.prototype.enabled = function (enabled) {\n        if (enabled == null) {\n            return this._enabled;\n        }\n        this._enabled = enabled;\n        if (this._enabled) {\n            this._connect();\n        }\n        else {\n            this._disconnect();\n        }\n        return this;\n    };\n    /**\n     * Translates an <svg>-coordinate-space point to Component-space coordinates.\n     *\n     * @param {Point} p A Point in <svg>-space coordinates.\n     * @return {Point} The same location in Component-space coordinates.\n     */\n    Interaction.prototype._translateToComponentSpace = function (p) {\n        var origin = this._componentAttachedTo.originToSVG();\n        return {\n            x: p.x - origin.x,\n            y: p.y - origin.y,\n        };\n    };\n    /**\n     * Checks whether a Component-coordinate-space Point is inside the Component.\n     *\n     * @param {Point} p A Point in Compoennt-space coordinates.\n     * @return {boolean} Whether or not the point is inside the Component.\n     */\n    Interaction.prototype._isInsideComponent = function (p) {\n        return 0 <= p.x && 0 <= p.y\n            && p.x <= this._componentAttachedTo.width()\n            && p.y <= this._componentAttachedTo.height();\n    };\n    return Interaction;\n}());\nexports.Interaction = Interaction;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/interactions/interaction.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/interactions/keyInteraction.js":
/*!*************************************************************************!*\
  !*** ./node_modules/plottable/build/src/interactions/keyInteraction.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Dispatchers = __webpack_require__(/*! ../dispatchers */ \"./node_modules/plottable/build/src/dispatchers/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar interaction_1 = __webpack_require__(/*! ./interaction */ \"./node_modules/plottable/build/src/interactions/interaction.js\");\nvar Key = (function (_super) {\n    __extends(Key, _super);\n    function Key() {\n        var _this = this;\n        _super.apply(this, arguments);\n        this._keyPressCallbacks = {};\n        this._keyReleaseCallbacks = {};\n        this._mouseMoveCallback = function (point) { return false; }; // HACKHACK: registering a listener\n        this._downedKeys = new Utils.Set();\n        this._keyDownCallback = function (keyCode, event) { return _this._handleKeyDownEvent(keyCode, event); };\n        this._keyUpCallback = function (keyCode) { return _this._handleKeyUpEvent(keyCode); };\n    }\n    Key.prototype._anchor = function (component) {\n        _super.prototype._anchor.call(this, component);\n        this._positionDispatcher = Dispatchers.Mouse.getDispatcher(this._componentAttachedTo._element.node());\n        this._positionDispatcher.onMouseMove(this._mouseMoveCallback);\n        this._keyDispatcher = Dispatchers.Key.getDispatcher();\n        this._keyDispatcher.onKeyDown(this._keyDownCallback);\n        this._keyDispatcher.onKeyUp(this._keyUpCallback);\n    };\n    Key.prototype._unanchor = function () {\n        _super.prototype._unanchor.call(this);\n        this._positionDispatcher.offMouseMove(this._mouseMoveCallback);\n        this._positionDispatcher = null;\n        this._keyDispatcher.offKeyDown(this._keyDownCallback);\n        this._keyDispatcher.offKeyUp(this._keyUpCallback);\n        this._keyDispatcher = null;\n    };\n    Key.prototype._handleKeyDownEvent = function (keyCode, event) {\n        var p = this._translateToComponentSpace(this._positionDispatcher.lastMousePosition());\n        if (this._isInsideComponent(p) && !event.repeat) {\n            if (this._keyPressCallbacks[keyCode]) {\n                this._keyPressCallbacks[keyCode].callCallbacks(keyCode);\n            }\n            this._downedKeys.add(keyCode);\n        }\n    };\n    Key.prototype._handleKeyUpEvent = function (keyCode) {\n        if (this._downedKeys.has(keyCode) && this._keyReleaseCallbacks[keyCode]) {\n            this._keyReleaseCallbacks[keyCode].callCallbacks(keyCode);\n        }\n        this._downedKeys.delete(keyCode);\n    };\n    /**\n     * Adds a callback to be called when the key with the given keyCode is\n     * pressed and the user is moused over the Component.\n     *\n     * @param {number} keyCode\n     * @param {KeyCallback} callback\n     * @returns {Interactions.Key} The calling Key Interaction.\n     */\n    Key.prototype.onKeyPress = function (keyCode, callback) {\n        if (!this._keyPressCallbacks[keyCode]) {\n            this._keyPressCallbacks[keyCode] = new Utils.CallbackSet();\n        }\n        this._keyPressCallbacks[keyCode].add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when the key with the given keyCode is\n     * pressed and the user is moused over the Component.\n     *\n     * @param {number} keyCode\n     * @param {KeyCallback} callback\n     * @returns {Interactions.Key} The calling Key Interaction.\n     */\n    Key.prototype.offKeyPress = function (keyCode, callback) {\n        this._keyPressCallbacks[keyCode].delete(callback);\n        if (this._keyPressCallbacks[keyCode].size === 0) {\n            delete this._keyPressCallbacks[keyCode];\n        }\n        return this;\n    };\n    /**\n     * Adds a callback to be called when the key with the given keyCode is\n     * released if the key was pressed with the mouse inside of the Component.\n     *\n     * @param {number} keyCode\n     * @param {KeyCallback} callback\n     * @returns {Interactions.Key} The calling Key Interaction.\n     */\n    Key.prototype.onKeyRelease = function (keyCode, callback) {\n        if (!this._keyReleaseCallbacks[keyCode]) {\n            this._keyReleaseCallbacks[keyCode] = new Utils.CallbackSet();\n        }\n        this._keyReleaseCallbacks[keyCode].add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when the key with the given keyCode is\n     * released if the key was pressed with the mouse inside of the Component.\n     *\n     * @param {number} keyCode\n     * @param {KeyCallback} callback\n     * @returns {Interactions.Key} The calling Key Interaction.\n     */\n    Key.prototype.offKeyRelease = function (keyCode, callback) {\n        this._keyReleaseCallbacks[keyCode].delete(callback);\n        if (this._keyReleaseCallbacks[keyCode].size === 0) {\n            delete this._keyReleaseCallbacks[keyCode];\n        }\n        return this;\n    };\n    return Key;\n}(interaction_1.Interaction));\nexports.Key = Key;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/interactions/keyInteraction.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/interactions/panZoomInteraction.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/plottable/build/src/interactions/panZoomInteraction.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Dispatchers = __webpack_require__(/*! ../dispatchers */ \"./node_modules/plottable/build/src/dispatchers/index.js\");\nvar Scales = __webpack_require__(/*! ../scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar interaction_1 = __webpack_require__(/*! ./interaction */ \"./node_modules/plottable/build/src/interactions/interaction.js\");\nvar Interactions = __webpack_require__(/*! ./ */ \"./node_modules/plottable/build/src/interactions/index.js\");\n/**\n * Performs a zoom transformation of the `value` argument scaled by the\n * `zoom` argument about the point defined by the `center` argument.\n */\nfunction zoomAt(value, zoom, center) {\n    return center - (center - value) * zoom;\n}\nexports.zoomAt = zoomAt;\nvar PanZoom = (function (_super) {\n    __extends(PanZoom, _super);\n    /**\n     * A PanZoom Interaction updates the domains of an x-scale and/or a y-scale\n     * in response to the user panning or zooming.\n     *\n     * @constructor\n     * @param {TransformableScale} [xScale] The x-scale to update on panning/zooming.\n     * @param {TransformableScale} [yScale] The y-scale to update on panning/zooming.\n     */\n    function PanZoom(xScale, yScale) {\n        var _this = this;\n        _super.call(this);\n        this._wheelCallback = function (p, e) { return _this._handleWheelEvent(p, e); };\n        this._touchStartCallback = function (ids, idToPoint, e) { return _this._handleTouchStart(ids, idToPoint, e); };\n        this._touchMoveCallback = function (ids, idToPoint, e) { return _this._handlePinch(ids, idToPoint, e); };\n        this._touchEndCallback = function (ids, idToPoint, e) { return _this._handleTouchEnd(ids, idToPoint, e); };\n        this._touchCancelCallback = function (ids, idToPoint, e) { return _this._handleTouchEnd(ids, idToPoint, e); };\n        this._panEndCallbacks = new Utils.CallbackSet();\n        this._zoomEndCallbacks = new Utils.CallbackSet();\n        this._xScales = new Utils.Set();\n        this._yScales = new Utils.Set();\n        this._dragInteraction = new Interactions.Drag();\n        this._setupDragInteraction();\n        this._touchIds = d3.map();\n        this._minDomainExtents = new Utils.Map();\n        this._maxDomainExtents = new Utils.Map();\n        this._minDomainValues = new Utils.Map();\n        this._maxDomainValues = new Utils.Map();\n        if (xScale != null) {\n            this.addXScale(xScale);\n        }\n        if (yScale != null) {\n            this.addYScale(yScale);\n        }\n    }\n    /**\n     * Pans the chart by a specified amount\n     *\n     * @param {Plottable.Point} [translateAmount] The amount by which to translate the x and y scales.\n     */\n    PanZoom.prototype.pan = function (translateAmount) {\n        var _this = this;\n        this.xScales().forEach(function (xScale) {\n            xScale.pan(_this._constrainedTranslation(xScale, translateAmount.x));\n        });\n        this.yScales().forEach(function (yScale) {\n            yScale.pan(_this._constrainedTranslation(yScale, translateAmount.y));\n        });\n    };\n    /**\n     * Zooms the chart by a specified amount around a specific point\n     *\n     * @param {number} [maginfyAmount] The percentage by which to zoom the x and y scale.\n     * A value of 0.9 zooms in by 10%. A value of 1.1 zooms out by 10%. A value of 1 has\n     * no effect.\n     * @param {Plottable.Point} [centerValue] The center in pixels around which to zoom.\n     * By default, `centerValue` is the center of the x and y range of each scale.\n     */\n    PanZoom.prototype.zoom = function (zoomAmount, centerValue) {\n        this.xScales().forEach(function (xScale) {\n            var range = xScale.range();\n            var xCenter = centerValue === undefined\n                ? (range[1] - range[0]) / 2\n                : centerValue.x;\n            xScale.zoom(zoomAmount, xCenter);\n        });\n        this.yScales().forEach(function (yScale) {\n            var range = yScale.range();\n            var yCenter = centerValue === undefined\n                ? (range[1] - range[0]) / 2\n                : centerValue.y;\n            yScale.zoom(zoomAmount, yCenter);\n        });\n    };\n    PanZoom.prototype._anchor = function (component) {\n        _super.prototype._anchor.call(this, component);\n        this._dragInteraction.attachTo(component);\n        this._mouseDispatcher = Dispatchers.Mouse.getDispatcher(this._componentAttachedTo.content().node());\n        this._mouseDispatcher.onWheel(this._wheelCallback);\n        this._touchDispatcher = Dispatchers.Touch.getDispatcher(this._componentAttachedTo.content().node());\n        this._touchDispatcher.onTouchStart(this._touchStartCallback);\n        this._touchDispatcher.onTouchMove(this._touchMoveCallback);\n        this._touchDispatcher.onTouchEnd(this._touchEndCallback);\n        this._touchDispatcher.onTouchCancel(this._touchCancelCallback);\n    };\n    PanZoom.prototype._unanchor = function () {\n        _super.prototype._unanchor.call(this);\n        this._mouseDispatcher.offWheel(this._wheelCallback);\n        this._mouseDispatcher = null;\n        this._touchDispatcher.offTouchStart(this._touchStartCallback);\n        this._touchDispatcher.offTouchMove(this._touchMoveCallback);\n        this._touchDispatcher.offTouchEnd(this._touchEndCallback);\n        this._touchDispatcher.offTouchCancel(this._touchCancelCallback);\n        this._touchDispatcher = null;\n        this._dragInteraction.detachFrom(this._componentAttachedTo);\n    };\n    PanZoom.prototype._handleTouchStart = function (ids, idToPoint, e) {\n        for (var i = 0; i < ids.length && this._touchIds.size() < 2; i++) {\n            var id = ids[i];\n            this._touchIds.set(id.toString(), this._translateToComponentSpace(idToPoint[id]));\n        }\n    };\n    PanZoom.prototype._handlePinch = function (ids, idToPoint, e) {\n        var _this = this;\n        if (this._touchIds.size() < 2) {\n            return;\n        }\n        var oldPoints = this._touchIds.values();\n        if (!this._isInsideComponent(this._translateToComponentSpace(oldPoints[0])) || !this._isInsideComponent(this._translateToComponentSpace(oldPoints[1]))) {\n            return;\n        }\n        var oldCornerDistance = PanZoom._pointDistance(oldPoints[0], oldPoints[1]);\n        if (oldCornerDistance === 0) {\n            return;\n        }\n        ids.forEach(function (id) {\n            if (_this._touchIds.has(id.toString())) {\n                _this._touchIds.set(id.toString(), _this._translateToComponentSpace(idToPoint[id]));\n            }\n        });\n        var points = this._touchIds.values();\n        var newCornerDistance = PanZoom._pointDistance(points[0], points[1]);\n        if (newCornerDistance === 0) {\n            return;\n        }\n        var magnifyAmount = oldCornerDistance / newCornerDistance;\n        var normalizedPointDiffs = points.map(function (point, i) {\n            return { x: (point.x - oldPoints[i].x) / magnifyAmount, y: (point.y - oldPoints[i].y) / magnifyAmount };\n        });\n        var oldCenterPoint = PanZoom.centerPoint(oldPoints[0], oldPoints[1]);\n        var centerX = oldCenterPoint.x;\n        var centerY = oldCenterPoint.y;\n        this.xScales().forEach(function (xScale) {\n            var constrained = _this._constrainedZoom(xScale, magnifyAmount, centerX);\n            centerX = constrained.centerPoint;\n            magnifyAmount = constrained.zoomAmount;\n        });\n        this.yScales().forEach(function (yScale) {\n            var constrained = _this._constrainedZoom(yScale, magnifyAmount, centerY);\n            centerY = constrained.centerPoint;\n            magnifyAmount = constrained.zoomAmount;\n        });\n        var constrainedPoints = oldPoints.map(function (oldPoint, i) {\n            return {\n                x: normalizedPointDiffs[i].x * magnifyAmount + oldPoint.x,\n                y: normalizedPointDiffs[i].y * magnifyAmount + oldPoint.y,\n            };\n        });\n        var translateAmount = {\n            x: centerX - ((constrainedPoints[0].x + constrainedPoints[1].x) / 2),\n            y: centerY - ((constrainedPoints[0].y + constrainedPoints[1].y) / 2)\n        };\n        this.zoom(magnifyAmount, { x: centerX, y: centerY });\n        this.pan(translateAmount);\n    };\n    PanZoom.centerPoint = function (point1, point2) {\n        var leftX = Math.min(point1.x, point2.x);\n        var rightX = Math.max(point1.x, point2.x);\n        var topY = Math.min(point1.y, point2.y);\n        var bottomY = Math.max(point1.y, point2.y);\n        return { x: (leftX + rightX) / 2, y: (bottomY + topY) / 2 };\n    };\n    PanZoom._pointDistance = function (point1, point2) {\n        var leftX = Math.min(point1.x, point2.x);\n        var rightX = Math.max(point1.x, point2.x);\n        var topY = Math.min(point1.y, point2.y);\n        var bottomY = Math.max(point1.y, point2.y);\n        return Math.sqrt(Math.pow(rightX - leftX, 2) + Math.pow(bottomY - topY, 2));\n    };\n    PanZoom.prototype._handleTouchEnd = function (ids, idToPoint, e) {\n        var _this = this;\n        ids.forEach(function (id) {\n            _this._touchIds.remove(id.toString());\n        });\n        if (this._touchIds.size() > 0) {\n            this._zoomEndCallbacks.callCallbacks();\n        }\n    };\n    PanZoom.prototype._handleWheelEvent = function (p, e) {\n        var _this = this;\n        var translatedP = this._translateToComponentSpace(p);\n        if (this._isInsideComponent(translatedP)) {\n            e.preventDefault();\n            var deltaPixelAmount = e.deltaY * (e.deltaMode ? PanZoom._PIXELS_PER_LINE : 1);\n            var zoomAmount_1 = Math.pow(2, deltaPixelAmount * .002);\n            var centerX_1 = translatedP.x;\n            var centerY_1 = translatedP.y;\n            this.xScales().forEach(function (xScale) {\n                var constrained = _this._constrainedZoom(xScale, zoomAmount_1, centerX_1);\n                centerX_1 = constrained.centerPoint;\n                zoomAmount_1 = constrained.zoomAmount;\n            });\n            this.yScales().forEach(function (yScale) {\n                var constrained = _this._constrainedZoom(yScale, zoomAmount_1, centerY_1);\n                centerY_1 = constrained.centerPoint;\n                zoomAmount_1 = constrained.zoomAmount;\n            });\n            this.zoom(zoomAmount_1, { x: centerX_1, y: centerY_1 });\n            this._zoomEndCallbacks.callCallbacks();\n        }\n    };\n    /**\n     * When scale ranges are reversed (i.e. range[1] < range[0]), we must alter the\n     * the calculations we do in screen space to constrain pan and zoom. This method\n     * returns `true` if the scale is reversed.\n     */\n    PanZoom.prototype._isRangeReversed = function (scale) {\n        var range = scale.range();\n        return range[1] < range[0];\n    };\n    PanZoom.prototype._constrainedZoom = function (scale, zoomAmount, centerPoint) {\n        zoomAmount = this._constrainZoomExtents(scale, zoomAmount);\n        return this._constrainZoomValues(scale, zoomAmount, centerPoint);\n    };\n    PanZoom.prototype._constrainZoomExtents = function (scale, zoomAmount) {\n        var extentIncreasing = zoomAmount > 1;\n        var boundingDomainExtent = extentIncreasing ? this.maxDomainExtent(scale) : this.minDomainExtent(scale);\n        if (boundingDomainExtent == null) {\n            return zoomAmount;\n        }\n        var _a = scale.getTransformationDomain(), scaleDomainMin = _a[0], scaleDomainMax = _a[1];\n        var domainExtent = Math.abs(scaleDomainMax - scaleDomainMin);\n        var compareF = extentIncreasing ? Math.min : Math.max;\n        return compareF(zoomAmount, boundingDomainExtent / domainExtent);\n    };\n    PanZoom.prototype._constrainZoomValues = function (scale, zoomAmount, centerPoint) {\n        // when zooming in, we don't have to worry about overflowing domain\n        if (zoomAmount <= 1) {\n            return { centerPoint: centerPoint, zoomAmount: zoomAmount };\n        }\n        var reversed = this._isRangeReversed(scale);\n        var minDomain = this.minDomainValue(scale);\n        var maxDomain = this.maxDomainValue(scale);\n        // if no constraints set, we're done\n        if (minDomain == null && maxDomain == null) {\n            return { centerPoint: centerPoint, zoomAmount: zoomAmount };\n        }\n        var _a = scale.getTransformationDomain(), scaleDomainMin = _a[0], scaleDomainMax = _a[1];\n        if (maxDomain != null) {\n            // compute max range point if zoom applied\n            var maxRange = scale.scaleTransformation(maxDomain);\n            var currentMaxRange = scale.scaleTransformation(scaleDomainMax);\n            var testMaxRange = zoomAt(currentMaxRange, zoomAmount, centerPoint);\n            // move the center point to prevent max overflow, if necessary\n            if (testMaxRange > maxRange != reversed) {\n                centerPoint = this._getZoomCenterForTarget(currentMaxRange, zoomAmount, maxRange);\n            }\n        }\n        if (minDomain != null) {\n            // compute min range point if zoom applied\n            var minRange = scale.scaleTransformation(minDomain);\n            var currentMinRange = scale.scaleTransformation(scaleDomainMin);\n            var testMinRange = zoomAt(currentMinRange, zoomAmount, centerPoint);\n            // move the center point to prevent min overflow, if necessary\n            if (testMinRange < minRange != reversed) {\n                centerPoint = this._getZoomCenterForTarget(currentMinRange, zoomAmount, minRange);\n            }\n        }\n        // add fallback to prevent overflowing both min and max\n        if (maxDomain != null && maxDomain != null) {\n            var maxRange = scale.scaleTransformation(maxDomain);\n            var currentMaxRange = scale.scaleTransformation(scaleDomainMax);\n            var testMaxRange = zoomAt(currentMaxRange, zoomAmount, centerPoint);\n            var minRange = scale.scaleTransformation(minDomain);\n            var currentMinRange = scale.scaleTransformation(scaleDomainMin);\n            var testMinRange = zoomAt(currentMinRange, zoomAmount, centerPoint);\n            // If we overflow both, use some algebra to solve for centerPoint and\n            // zoomAmount that will make the domain match the min/max exactly.\n            // Algebra brought to you by Wolfram Alpha.\n            if (testMaxRange > maxRange != reversed || testMinRange < minRange != reversed) {\n                var denominator = (currentMaxRange - currentMinRange + minRange - maxRange);\n                if (denominator === 0) {\n                    // In this case the domains already match, so just return no-op values.\n                    centerPoint = (currentMaxRange + currentMinRange) / 2;\n                    zoomAmount = 1;\n                }\n                else {\n                    centerPoint = (currentMaxRange * minRange - currentMinRange * maxRange) / denominator;\n                    zoomAmount = (maxRange - minRange) / (currentMaxRange - currentMinRange);\n                }\n            }\n        }\n        return { centerPoint: centerPoint, zoomAmount: zoomAmount };\n    };\n    /**\n     * Returns the `center` value to be used with `zoomAt` that will produce the\n     * `target` value given the same `value` and `zoom` arguments. Algebra\n     * brought to you by Wolfram Alpha.\n     */\n    PanZoom.prototype._getZoomCenterForTarget = function (value, zoom, target) {\n        return (value * zoom - target) / (zoom - 1);\n    };\n    PanZoom.prototype._setupDragInteraction = function () {\n        var _this = this;\n        this._dragInteraction.constrainedToComponent(false);\n        var lastDragPoint;\n        this._dragInteraction.onDragStart(function () { return lastDragPoint = null; });\n        this._dragInteraction.onDrag(function (startPoint, endPoint) {\n            if (_this._touchIds.size() >= 2) {\n                return;\n            }\n            var translateAmount = {\n                x: (lastDragPoint == null ? startPoint.x : lastDragPoint.x) - endPoint.x,\n                y: (lastDragPoint == null ? startPoint.y : lastDragPoint.y) - endPoint.y\n            };\n            _this.pan(translateAmount);\n            lastDragPoint = endPoint;\n        });\n        this._dragInteraction.onDragEnd(function () { return _this._panEndCallbacks.callCallbacks(); });\n    };\n    /**\n     * Returns a new translation value that respects domain min/max value\n     * constraints.\n     */\n    PanZoom.prototype._constrainedTranslation = function (scale, translation) {\n        var _a = scale.getTransformationDomain(), scaleDomainMin = _a[0], scaleDomainMax = _a[1];\n        var reversed = this._isRangeReversed(scale);\n        if (translation > 0 !== reversed) {\n            var bound = this.maxDomainValue(scale);\n            if (bound != null) {\n                var currentMaxRange = scale.scaleTransformation(scaleDomainMax);\n                var maxRange = scale.scaleTransformation(bound);\n                translation = (reversed ? Math.max : Math.min)(currentMaxRange + translation, maxRange) - currentMaxRange;\n            }\n        }\n        else {\n            var bound = this.minDomainValue(scale);\n            if (bound != null) {\n                var currentMinRange = scale.scaleTransformation(scaleDomainMin);\n                var minRange = scale.scaleTransformation(bound);\n                translation = (reversed ? Math.min : Math.max)(currentMinRange + translation, minRange) - currentMinRange;\n            }\n        }\n        return translation;\n    };\n    PanZoom.prototype._nonLinearScaleWithExtents = function (scale) {\n        return this.minDomainExtent(scale) != null && this.maxDomainExtent(scale) != null && !(scale instanceof Scales.Linear) && !(scale instanceof Scales.Time);\n    };\n    PanZoom.prototype.xScales = function (xScales) {\n        var _this = this;\n        if (xScales == null) {\n            var scales_1 = [];\n            this._xScales.forEach(function (xScale) {\n                scales_1.push(xScale);\n            });\n            return scales_1;\n        }\n        this._xScales = new Utils.Set();\n        xScales.forEach(function (xScale) {\n            _this.addXScale(xScale);\n        });\n        return this;\n    };\n    PanZoom.prototype.yScales = function (yScales) {\n        var _this = this;\n        if (yScales == null) {\n            var scales_2 = [];\n            this._yScales.forEach(function (yScale) {\n                scales_2.push(yScale);\n            });\n            return scales_2;\n        }\n        this._yScales = new Utils.Set();\n        yScales.forEach(function (yScale) {\n            _this.addYScale(yScale);\n        });\n        return this;\n    };\n    /**\n     * Adds an x scale to this PanZoom Interaction\n     *\n     * @param {TransformableScale} An x scale to add\n     * @returns {Interactions.PanZoom} The calling PanZoom Interaction.\n     */\n    PanZoom.prototype.addXScale = function (xScale) {\n        this._xScales.add(xScale);\n        return this;\n    };\n    /**\n     * Removes an x scale from this PanZoom Interaction\n     *\n     * @param {TransformableScale} An x scale to remove\n     * @returns {Interactions.PanZoom} The calling PanZoom Interaction.\n     */\n    PanZoom.prototype.removeXScale = function (xScale) {\n        this._xScales.delete(xScale);\n        this._minDomainExtents.delete(xScale);\n        this._maxDomainExtents.delete(xScale);\n        this._minDomainValues.delete(xScale);\n        this._maxDomainValues.delete(xScale);\n        return this;\n    };\n    /**\n     * Adds a y scale to this PanZoom Interaction\n     *\n     * @param {TransformableScale} A y scale to add\n     * @returns {Interactions.PanZoom} The calling PanZoom Interaction.\n     */\n    PanZoom.prototype.addYScale = function (yScale) {\n        this._yScales.add(yScale);\n        return this;\n    };\n    /**\n     * Removes a y scale from this PanZoom Interaction\n     *\n     * @param {TransformableScale} A y scale to remove\n     * @returns {Interactions.PanZoom} The calling PanZoom Interaction.\n     */\n    PanZoom.prototype.removeYScale = function (yScale) {\n        this._yScales.delete(yScale);\n        this._minDomainExtents.delete(yScale);\n        this._maxDomainExtents.delete(yScale);\n        this._minDomainValues.delete(yScale);\n        this._maxDomainValues.delete(yScale);\n        return this;\n    };\n    PanZoom.prototype.minDomainExtent = function (scale, minDomainExtent) {\n        if (minDomainExtent == null) {\n            return this._minDomainExtents.get(scale);\n        }\n        if (minDomainExtent.valueOf() < 0) {\n            throw new Error(\"extent must be non-negative\");\n        }\n        var maxExtentForScale = this.maxDomainExtent(scale);\n        if (maxExtentForScale != null && maxExtentForScale.valueOf() < minDomainExtent.valueOf()) {\n            throw new Error(\"minDomainExtent must be smaller than maxDomainExtent for the same Scale\");\n        }\n        if (this._nonLinearScaleWithExtents(scale)) {\n            Utils.Window.warn(\"Panning and zooming with extents on a nonlinear scale may have unintended behavior.\");\n        }\n        this._minDomainExtents.set(scale, minDomainExtent);\n        return this;\n    };\n    PanZoom.prototype.maxDomainExtent = function (scale, maxDomainExtent) {\n        if (maxDomainExtent == null) {\n            return this._maxDomainExtents.get(scale);\n        }\n        if (maxDomainExtent.valueOf() <= 0) {\n            throw new Error(\"extent must be positive\");\n        }\n        var minExtentForScale = this.minDomainExtent(scale);\n        if (minExtentForScale != null && maxDomainExtent.valueOf() < minExtentForScale.valueOf()) {\n            throw new Error(\"maxDomainExtent must be larger than minDomainExtent for the same Scale\");\n        }\n        if (this._nonLinearScaleWithExtents(scale)) {\n            Utils.Window.warn(\"Panning and zooming with extents on a nonlinear scale may have unintended behavior.\");\n        }\n        this._maxDomainExtents.set(scale, maxDomainExtent);\n        return this;\n    };\n    PanZoom.prototype.minDomainValue = function (scale, minDomainValue) {\n        if (minDomainValue == null) {\n            return this._minDomainValues.get(scale);\n        }\n        this._minDomainValues.set(scale, minDomainValue);\n        return this;\n    };\n    PanZoom.prototype.maxDomainValue = function (scale, maxDomainValue) {\n        if (maxDomainValue == null) {\n            return this._maxDomainValues.get(scale);\n        }\n        this._maxDomainValues.set(scale, maxDomainValue);\n        return this;\n    };\n    /**\n     * Uses the current domain of the scale to apply a minimum and maximum\n     * domain value for that scale.\n     *\n     * This constrains the pan/zoom interaction to show no more than the domain\n     * of the scale.\n     */\n    PanZoom.prototype.setMinMaxDomainValuesTo = function (scale) {\n        this._minDomainValues.delete(scale);\n        this._maxDomainValues.delete(scale);\n        var _a = scale.getTransformationDomain(), domainMin = _a[0], domainMax = _a[1];\n        this.minDomainValue(scale, domainMin);\n        this.maxDomainValue(scale, domainMax);\n        return this;\n    };\n    /**\n     * Adds a callback to be called when panning ends.\n     *\n     * @param {PanCallback} callback\n     * @returns {this} The calling PanZoom Interaction.\n     */\n    PanZoom.prototype.onPanEnd = function (callback) {\n        this._panEndCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when panning ends.\n     *\n     * @param {PanCallback} callback\n     * @returns {this} The calling PanZoom Interaction.\n     */\n    PanZoom.prototype.offPanEnd = function (callback) {\n        this._panEndCallbacks.delete(callback);\n        return this;\n    };\n    /**\n     * Adds a callback to be called when zooming ends.\n     *\n     * @param {ZoomCallback} callback\n     * @returns {this} The calling PanZoom Interaction.\n     */\n    PanZoom.prototype.onZoomEnd = function (callback) {\n        this._zoomEndCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when zooming ends.\n     *\n     * @param {ZoomCallback} callback\n     * @returns {this} The calling PanZoom Interaction.\n     */\n    PanZoom.prototype.offZoomEnd = function (callback) {\n        this._zoomEndCallbacks.delete(callback);\n        return this;\n    };\n    /**\n     * The number of pixels occupied in a line.\n     */\n    PanZoom._PIXELS_PER_LINE = 120;\n    return PanZoom;\n}(interaction_1.Interaction));\nexports.PanZoom = PanZoom;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/interactions/panZoomInteraction.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/interactions/pointerInteraction.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/plottable/build/src/interactions/pointerInteraction.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Dispatchers = __webpack_require__(/*! ../dispatchers */ \"./node_modules/plottable/build/src/dispatchers/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar interaction_1 = __webpack_require__(/*! ./interaction */ \"./node_modules/plottable/build/src/interactions/interaction.js\");\nvar Pointer = (function (_super) {\n    __extends(Pointer, _super);\n    function Pointer() {\n        var _this = this;\n        _super.apply(this, arguments);\n        this._overComponent = false;\n        this._pointerEnterCallbacks = new Utils.CallbackSet();\n        this._pointerMoveCallbacks = new Utils.CallbackSet();\n        this._pointerExitCallbacks = new Utils.CallbackSet();\n        this._mouseMoveCallback = function (p, e) { return _this._handleMouseEvent(p, e); };\n        this._touchStartCallback = function (ids, idToPoint, e) { return _this._handleTouchEvent(idToPoint[ids[0]], e); };\n    }\n    Pointer.prototype._anchor = function (component) {\n        _super.prototype._anchor.call(this, component);\n        this._mouseDispatcher = Dispatchers.Mouse.getDispatcher(this._componentAttachedTo.content().node());\n        this._mouseDispatcher.onMouseMove(this._mouseMoveCallback);\n        this._touchDispatcher = Dispatchers.Touch.getDispatcher(this._componentAttachedTo.content().node());\n        this._touchDispatcher.onTouchStart(this._touchStartCallback);\n    };\n    Pointer.prototype._unanchor = function () {\n        _super.prototype._unanchor.call(this);\n        this._mouseDispatcher.offMouseMove(this._mouseMoveCallback);\n        this._mouseDispatcher = null;\n        this._touchDispatcher.offTouchStart(this._touchStartCallback);\n        this._touchDispatcher = null;\n    };\n    Pointer.prototype._handleMouseEvent = function (p, e) {\n        var insideSVG = this._mouseDispatcher.eventInsideSVG(e);\n        this._handlePointerEvent(p, insideSVG);\n    };\n    Pointer.prototype._handleTouchEvent = function (p, e) {\n        var insideSVG = this._touchDispatcher.eventInsideSVG(e);\n        this._handlePointerEvent(p, insideSVG);\n    };\n    Pointer.prototype._handlePointerEvent = function (p, insideSVG) {\n        var translatedP = this._translateToComponentSpace(p);\n        var overComponent = this._isInsideComponent(translatedP);\n        if (overComponent && insideSVG) {\n            if (!this._overComponent) {\n                this._pointerEnterCallbacks.callCallbacks(translatedP);\n            }\n            this._pointerMoveCallbacks.callCallbacks(translatedP);\n        }\n        else if (this._overComponent) {\n            this._pointerExitCallbacks.callCallbacks(translatedP);\n        }\n        this._overComponent = overComponent && insideSVG;\n    };\n    /**\n     * Adds a callback to be called when the pointer enters the Component.\n     *\n     * @param {PointerCallback} callback\n     * @return {Interactions.Pointer} The calling Pointer Interaction.\n     */\n    Pointer.prototype.onPointerEnter = function (callback) {\n        this._pointerEnterCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when the pointer enters the Component.\n     *\n     * @param {PointerCallback} callback\n     * @return {Interactions.Pointer} The calling Pointer Interaction.\n     */\n    Pointer.prototype.offPointerEnter = function (callback) {\n        this._pointerEnterCallbacks.delete(callback);\n        return this;\n    };\n    /**\n     * Adds a callback to be called when the pointer moves within the Component.\n     *\n     * @param {PointerCallback} callback\n     * @return {Interactions.Pointer} The calling Pointer Interaction.\n     */\n    Pointer.prototype.onPointerMove = function (callback) {\n        this._pointerMoveCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when the pointer moves within the Component.\n     *\n     * @param {PointerCallback} callback\n     * @return {Interactions.Pointer} The calling Pointer Interaction.\n     */\n    Pointer.prototype.offPointerMove = function (callback) {\n        this._pointerMoveCallbacks.delete(callback);\n        return this;\n    };\n    /**\n     * Adds a callback to be called when the pointer exits the Component.\n     *\n     * @param {PointerCallback} callback\n     * @return {Interactions.Pointer} The calling Pointer Interaction.\n     */\n    Pointer.prototype.onPointerExit = function (callback) {\n        this._pointerExitCallbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when the pointer exits the Component.\n     *\n     * @param {PointerCallback} callback\n     * @return {Interactions.Pointer} The calling Pointer Interaction.\n     */\n    Pointer.prototype.offPointerExit = function (callback) {\n        this._pointerExitCallbacks.delete(callback);\n        return this;\n    };\n    return Pointer;\n}(interaction_1.Interaction));\nexports.Pointer = Pointer;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/interactions/pointerInteraction.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/areaPlot.js":
/*!************************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/areaPlot.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Drawers = __webpack_require__(/*! ../drawers */ \"./node_modules/plottable/build/src/drawers/index.js\");\nvar Scales = __webpack_require__(/*! ../scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Plots = __webpack_require__(/*! ./ */ \"./node_modules/plottable/build/src/plots/index.js\");\nvar linePlot_1 = __webpack_require__(/*! ./linePlot */ \"./node_modules/plottable/build/src/plots/linePlot.js\");\nvar plot_1 = __webpack_require__(/*! ./plot */ \"./node_modules/plottable/build/src/plots/plot.js\");\nvar Area = (function (_super) {\n    __extends(Area, _super);\n    /**\n     * An Area Plot draws a filled region (area) between Y and Y0.\n     *\n     * @constructor\n     */\n    function Area() {\n        _super.call(this);\n        this.addClass(\"area-plot\");\n        this.y0(0); // default\n        this.attr(\"fill-opacity\", 0.25);\n        this.attr(\"fill\", new Scales.Color().range()[0]);\n        this._lineDrawers = new Utils.Map();\n    }\n    Area.prototype._setup = function () {\n        var _this = this;\n        _super.prototype._setup.call(this);\n        this._lineDrawers.forEach(function (d) { return d.renderArea(_this._renderArea.append(\"g\")); });\n    };\n    Area.prototype.y = function (y, yScale) {\n        if (y == null) {\n            return _super.prototype.y.call(this);\n        }\n        if (yScale == null) {\n            _super.prototype.y.call(this, y);\n        }\n        else {\n            _super.prototype.y.call(this, y, yScale);\n        }\n        if (yScale != null) {\n            var y0 = this.y0().accessor;\n            if (y0 != null) {\n                this._bindProperty(Area._Y0_KEY, y0, yScale);\n            }\n            this._updateYScale();\n        }\n        return this;\n    };\n    Area.prototype.y0 = function (y0) {\n        if (y0 == null) {\n            return this._propertyBindings.get(Area._Y0_KEY);\n        }\n        var yBinding = this.y();\n        var yScale = yBinding && yBinding.scale;\n        this._bindProperty(Area._Y0_KEY, y0, yScale);\n        this._updateYScale();\n        this.render();\n        return this;\n    };\n    Area.prototype._onDatasetUpdate = function () {\n        _super.prototype._onDatasetUpdate.call(this);\n        this._updateYScale();\n    };\n    Area.prototype.addDataset = function (dataset) {\n        _super.prototype.addDataset.call(this, dataset);\n        return this;\n    };\n    Area.prototype._addDataset = function (dataset) {\n        var lineDrawer = new Drawers.Line(dataset);\n        if (this._isSetup) {\n            lineDrawer.renderArea(this._renderArea.append(\"g\"));\n        }\n        this._lineDrawers.set(dataset, lineDrawer);\n        _super.prototype._addDataset.call(this, dataset);\n        return this;\n    };\n    Area.prototype._removeDatasetNodes = function (dataset) {\n        _super.prototype._removeDatasetNodes.call(this, dataset);\n        this._lineDrawers.get(dataset).remove();\n    };\n    Area.prototype._additionalPaint = function () {\n        var _this = this;\n        var drawSteps = this._generateLineDrawSteps();\n        var dataToDraw = this._getDataToDraw();\n        this.datasets().forEach(function (dataset) { return _this._lineDrawers.get(dataset).draw(dataToDraw.get(dataset), drawSteps); });\n    };\n    Area.prototype._generateLineDrawSteps = function () {\n        var drawSteps = [];\n        if (this._animateOnNextRender()) {\n            var attrToProjector = this._generateLineAttrToProjector();\n            attrToProjector[\"d\"] = this._constructLineProjector(plot_1.Plot._scaledAccessor(this.x()), this._getResetYFunction());\n            drawSteps.push({ attrToProjector: attrToProjector, animator: this._getAnimator(Plots.Animator.RESET) });\n        }\n        drawSteps.push({\n            attrToProjector: this._generateLineAttrToProjector(),\n            animator: this._getAnimator(Plots.Animator.MAIN)\n        });\n        return drawSteps;\n    };\n    Area.prototype._generateLineAttrToProjector = function () {\n        var lineAttrToProjector = this._generateAttrToProjector();\n        lineAttrToProjector[\"d\"] = this._constructLineProjector(plot_1.Plot._scaledAccessor(this.x()), plot_1.Plot._scaledAccessor(this.y()));\n        return lineAttrToProjector;\n    };\n    Area.prototype._createDrawer = function (dataset) {\n        return new Drawers.Area(dataset);\n    };\n    Area.prototype._generateDrawSteps = function () {\n        var drawSteps = [];\n        if (this._animateOnNextRender()) {\n            var attrToProjector = this._generateAttrToProjector();\n            attrToProjector[\"d\"] = this._constructAreaProjector(plot_1.Plot._scaledAccessor(this.x()), this._getResetYFunction(), plot_1.Plot._scaledAccessor(this.y0()));\n            drawSteps.push({ attrToProjector: attrToProjector, animator: this._getAnimator(Plots.Animator.RESET) });\n        }\n        drawSteps.push({\n            attrToProjector: this._generateAttrToProjector(),\n            animator: this._getAnimator(Plots.Animator.MAIN)\n        });\n        return drawSteps;\n    };\n    Area.prototype._updateYScale = function () {\n        var extents = this._propertyExtents.get(\"y0\");\n        var extent = Utils.Array.flatten(extents);\n        var uniqExtentVals = Utils.Array.uniq(extent);\n        var constantBaseline = uniqExtentVals.length === 1 ? uniqExtentVals[0] : null;\n        var yBinding = this.y();\n        var yScale = (yBinding && yBinding.scale);\n        if (yScale == null) {\n            return;\n        }\n        if (this._constantBaselineValueProvider != null) {\n            yScale.removePaddingExceptionsProvider(this._constantBaselineValueProvider);\n            this._constantBaselineValueProvider = null;\n        }\n        if (constantBaseline != null) {\n            this._constantBaselineValueProvider = function () { return [constantBaseline]; };\n            yScale.addPaddingExceptionsProvider(this._constantBaselineValueProvider);\n        }\n    };\n    Area.prototype._getResetYFunction = function () {\n        return plot_1.Plot._scaledAccessor(this.y0());\n    };\n    Area.prototype._propertyProjectors = function () {\n        var propertyToProjectors = _super.prototype._propertyProjectors.call(this);\n        propertyToProjectors[\"d\"] = this._constructAreaProjector(plot_1.Plot._scaledAccessor(this.x()), plot_1.Plot._scaledAccessor(this.y()), plot_1.Plot._scaledAccessor(this.y0()));\n        return propertyToProjectors;\n    };\n    Area.prototype.selections = function (datasets) {\n        var _this = this;\n        if (datasets === void 0) { datasets = this.datasets(); }\n        var allSelections = _super.prototype.selections.call(this, datasets)[0];\n        var lineDrawers = datasets.map(function (dataset) { return _this._lineDrawers.get(dataset); })\n            .filter(function (drawer) { return drawer != null; });\n        lineDrawers.forEach(function (ld, i) { return allSelections.push(ld.selectionForIndex(i).node()); });\n        return d3.selectAll(allSelections);\n    };\n    Area.prototype._constructAreaProjector = function (xProjector, yProjector, y0Projector) {\n        var _this = this;\n        var definedProjector = function (d, i, dataset) {\n            var positionX = plot_1.Plot._scaledAccessor(_this.x())(d, i, dataset);\n            var positionY = plot_1.Plot._scaledAccessor(_this.y())(d, i, dataset);\n            return Utils.Math.isValidNumber(positionX) && Utils.Math.isValidNumber(positionY);\n        };\n        return function (datum, index, dataset) {\n            var areaGenerator = d3.svg.area()\n                .x(function (innerDatum, innerIndex) { return xProjector(innerDatum, innerIndex, dataset); })\n                .y1(function (innerDatum, innerIndex) { return yProjector(innerDatum, innerIndex, dataset); })\n                .y0(function (innerDatum, innerIndex) { return y0Projector(innerDatum, innerIndex, dataset); })\n                .interpolate(_this.interpolator())\n                .defined(function (innerDatum, innerIndex) { return definedProjector(innerDatum, innerIndex, dataset); });\n            return areaGenerator(datum);\n        };\n    };\n    Area._Y0_KEY = \"y0\";\n    return Area;\n}(linePlot_1.Line));\nexports.Area = Area;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/areaPlot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/barPlot.js":
/*!***********************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/barPlot.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar SVGTypewriter = __webpack_require__(/*! svg-typewriter */ \"./node_modules/svg-typewriter/build/src/index.js\");\nvar Animators = __webpack_require__(/*! ../animators */ \"./node_modules/plottable/build/src/animators/index.js\");\nvar Drawers = __webpack_require__(/*! ../drawers */ \"./node_modules/plottable/build/src/drawers/index.js\");\nvar Formatters = __webpack_require__(/*! ../core/formatters */ \"./node_modules/plottable/build/src/core/formatters.js\");\nvar Scales = __webpack_require__(/*! ../scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar quantitativeScale_1 = __webpack_require__(/*! ../scales/quantitativeScale */ \"./node_modules/plottable/build/src/scales/quantitativeScale.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Plots = __webpack_require__(/*! ./ */ \"./node_modules/plottable/build/src/plots/index.js\");\nvar plot_1 = __webpack_require__(/*! ./plot */ \"./node_modules/plottable/build/src/plots/plot.js\");\nvar xyPlot_1 = __webpack_require__(/*! ./xyPlot */ \"./node_modules/plottable/build/src/plots/xyPlot.js\");\nvar Bar = (function (_super) {\n    __extends(Bar, _super);\n    /**\n     * A Bar Plot draws bars growing out from a baseline to some value\n     *\n     * @constructor\n     * @param {string} [orientation=\"vertical\"] One of \"vertical\"/\"horizontal\".\n     */\n    function Bar(orientation) {\n        var _this = this;\n        if (orientation === void 0) { orientation = Bar.ORIENTATION_VERTICAL; }\n        _super.call(this);\n        this._labelFormatter = Formatters.identity();\n        this._labelsEnabled = false;\n        this._hideBarsIfAnyAreTooWide = true;\n        this._barPixelWidth = 0;\n        this.addClass(\"bar-plot\");\n        if (orientation !== Bar.ORIENTATION_VERTICAL && orientation !== Bar.ORIENTATION_HORIZONTAL) {\n            throw new Error(orientation + \" is not a valid orientation for Plots.Bar\");\n        }\n        this._isVertical = orientation === Bar.ORIENTATION_VERTICAL;\n        this.animator(\"baseline\", new Animators.Null());\n        this.attr(\"fill\", new Scales.Color().range()[0]);\n        this.attr(\"width\", function () { return _this._barPixelWidth; });\n        this._labelConfig = new Utils.Map();\n        this._baselineValueProvider = function () { return [_this.baselineValue()]; };\n        this._updateBarPixelWidthCallback = function () { return _this._updateBarPixelWidth(); };\n    }\n    Bar.prototype.x = function (x, xScale) {\n        if (x == null) {\n            return _super.prototype.x.call(this);\n        }\n        if (xScale == null) {\n            _super.prototype.x.call(this, x);\n        }\n        else {\n            _super.prototype.x.call(this, x, xScale);\n            xScale.onUpdate(this._updateBarPixelWidthCallback);\n        }\n        this._updateValueScale();\n        return this;\n    };\n    Bar.prototype.y = function (y, yScale) {\n        if (y == null) {\n            return _super.prototype.y.call(this);\n        }\n        if (yScale == null) {\n            _super.prototype.y.call(this, y);\n        }\n        else {\n            _super.prototype.y.call(this, y, yScale);\n            yScale.onUpdate(this._updateBarPixelWidthCallback);\n        }\n        this._updateValueScale();\n        return this;\n    };\n    /**\n     * Gets the orientation of the plot\n     *\n     * @return \"vertical\" | \"horizontal\"\n     */\n    Bar.prototype.orientation = function () {\n        return this._isVertical ? Bar.ORIENTATION_VERTICAL : Bar.ORIENTATION_HORIZONTAL;\n    };\n    Bar.prototype.render = function () {\n        this._updateBarPixelWidth();\n        this._updateExtents();\n        _super.prototype.render.call(this);\n        return this;\n    };\n    Bar.prototype._createDrawer = function (dataset) {\n        return new Drawers.Rectangle(dataset);\n    };\n    Bar.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._baseline = this._renderArea.append(\"line\").classed(\"baseline\", true);\n    };\n    Bar.prototype.baselineValue = function (value) {\n        if (value == null) {\n            if (this._baselineValue != null) {\n                return this._baselineValue;\n            }\n            if (!this._projectorsReady()) {\n                return 0;\n            }\n            var valueScale = this._isVertical ? this.y().scale : this.x().scale;\n            if (!valueScale) {\n                return 0;\n            }\n            if (valueScale instanceof Scales.Time) {\n                return new Date(0);\n            }\n            return 0;\n        }\n        this._baselineValue = value;\n        this._updateValueScale();\n        this.render();\n        return this;\n    };\n    Bar.prototype.addDataset = function (dataset) {\n        _super.prototype.addDataset.call(this, dataset);\n        this._updateBarPixelWidth();\n        return this;\n    };\n    Bar.prototype._addDataset = function (dataset) {\n        dataset.onUpdate(this._updateBarPixelWidthCallback);\n        _super.prototype._addDataset.call(this, dataset);\n        return this;\n    };\n    Bar.prototype.removeDataset = function (dataset) {\n        dataset.offUpdate(this._updateBarPixelWidthCallback);\n        _super.prototype.removeDataset.call(this, dataset);\n        this._updateBarPixelWidth();\n        return this;\n    };\n    Bar.prototype._removeDataset = function (dataset) {\n        dataset.offUpdate(this._updateBarPixelWidthCallback);\n        _super.prototype._removeDataset.call(this, dataset);\n        return this;\n    };\n    Bar.prototype.datasets = function (datasets) {\n        if (datasets == null) {\n            return _super.prototype.datasets.call(this);\n        }\n        _super.prototype.datasets.call(this, datasets);\n        this._updateBarPixelWidth();\n        return this;\n    };\n    Bar.prototype.labelsEnabled = function (enabled) {\n        if (enabled == null) {\n            return this._labelsEnabled;\n        }\n        else {\n            this._labelsEnabled = enabled;\n            this.render();\n            return this;\n        }\n    };\n    Bar.prototype.labelFormatter = function (formatter) {\n        if (formatter == null) {\n            return this._labelFormatter;\n        }\n        else {\n            this._labelFormatter = formatter;\n            this.render();\n            return this;\n        }\n    };\n    Bar.prototype._createNodesForDataset = function (dataset) {\n        var drawer = _super.prototype._createNodesForDataset.call(this, dataset);\n        drawer.renderArea().classed(Bar._BAR_AREA_CLASS, true);\n        var labelArea = this._renderArea.append(\"g\").classed(Bar._LABEL_AREA_CLASS, true);\n        var measurer = new SVGTypewriter.CacheMeasurer(labelArea);\n        var writer = new SVGTypewriter.Writer(measurer);\n        this._labelConfig.set(dataset, { labelArea: labelArea, measurer: measurer, writer: writer });\n        return drawer;\n    };\n    Bar.prototype._removeDatasetNodes = function (dataset) {\n        _super.prototype._removeDatasetNodes.call(this, dataset);\n        var labelConfig = this._labelConfig.get(dataset);\n        if (labelConfig != null) {\n            labelConfig.labelArea.remove();\n            this._labelConfig.delete(dataset);\n        }\n    };\n    /**\n     * Returns the PlotEntity nearest to the query point according to the following algorithm:\n     *   - If the query point is inside a bar, returns the PlotEntity for that bar.\n     *   - Otherwise, gets the nearest PlotEntity by the primary direction (X for vertical, Y for horizontal),\n     *     breaking ties with the secondary direction.\n     * Returns undefined if no PlotEntity can be found.\n     *\n     * @param {Point} queryPoint\n     * @returns {PlotEntity} The nearest PlotEntity, or undefined if no PlotEntity can be found.\n     */\n    Bar.prototype.entityNearest = function (queryPoint) {\n        var _this = this;\n        var minPrimaryDist = Infinity;\n        var minSecondaryDist = Infinity;\n        var queryPtPrimary = this._isVertical ? queryPoint.x : queryPoint.y;\n        var queryPtSecondary = this._isVertical ? queryPoint.y : queryPoint.x;\n        // SVGRects are positioned with sub-pixel accuracy (the default unit\n        // for the x, y, height & width attributes), but user selections (e.g. via\n        // mouse events) usually have pixel accuracy. We add a tolerance of 0.5 pixels.\n        var tolerance = 0.5;\n        var chartBounds = this.bounds();\n        var closest;\n        this.entities().forEach(function (entity) {\n            if (!_this._entityVisibleOnPlot(entity, chartBounds)) {\n                return;\n            }\n            var primaryDist = 0;\n            var secondaryDist = 0;\n            var plotPt = entity.position;\n            // if we're inside a bar, distance in both directions should stay 0\n            var barBBox = Utils.DOM.elementBBox(entity.selection);\n            if (!Utils.DOM.intersectsBBox(queryPoint.x, queryPoint.y, barBBox, tolerance)) {\n                var plotPtPrimary = _this._isVertical ? plotPt.x : plotPt.y;\n                primaryDist = Math.abs(queryPtPrimary - plotPtPrimary);\n                // compute this bar's min and max along the secondary axis\n                var barMinSecondary = _this._isVertical ? barBBox.y : barBBox.x;\n                var barMaxSecondary = barMinSecondary + (_this._isVertical ? barBBox.height : barBBox.width);\n                if (queryPtSecondary >= barMinSecondary - tolerance && queryPtSecondary <= barMaxSecondary + tolerance) {\n                    // if we're within a bar's secondary axis span, it is closest in that direction\n                    secondaryDist = 0;\n                }\n                else {\n                    var plotPtSecondary = _this._isVertical ? plotPt.y : plotPt.x;\n                    secondaryDist = Math.abs(queryPtSecondary - plotPtSecondary);\n                }\n            }\n            // if we find a closer bar, record its distance and start new closest lists\n            if (primaryDist < minPrimaryDist\n                || primaryDist === minPrimaryDist && secondaryDist < minSecondaryDist) {\n                closest = entity;\n                minPrimaryDist = primaryDist;\n                minSecondaryDist = secondaryDist;\n            }\n        });\n        return closest;\n    };\n    Bar.prototype._entityVisibleOnPlot = function (entity, bounds) {\n        var chartWidth = bounds.bottomRight.x - bounds.topLeft.x;\n        var chartHeight = bounds.bottomRight.y - bounds.topLeft.y;\n        var xRange = { min: 0, max: chartWidth };\n        var yRange = { min: 0, max: chartHeight };\n        var attrToProjector = this._generateAttrToProjector();\n        var datum = entity.datum, index = entity.index, dataset = entity.dataset;\n        var barBBox = {\n            x: attrToProjector[\"x\"](datum, index, dataset),\n            y: attrToProjector[\"y\"](datum, index, dataset),\n            width: attrToProjector[\"width\"](datum, index, dataset),\n            height: attrToProjector[\"height\"](datum, index, dataset),\n        };\n        return Utils.DOM.intersectsBBox(xRange, yRange, barBBox);\n    };\n    /**\n     * Gets the Entities at a particular Point.\n     *\n     * @param {Point} p\n     * @returns {PlotEntity[]}\n     */\n    Bar.prototype.entitiesAt = function (p) {\n        return this._entitiesIntersecting(p.x, p.y);\n    };\n    Bar.prototype.entitiesIn = function (xRangeOrBounds, yRange) {\n        var dataXRange;\n        var dataYRange;\n        if (yRange == null) {\n            var bounds = xRangeOrBounds;\n            dataXRange = { min: bounds.topLeft.x, max: bounds.bottomRight.x };\n            dataYRange = { min: bounds.topLeft.y, max: bounds.bottomRight.y };\n        }\n        else {\n            dataXRange = xRangeOrBounds;\n            dataYRange = yRange;\n        }\n        return this._entitiesIntersecting(dataXRange, dataYRange);\n    };\n    Bar.prototype._entitiesIntersecting = function (xValOrRange, yValOrRange) {\n        var intersected = [];\n        this.entities().forEach(function (entity) {\n            if (Utils.DOM.intersectsBBox(xValOrRange, yValOrRange, Utils.DOM.elementBBox(entity.selection))) {\n                intersected.push(entity);\n            }\n        });\n        return intersected;\n    };\n    Bar.prototype._updateValueScale = function () {\n        if (!this._projectorsReady()) {\n            return;\n        }\n        var valueScale = this._isVertical ? this.y().scale : this.x().scale;\n        if (valueScale instanceof quantitativeScale_1.QuantitativeScale) {\n            var qscale = valueScale;\n            qscale.addPaddingExceptionsProvider(this._baselineValueProvider);\n            qscale.addIncludedValuesProvider(this._baselineValueProvider);\n        }\n    };\n    Bar.prototype._additionalPaint = function (time) {\n        var _this = this;\n        var primaryScale = this._isVertical ? this.y().scale : this.x().scale;\n        var scaledBaseline = primaryScale.scale(this.baselineValue());\n        var baselineAttr = {\n            \"x1\": this._isVertical ? 0 : scaledBaseline,\n            \"y1\": this._isVertical ? scaledBaseline : 0,\n            \"x2\": this._isVertical ? this.width() : scaledBaseline,\n            \"y2\": this._isVertical ? scaledBaseline : this.height(),\n        };\n        this._getAnimator(\"baseline\").animate(this._baseline, baselineAttr);\n        this.datasets().forEach(function (dataset) { return _this._labelConfig.get(dataset).labelArea.selectAll(\"g\").remove(); });\n        if (this._labelsEnabled) {\n            Utils.Window.setTimeout(function () { return _this._drawLabels(); }, time);\n        }\n    };\n    /**\n     * Makes sure the extent takes into account the widths of the bars\n     */\n    Bar.prototype._extentsForProperty = function (property) {\n        var _this = this;\n        var extents = _super.prototype._extentsForProperty.call(this, property);\n        var accScaleBinding;\n        if (property === \"x\" && this._isVertical) {\n            accScaleBinding = this.x();\n        }\n        else if (property === \"y\" && !this._isVertical) {\n            accScaleBinding = this.y();\n        }\n        else {\n            return extents;\n        }\n        if (!(accScaleBinding && accScaleBinding.scale && accScaleBinding.scale instanceof quantitativeScale_1.QuantitativeScale)) {\n            return extents;\n        }\n        var scale = accScaleBinding.scale;\n        // To account for inverted domains\n        extents = extents.map(function (extent) { return d3.extent([\n            scale.invert(scale.scale(extent[0]) - _this._barPixelWidth / 2),\n            scale.invert(scale.scale(extent[0]) + _this._barPixelWidth / 2),\n            scale.invert(scale.scale(extent[1]) - _this._barPixelWidth / 2),\n            scale.invert(scale.scale(extent[1]) + _this._barPixelWidth / 2),\n        ]); });\n        return extents;\n    };\n    Bar.prototype._drawLabels = function () {\n        var _this = this;\n        var dataToDraw = this._getDataToDraw();\n        var labelsTooWide = false;\n        this.datasets().forEach(function (dataset) { return labelsTooWide = labelsTooWide || _this._drawLabel(dataToDraw.get(dataset), dataset); });\n        if (this._hideBarsIfAnyAreTooWide && labelsTooWide) {\n            this.datasets().forEach(function (dataset) { return _this._labelConfig.get(dataset).labelArea.selectAll(\"g\").remove(); });\n        }\n    };\n    Bar.prototype._drawLabel = function (data, dataset) {\n        var _this = this;\n        var attrToProjector = this._generateAttrToProjector();\n        var labelConfig = this._labelConfig.get(dataset);\n        var labelArea = labelConfig.labelArea;\n        var measurer = labelConfig.measurer;\n        var writer = labelConfig.writer;\n        var drawLabel = function (d, i) {\n            var valueAccessor = _this._isVertical ? _this.y().accessor : _this.x().accessor;\n            var value = valueAccessor(d, i, dataset);\n            var valueScale = _this._isVertical ? _this.y().scale : _this.x().scale;\n            var scaledValue = valueScale != null ? valueScale.scale(value) : value;\n            var scaledBaseline = valueScale != null ? valueScale.scale(_this.baselineValue()) : _this.baselineValue();\n            var barWidth = attrToProjector[\"width\"](d, i, dataset);\n            var barHeight = attrToProjector[\"height\"](d, i, dataset);\n            var text = _this._labelFormatter(valueAccessor(d, i, dataset));\n            var measurement = measurer.measure(text);\n            var xAlignment = \"center\";\n            var yAlignment = \"center\";\n            var labelContainerOrigin = {\n                x: attrToProjector[\"x\"](d, i, dataset),\n                y: attrToProjector[\"y\"](d, i, dataset),\n            };\n            var containerWidth = barWidth;\n            var containerHeight = barHeight;\n            var labelOrigin = {\n                x: labelContainerOrigin.x,\n                y: labelContainerOrigin.y,\n            };\n            var showLabelOnBar;\n            if (_this._isVertical) {\n                labelOrigin.x += containerWidth / 2 - measurement.width / 2;\n                var barY = attrToProjector[\"y\"](d, i, dataset);\n                var effectiveBarHeight = barHeight;\n                if (barY + barHeight > _this.height()) {\n                    effectiveBarHeight = _this.height() - barY;\n                }\n                else if (barY < 0) {\n                    effectiveBarHeight = barY + barHeight;\n                }\n                var offset = Bar._LABEL_PADDING;\n                showLabelOnBar = measurement.height + 2 * offset <= effectiveBarHeight;\n                if (showLabelOnBar) {\n                    if (scaledValue < scaledBaseline) {\n                        labelContainerOrigin.y += offset;\n                        yAlignment = \"top\";\n                        labelOrigin.y += offset;\n                    }\n                    else {\n                        labelContainerOrigin.y -= offset;\n                        yAlignment = \"bottom\";\n                        labelOrigin.y += containerHeight - offset - measurement.height;\n                    }\n                }\n                else {\n                    containerHeight = barHeight + offset + measurement.height;\n                    if (scaledValue <= scaledBaseline) {\n                        labelContainerOrigin.y -= offset + measurement.height;\n                        yAlignment = \"top\";\n                        labelOrigin.y -= offset + measurement.height;\n                    }\n                    else {\n                        yAlignment = \"bottom\";\n                        labelOrigin.y += barHeight + offset;\n                    }\n                }\n            }\n            else {\n                labelOrigin.y += containerHeight / 2 - measurement.height / 2;\n                var barX = attrToProjector[\"x\"](d, i, dataset);\n                var effectiveBarWidth = barWidth;\n                if (barX + barWidth > _this.width()) {\n                    effectiveBarWidth = _this.width() - barX;\n                }\n                else if (barX < 0) {\n                    effectiveBarWidth = barX + barWidth;\n                }\n                var offset = Bar._LABEL_PADDING;\n                showLabelOnBar = measurement.width + 2 * offset <= effectiveBarWidth;\n                if (showLabelOnBar) {\n                    if (scaledValue < scaledBaseline) {\n                        labelContainerOrigin.x += offset;\n                        xAlignment = \"left\";\n                        labelOrigin.x += offset;\n                    }\n                    else {\n                        labelContainerOrigin.x -= offset;\n                        xAlignment = \"right\";\n                        labelOrigin.x += containerWidth - offset - measurement.width;\n                    }\n                }\n                else {\n                    containerWidth = barWidth + offset + measurement.width;\n                    if (scaledValue < scaledBaseline) {\n                        labelContainerOrigin.x -= offset + measurement.width;\n                        xAlignment = \"left\";\n                        labelOrigin.x -= offset + measurement.width;\n                    }\n                    else {\n                        xAlignment = \"right\";\n                        labelOrigin.x += barWidth + offset;\n                    }\n                }\n            }\n            var labelContainer = labelArea.append(\"g\").attr(\"transform\", \"translate(\" + labelContainerOrigin.x + \", \" + labelContainerOrigin.y + \")\");\n            if (showLabelOnBar) {\n                labelContainer.classed(\"on-bar-label\", true);\n                var color = attrToProjector[\"fill\"](d, i, dataset);\n                var dark = Utils.Color.contrast(\"white\", color) * 1.6 < Utils.Color.contrast(\"black\", color);\n                labelContainer.classed(dark ? \"dark-label\" : \"light-label\", true);\n            }\n            else {\n                labelContainer.classed(\"off-bar-label\", true);\n            }\n            var hideLabel = labelOrigin.x < 0 ||\n                labelOrigin.y < 0 ||\n                labelOrigin.x + measurement.width > _this.width() ||\n                labelOrigin.y + measurement.height > _this.height();\n            labelContainer.style(\"visibility\", hideLabel ? \"hidden\" : \"inherit\");\n            var writeOptions = {\n                selection: labelContainer,\n                xAlign: xAlignment,\n                yAlign: yAlignment,\n                textRotation: 0,\n            };\n            writer.write(text, containerWidth, containerHeight, writeOptions);\n            var tooWide = _this._isVertical\n                ? barWidth < (measurement.width + Bar._LABEL_PADDING * 2)\n                : barHeight < (measurement.height + Bar._LABEL_PADDING * 2);\n            return tooWide;\n        };\n        var labelTooWide = data.map(drawLabel);\n        return labelTooWide.some(function (d) { return d; });\n    };\n    Bar.prototype._generateDrawSteps = function () {\n        var drawSteps = [];\n        if (this._animateOnNextRender()) {\n            var resetAttrToProjector = this._generateAttrToProjector();\n            var primaryScale = this._isVertical ? this.y().scale : this.x().scale;\n            var scaledBaseline_1 = primaryScale.scale(this.baselineValue());\n            var positionAttr = this._isVertical ? \"y\" : \"x\";\n            var dimensionAttr = this._isVertical ? \"height\" : \"width\";\n            resetAttrToProjector[positionAttr] = function () { return scaledBaseline_1; };\n            resetAttrToProjector[dimensionAttr] = function () { return 0; };\n            drawSteps.push({ attrToProjector: resetAttrToProjector, animator: this._getAnimator(Plots.Animator.RESET) });\n        }\n        drawSteps.push({\n            attrToProjector: this._generateAttrToProjector(),\n            animator: this._getAnimator(Plots.Animator.MAIN)\n        });\n        return drawSteps;\n    };\n    Bar.prototype._generateAttrToProjector = function () {\n        // Primary scale/direction: the \"length\" of the bars\n        // Secondary scale/direction: the \"width\" of the bars\n        var attrToProjector = _super.prototype._generateAttrToProjector.call(this);\n        var primaryScale = this._isVertical ? this.y().scale : this.x().scale;\n        var primaryAttr = this._isVertical ? \"y\" : \"x\";\n        var secondaryAttr = this._isVertical ? \"x\" : \"y\";\n        var scaledBaseline = primaryScale.scale(this.baselineValue());\n        var positionF = this._isVertical ? plot_1.Plot._scaledAccessor(this.x()) : plot_1.Plot._scaledAccessor(this.y());\n        var widthF = attrToProjector[\"width\"];\n        var originalPositionFn = this._isVertical ? plot_1.Plot._scaledAccessor(this.y()) : plot_1.Plot._scaledAccessor(this.x());\n        var heightF = function (d, i, dataset) {\n            return Math.abs(scaledBaseline - originalPositionFn(d, i, dataset));\n        };\n        attrToProjector[\"width\"] = this._isVertical ? widthF : heightF;\n        attrToProjector[\"height\"] = this._isVertical ? heightF : widthF;\n        attrToProjector[secondaryAttr] = function (d, i, dataset) {\n            return positionF(d, i, dataset) - widthF(d, i, dataset) / 2;\n        };\n        attrToProjector[primaryAttr] = function (d, i, dataset) {\n            var originalPos = originalPositionFn(d, i, dataset);\n            // If it is past the baseline, it should start at the baselin then width/height\n            // carries it over. If it's not past the baseline, leave it at original position and\n            // then width/height carries it to baseline\n            return (originalPos > scaledBaseline) ? scaledBaseline : originalPos;\n        };\n        return attrToProjector;\n    };\n    /**\n     * Computes the barPixelWidth of all the bars in the plot.\n     *\n     * If the position scale of the plot is a CategoryScale and in bands mode, then the rangeBands function will be used.\n     * If the position scale of the plot is a QuantitativeScale, then the bar width is equal to the smallest distance between\n     * two adjacent data points, padded for visualisation.\n     */\n    Bar.prototype._getBarPixelWidth = function () {\n        if (!this._projectorsReady()) {\n            return 0;\n        }\n        var barPixelWidth;\n        var barScale = this._isVertical ? this.x().scale : this.y().scale;\n        if (barScale instanceof Scales.Category) {\n            barPixelWidth = barScale.rangeBand();\n        }\n        else {\n            var barAccessor_1 = this._isVertical ? this.x().accessor : this.y().accessor;\n            var numberBarAccessorData = d3.set(Utils.Array.flatten(this.datasets().map(function (dataset) {\n                return dataset.data().map(function (d, i) { return barAccessor_1(d, i, dataset); })\n                    .filter(function (d) { return d != null; })\n                    .map(function (d) { return d.valueOf(); });\n            }))).values().map(function (value) { return +value; });\n            numberBarAccessorData.sort(function (a, b) { return a - b; });\n            var scaledData = numberBarAccessorData.map(function (datum) { return barScale.scale(datum); });\n            var barAccessorDataPairs = d3.pairs(scaledData);\n            var barWidthDimension = this._isVertical ? this.width() : this.height();\n            barPixelWidth = Utils.Math.min(barAccessorDataPairs, function (pair, i) {\n                return Math.abs(pair[1] - pair[0]);\n            }, barWidthDimension * Bar._SINGLE_BAR_DIMENSION_RATIO);\n            barPixelWidth *= Bar._BAR_WIDTH_RATIO;\n        }\n        return barPixelWidth;\n    };\n    Bar.prototype._updateBarPixelWidth = function () {\n        this._barPixelWidth = this._getBarPixelWidth();\n    };\n    Bar.prototype.entities = function (datasets) {\n        if (datasets === void 0) { datasets = this.datasets(); }\n        if (!this._projectorsReady()) {\n            return [];\n        }\n        var entities = _super.prototype.entities.call(this, datasets);\n        return entities;\n    };\n    Bar.prototype._pixelPoint = function (datum, index, dataset) {\n        var attrToProjector = this._generateAttrToProjector();\n        var rectX = attrToProjector[\"x\"](datum, index, dataset);\n        var rectY = attrToProjector[\"y\"](datum, index, dataset);\n        var rectWidth = attrToProjector[\"width\"](datum, index, dataset);\n        var rectHeight = attrToProjector[\"height\"](datum, index, dataset);\n        var x;\n        var y;\n        var originalPosition = (this._isVertical ? plot_1.Plot._scaledAccessor(this.y()) : plot_1.Plot._scaledAccessor(this.x()))(datum, index, dataset);\n        var scaledBaseline = (this._isVertical ? this.y().scale : this.x().scale).scale(this.baselineValue());\n        if (this._isVertical) {\n            x = rectX + rectWidth / 2;\n            y = originalPosition <= scaledBaseline ? rectY : rectY + rectHeight;\n        }\n        else {\n            x = originalPosition >= scaledBaseline ? rectX + rectWidth : rectX;\n            y = rectY + rectHeight / 2;\n        }\n        return { x: x, y: y };\n    };\n    Bar.prototype._uninstallScaleForKey = function (scale, key) {\n        scale.offUpdate(this._updateBarPixelWidthCallback);\n        _super.prototype._uninstallScaleForKey.call(this, scale, key);\n    };\n    Bar.prototype._getDataToDraw = function () {\n        var dataToDraw = new Utils.Map();\n        var attrToProjector = this._generateAttrToProjector();\n        this.datasets().forEach(function (dataset) {\n            var data = dataset.data().filter(function (d, i) { return Utils.Math.isValidNumber(attrToProjector[\"x\"](d, i, dataset)) &&\n                Utils.Math.isValidNumber(attrToProjector[\"y\"](d, i, dataset)) &&\n                Utils.Math.isValidNumber(attrToProjector[\"width\"](d, i, dataset)) &&\n                Utils.Math.isValidNumber(attrToProjector[\"height\"](d, i, dataset)); });\n            dataToDraw.set(dataset, data);\n        });\n        return dataToDraw;\n    };\n    Bar.ORIENTATION_VERTICAL = \"vertical\";\n    Bar.ORIENTATION_HORIZONTAL = \"horizontal\";\n    Bar._BAR_WIDTH_RATIO = 0.95;\n    Bar._SINGLE_BAR_DIMENSION_RATIO = 0.4;\n    Bar._BAR_AREA_CLASS = \"bar-area\";\n    Bar._LABEL_PADDING = 10;\n    Bar._LABEL_AREA_CLASS = \"bar-label-text-area\";\n    return Bar;\n}(xyPlot_1.XYPlot));\nexports.Bar = Bar;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/barPlot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/clusteredBarPlot.js":
/*!********************************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/clusteredBarPlot.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scales = __webpack_require__(/*! ../scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar barPlot_1 = __webpack_require__(/*! ./barPlot */ \"./node_modules/plottable/build/src/plots/barPlot.js\");\nvar plot_1 = __webpack_require__(/*! ./plot */ \"./node_modules/plottable/build/src/plots/plot.js\");\nvar ClusteredBar = (function (_super) {\n    __extends(ClusteredBar, _super);\n    /**\n     * A ClusteredBar Plot groups bars across Datasets based on the primary value of the bars.\n     *   On a vertical ClusteredBar Plot, the bars with the same X value are grouped.\n     *   On a horizontal ClusteredBar Plot, the bars with the same Y value are grouped.\n     *\n     * @constructor\n     * @param {string} [orientation=\"vertical\"] One of \"vertical\"/\"horizontal\".\n     */\n    function ClusteredBar(orientation) {\n        if (orientation === void 0) { orientation = barPlot_1.Bar.ORIENTATION_VERTICAL; }\n        _super.call(this, orientation);\n        this._clusterOffsets = new Utils.Map();\n    }\n    ClusteredBar.prototype._generateAttrToProjector = function () {\n        var _this = this;\n        var attrToProjector = _super.prototype._generateAttrToProjector.call(this);\n        // the width is constant, so set the inner scale range to that\n        var innerScale = this._makeInnerScale();\n        var innerWidthF = function (d, i) { return innerScale.rangeBand(); };\n        attrToProjector[\"width\"] = this._isVertical ? innerWidthF : attrToProjector[\"width\"];\n        attrToProjector[\"height\"] = !this._isVertical ? innerWidthF : attrToProjector[\"height\"];\n        var xAttr = attrToProjector[\"x\"];\n        var yAttr = attrToProjector[\"y\"];\n        attrToProjector[\"x\"] = this._isVertical ?\n            function (d, i, ds) { return xAttr(d, i, ds) + _this._clusterOffsets.get(ds); } :\n            function (d, i, ds) { return xAttr(d, i, ds); };\n        attrToProjector[\"y\"] = this._isVertical ?\n            function (d, i, ds) { return yAttr(d, i, ds); } :\n            function (d, i, ds) { return yAttr(d, i, ds) + _this._clusterOffsets.get(ds); };\n        return attrToProjector;\n    };\n    ClusteredBar.prototype._updateClusterPosition = function () {\n        var _this = this;\n        var innerScale = this._makeInnerScale();\n        this.datasets().forEach(function (d, i) { return _this._clusterOffsets.set(d, innerScale.scale(String(i)) - innerScale.rangeBand() / 2); });\n    };\n    ClusteredBar.prototype._makeInnerScale = function () {\n        var innerScale = new Scales.Category();\n        innerScale.domain(this.datasets().map(function (d, i) { return String(i); }));\n        var widthProjector = plot_1.Plot._scaledAccessor(this.attr(\"width\"));\n        innerScale.range([0, widthProjector(null, 0, null)]);\n        return innerScale;\n    };\n    ClusteredBar.prototype._getDataToDraw = function () {\n        this._updateClusterPosition();\n        return _super.prototype._getDataToDraw.call(this);\n    };\n    return ClusteredBar;\n}(barPlot_1.Bar));\nexports.ClusteredBar = ClusteredBar;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/clusteredBarPlot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/commons.js":
/*!***********************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/commons.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Animator;\n(function (Animator) {\n    Animator.MAIN = \"main\";\n    Animator.RESET = \"reset\";\n})(Animator = exports.Animator || (exports.Animator = {}));\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/commons.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./areaPlot */ \"./node_modules/plottable/build/src/plots/areaPlot.js\"));\n__export(__webpack_require__(/*! ./barPlot */ \"./node_modules/plottable/build/src/plots/barPlot.js\"));\n__export(__webpack_require__(/*! ./commons */ \"./node_modules/plottable/build/src/plots/commons.js\"));\n__export(__webpack_require__(/*! ./clusteredBarPlot */ \"./node_modules/plottable/build/src/plots/clusteredBarPlot.js\"));\n__export(__webpack_require__(/*! ./linePlot */ \"./node_modules/plottable/build/src/plots/linePlot.js\"));\n__export(__webpack_require__(/*! ./piePlot */ \"./node_modules/plottable/build/src/plots/piePlot.js\"));\n__export(__webpack_require__(/*! ./rectanglePlot */ \"./node_modules/plottable/build/src/plots/rectanglePlot.js\"));\n__export(__webpack_require__(/*! ./scatterPlot */ \"./node_modules/plottable/build/src/plots/scatterPlot.js\"));\n__export(__webpack_require__(/*! ./segmentPlot */ \"./node_modules/plottable/build/src/plots/segmentPlot.js\"));\n__export(__webpack_require__(/*! ./stackedAreaPlot */ \"./node_modules/plottable/build/src/plots/stackedAreaPlot.js\"));\n__export(__webpack_require__(/*! ./stackedBarPlot */ \"./node_modules/plottable/build/src/plots/stackedBarPlot.js\"));\n__export(__webpack_require__(/*! ./waterfallPlot */ \"./node_modules/plottable/build/src/plots/waterfallPlot.js\"));\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/index.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/linePlot.js":
/*!************************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/linePlot.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Animators = __webpack_require__(/*! ../animators */ \"./node_modules/plottable/build/src/animators/index.js\");\nvar Drawers = __webpack_require__(/*! ../drawers */ \"./node_modules/plottable/build/src/drawers/index.js\");\nvar Scales = __webpack_require__(/*! ../scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar quantitativeScale_1 = __webpack_require__(/*! ../scales/quantitativeScale */ \"./node_modules/plottable/build/src/scales/quantitativeScale.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Plots = __webpack_require__(/*! ./ */ \"./node_modules/plottable/build/src/plots/index.js\");\nvar plot_1 = __webpack_require__(/*! ./plot */ \"./node_modules/plottable/build/src/plots/plot.js\");\nvar xyPlot_1 = __webpack_require__(/*! ./xyPlot */ \"./node_modules/plottable/build/src/plots/xyPlot.js\");\nvar Line = (function (_super) {\n    __extends(Line, _super);\n    /**\n     * A Line Plot draws line segments starting from the first data point to the next.\n     *\n     * @constructor\n     */\n    function Line() {\n        _super.call(this);\n        this._interpolator = \"linear\";\n        this._autorangeSmooth = false;\n        this._croppedRenderingEnabled = true;\n        this._downsamplingEnabled = false;\n        this.addClass(\"line-plot\");\n        var animator = new Animators.Easing();\n        animator.stepDuration(plot_1.Plot._ANIMATION_MAX_DURATION);\n        animator.easingMode(\"exp-in-out\");\n        animator.maxTotalDuration(plot_1.Plot._ANIMATION_MAX_DURATION);\n        this.animator(Plots.Animator.MAIN, animator);\n        this.attr(\"stroke\", new Scales.Color().range()[0]);\n        this.attr(\"stroke-width\", \"2px\");\n    }\n    Line.prototype.x = function (x, xScale) {\n        if (x == null) {\n            return _super.prototype.x.call(this);\n        }\n        else {\n            if (xScale == null) {\n                _super.prototype.x.call(this, x);\n            }\n            else {\n                _super.prototype.x.call(this, x, xScale);\n            }\n            this._setScaleSnapping();\n            return this;\n        }\n    };\n    Line.prototype.y = function (y, yScale) {\n        if (y == null) {\n            return _super.prototype.y.call(this);\n        }\n        else {\n            _super.prototype.y.call(this, y, yScale);\n            this._setScaleSnapping();\n            return this;\n        }\n    };\n    Line.prototype.autorangeMode = function (autorangeMode) {\n        if (autorangeMode == null) {\n            return _super.prototype.autorangeMode.call(this);\n        }\n        _super.prototype.autorangeMode.call(this, autorangeMode);\n        this._setScaleSnapping();\n        return this;\n    };\n    Line.prototype.autorangeSmooth = function (autorangeSmooth) {\n        if (autorangeSmooth == null) {\n            return this._autorangeSmooth;\n        }\n        this._autorangeSmooth = autorangeSmooth;\n        this._setScaleSnapping();\n        return this;\n    };\n    Line.prototype._setScaleSnapping = function () {\n        if (this.autorangeMode() === \"x\" && this.x() && this.x().scale && this.x().scale instanceof quantitativeScale_1.QuantitativeScale) {\n            this.x().scale.snappingDomainEnabled(!this.autorangeSmooth());\n        }\n        if (this.autorangeMode() === \"y\" && this.y() && this.y().scale && this.y().scale instanceof quantitativeScale_1.QuantitativeScale) {\n            this.y().scale.snappingDomainEnabled(!this.autorangeSmooth());\n        }\n    };\n    Line.prototype.interpolator = function (interpolator) {\n        if (interpolator == null) {\n            return this._interpolator;\n        }\n        this._interpolator = interpolator;\n        this.render();\n        return this;\n    };\n    Line.prototype.downsamplingEnabled = function (downsampling) {\n        if (downsampling == null) {\n            return this._downsamplingEnabled;\n        }\n        this._downsamplingEnabled = downsampling;\n        return this;\n    };\n    Line.prototype.croppedRenderingEnabled = function (croppedRendering) {\n        if (croppedRendering == null) {\n            return this._croppedRenderingEnabled;\n        }\n        this._croppedRenderingEnabled = croppedRendering;\n        this.render();\n        return this;\n    };\n    Line.prototype._createDrawer = function (dataset) {\n        return new Drawers.Line(dataset);\n    };\n    Line.prototype._extentsForProperty = function (property) {\n        var extents = _super.prototype._extentsForProperty.call(this, property);\n        if (!this._autorangeSmooth) {\n            return extents;\n        }\n        if (this.autorangeMode() !== property) {\n            return extents;\n        }\n        if (this.autorangeMode() !== \"x\" && this.autorangeMode() !== \"y\") {\n            return extents;\n        }\n        var edgeIntersectionPoints = this._getEdgeIntersectionPoints();\n        var includedValues;\n        if (this.autorangeMode() === \"y\") {\n            includedValues = edgeIntersectionPoints.left.concat(edgeIntersectionPoints.right).map(function (point) { return point.y; });\n        }\n        else {\n            includedValues = edgeIntersectionPoints.top.concat(edgeIntersectionPoints.bottom).map(function (point) { return point.x; });\n        }\n        return extents.map(function (extent) { return d3.extent(d3.merge([extent, includedValues])); });\n    };\n    Line.prototype._getEdgeIntersectionPoints = function () {\n        var _this = this;\n        if (!(this.y().scale instanceof quantitativeScale_1.QuantitativeScale && this.x().scale instanceof quantitativeScale_1.QuantitativeScale)) {\n            return {\n                left: [],\n                right: [],\n                top: [],\n                bottom: [],\n            };\n        }\n        var yScale = this.y().scale;\n        var xScale = this.x().scale;\n        var intersectionPoints = {\n            left: [],\n            right: [],\n            top: [],\n            bottom: [],\n        };\n        var leftX = xScale.scale(xScale.domain()[0]);\n        var rightX = xScale.scale(xScale.domain()[1]);\n        var bottomY = yScale.scale(yScale.domain()[0]);\n        var topY = yScale.scale(yScale.domain()[1]);\n        this.datasets().forEach(function (dataset) {\n            var data = dataset.data();\n            var x1, x2, y1, y2;\n            var prevX, prevY, currX, currY;\n            for (var i = 1; i < data.length; i++) {\n                prevX = currX || xScale.scale(_this.x().accessor(data[i - 1], i - 1, dataset));\n                prevY = currY || yScale.scale(_this.y().accessor(data[i - 1], i - 1, dataset));\n                currX = xScale.scale(_this.x().accessor(data[i], i, dataset));\n                currY = yScale.scale(_this.y().accessor(data[i], i, dataset));\n                // If values crossed left edge\n                if ((prevX < leftX) === (leftX <= currX)) {\n                    x1 = leftX - prevX;\n                    x2 = currX - prevX;\n                    y2 = currY - prevY;\n                    y1 = x1 * y2 / x2;\n                    intersectionPoints.left.push({\n                        x: leftX,\n                        y: yScale.invert(prevY + y1),\n                    });\n                }\n                // If values crossed right edge\n                if ((prevX < rightX) === (rightX <= currX)) {\n                    x1 = rightX - prevX;\n                    x2 = currX - prevX;\n                    y2 = currY - prevY;\n                    y1 = x1 * y2 / x2;\n                    intersectionPoints.right.push({\n                        x: rightX,\n                        y: yScale.invert(prevY + y1),\n                    });\n                }\n                // If values crossed upper edge\n                if ((prevY < topY) === (topY <= currY)) {\n                    x2 = currX - prevX;\n                    y1 = topY - prevY;\n                    y2 = currY - prevY;\n                    x1 = y1 * x2 / y2;\n                    intersectionPoints.top.push({\n                        x: xScale.invert(prevX + x1),\n                        y: topY,\n                    });\n                }\n                // If values crossed lower edge\n                if ((prevY < bottomY) === (bottomY <= currY)) {\n                    x2 = currX - prevX;\n                    y1 = bottomY - prevY;\n                    y2 = currY - prevY;\n                    x1 = y1 * x2 / y2;\n                    intersectionPoints.bottom.push({\n                        x: xScale.invert(prevX + x1),\n                        y: bottomY,\n                    });\n                }\n            }\n            ;\n        });\n        return intersectionPoints;\n    };\n    Line.prototype._getResetYFunction = function () {\n        // gets the y-value generator for the animation start point\n        var yDomain = this.y().scale.domain();\n        var domainMax = Math.max(yDomain[0], yDomain[1]);\n        var domainMin = Math.min(yDomain[0], yDomain[1]);\n        // start from zero, or the closest domain value to zero\n        // avoids lines zooming on from offscreen.\n        var startValue = (domainMax < 0 && domainMax) || (domainMin > 0 && domainMin) || 0;\n        var scaledStartValue = this.y().scale.scale(startValue);\n        return function (d, i, dataset) { return scaledStartValue; };\n    };\n    Line.prototype._generateDrawSteps = function () {\n        var drawSteps = [];\n        if (this._animateOnNextRender()) {\n            var attrToProjector = this._generateAttrToProjector();\n            attrToProjector[\"d\"] = this._constructLineProjector(plot_1.Plot._scaledAccessor(this.x()), this._getResetYFunction());\n            drawSteps.push({ attrToProjector: attrToProjector, animator: this._getAnimator(Plots.Animator.RESET) });\n        }\n        drawSteps.push({\n            attrToProjector: this._generateAttrToProjector(),\n            animator: this._getAnimator(Plots.Animator.MAIN)\n        });\n        return drawSteps;\n    };\n    Line.prototype._generateAttrToProjector = function () {\n        var attrToProjector = _super.prototype._generateAttrToProjector.call(this);\n        Object.keys(attrToProjector).forEach(function (attribute) {\n            if (attribute === \"d\") {\n                return;\n            }\n            var projector = attrToProjector[attribute];\n            attrToProjector[attribute] = function (data, i, dataset) {\n                return data.length > 0 ? projector(data[0], i, dataset) : null;\n            };\n        });\n        return attrToProjector;\n    };\n    Line.prototype.entitiesAt = function (point) {\n        var entity = this.entityNearestByXThenY(point);\n        if (entity != null) {\n            return [entity];\n        }\n        else {\n            return [];\n        }\n    };\n    Line.prototype.entitiesIn = function (xRangeOrBounds, yRange) {\n        var dataXRange;\n        var dataYRange;\n        if (yRange == null) {\n            var bounds = xRangeOrBounds;\n            dataXRange = { min: bounds.topLeft.x, max: bounds.bottomRight.x };\n            dataYRange = { min: bounds.topLeft.y, max: bounds.bottomRight.y };\n        }\n        else {\n            dataXRange = xRangeOrBounds;\n            dataYRange = yRange;\n        }\n        var xProjector = plot_1.Plot._scaledAccessor(this.x());\n        var yProjector = plot_1.Plot._scaledAccessor(this.y());\n        return this.entities().filter(function (entity) {\n            var datum = entity.datum, index = entity.index, dataset = entity.dataset;\n            var x = xProjector(datum, index, dataset);\n            var y = yProjector(datum, index, dataset);\n            return dataXRange.min <= x && x <= dataXRange.max && dataYRange.min <= y && y <= dataYRange.max;\n        });\n    };\n    /**\n     * Returns the PlotEntity nearest to the query point by X then by Y, or undefined if no PlotEntity can be found.\n     *\n     * @param {Point} queryPoint\n     * @returns {PlotEntity} The nearest PlotEntity, or undefined if no PlotEntity can be found.\n     */\n    Line.prototype.entityNearestByXThenY = function (queryPoint) {\n        var _this = this;\n        var minXDist = Infinity;\n        var minYDist = Infinity;\n        var closest;\n        var chartBounds = this.bounds();\n        this.entities().forEach(function (entity) {\n            if (!_this._entityVisibleOnPlot(entity, chartBounds)) {\n                return;\n            }\n            var xDist = Math.abs(queryPoint.x - entity.position.x);\n            var yDist = Math.abs(queryPoint.y - entity.position.y);\n            if (xDist < minXDist || xDist === minXDist && yDist < minYDist) {\n                closest = entity;\n                minXDist = xDist;\n                minYDist = yDist;\n            }\n        });\n        return closest;\n    };\n    Line.prototype._propertyProjectors = function () {\n        var propertyToProjectors = _super.prototype._propertyProjectors.call(this);\n        propertyToProjectors[\"d\"] = this._constructLineProjector(plot_1.Plot._scaledAccessor(this.x()), plot_1.Plot._scaledAccessor(this.y()));\n        return propertyToProjectors;\n    };\n    Line.prototype._constructLineProjector = function (xProjector, yProjector) {\n        var _this = this;\n        var definedProjector = function (d, i, dataset) {\n            var positionX = plot_1.Plot._scaledAccessor(_this.x())(d, i, dataset);\n            var positionY = plot_1.Plot._scaledAccessor(_this.y())(d, i, dataset);\n            return positionX != null && !Utils.Math.isNaN(positionX) &&\n                positionY != null && !Utils.Math.isNaN(positionY);\n        };\n        return function (datum, index, dataset) {\n            return d3.svg.line()\n                .x(function (innerDatum, innerIndex) { return xProjector(innerDatum, innerIndex, dataset); })\n                .y(function (innerDatum, innerIndex) { return yProjector(innerDatum, innerIndex, dataset); })\n                .interpolate(_this.interpolator())\n                .defined(function (innerDatum, innerIndex) { return definedProjector(innerDatum, innerIndex, dataset); })(datum);\n        };\n    };\n    Line.prototype._getDataToDraw = function () {\n        var _this = this;\n        var dataToDraw = new Utils.Map();\n        this.datasets().forEach(function (dataset) {\n            var data = dataset.data();\n            if (!_this._croppedRenderingEnabled && !_this._downsamplingEnabled) {\n                dataToDraw.set(dataset, [data]);\n                return;\n            }\n            var filteredDataIndices = data.map(function (d, i) { return i; });\n            if (_this._croppedRenderingEnabled) {\n                filteredDataIndices = _this._filterCroppedRendering(dataset, filteredDataIndices);\n            }\n            if (_this._downsamplingEnabled) {\n                filteredDataIndices = _this._filterDownsampling(dataset, filteredDataIndices);\n            }\n            dataToDraw.set(dataset, [filteredDataIndices.map(function (d, i) { return data[d]; })]);\n        });\n        return dataToDraw;\n    };\n    Line.prototype._filterCroppedRendering = function (dataset, indices) {\n        var _this = this;\n        var xProjector = plot_1.Plot._scaledAccessor(this.x());\n        var yProjector = plot_1.Plot._scaledAccessor(this.y());\n        var data = dataset.data();\n        var filteredDataIndices = [];\n        var pointInViewport = function (x, y) {\n            return Utils.Math.inRange(x, 0, _this.width()) &&\n                Utils.Math.inRange(y, 0, _this.height());\n        };\n        for (var i = 0; i < indices.length; i++) {\n            var currXPoint = xProjector(data[indices[i]], indices[i], dataset);\n            var currYPoint = yProjector(data[indices[i]], indices[i], dataset);\n            var shouldShow = pointInViewport(currXPoint, currYPoint);\n            if (!shouldShow && indices[i - 1] != null && data[indices[i - 1]] != null) {\n                var prevXPoint = xProjector(data[indices[i - 1]], indices[i - 1], dataset);\n                var prevYPoint = yProjector(data[indices[i - 1]], indices[i - 1], dataset);\n                shouldShow = shouldShow || pointInViewport(prevXPoint, prevYPoint);\n            }\n            if (!shouldShow && indices[i + 1] != null && data[indices[i + 1]] != null) {\n                var nextXPoint = xProjector(data[indices[i + 1]], indices[i + 1], dataset);\n                var nextYPoint = yProjector(data[indices[i + 1]], indices[i + 1], dataset);\n                shouldShow = shouldShow || pointInViewport(nextXPoint, nextYPoint);\n            }\n            if (shouldShow) {\n                filteredDataIndices.push(indices[i]);\n            }\n        }\n        return filteredDataIndices;\n    };\n    Line.prototype._filterDownsampling = function (dataset, indices) {\n        if (indices.length === 0) {\n            return [];\n        }\n        var data = dataset.data();\n        var scaledXAccessor = plot_1.Plot._scaledAccessor(this.x());\n        var scaledYAccessor = plot_1.Plot._scaledAccessor(this.y());\n        var filteredIndices = [indices[0]];\n        var indexOnCurrentSlope = function (i, currentSlope) {\n            var p1x = scaledXAccessor(data[indices[i]], indices[i], dataset);\n            var p1y = scaledYAccessor(data[indices[i]], indices[i], dataset);\n            var p2x = scaledXAccessor(data[indices[i + 1]], indices[i + 1], dataset);\n            var p2y = scaledYAccessor(data[indices[i + 1]], indices[i + 1], dataset);\n            if (currentSlope === Infinity) {\n                return Math.floor(p1x) === Math.floor(p2x);\n            }\n            else {\n                var expectedP2y = p1y + (p2x - p1x) * currentSlope;\n                return Math.floor(p2y) === Math.floor(expectedP2y);\n            }\n        };\n        for (var i = 0; i < indices.length - 1;) {\n            var indexFirst = indices[i];\n            var p1x = scaledXAccessor(data[indices[i]], indices[i], dataset);\n            var p1y = scaledYAccessor(data[indices[i]], indices[i], dataset);\n            var p2x = scaledXAccessor(data[indices[i + 1]], indices[i + 1], dataset);\n            var p2y = scaledYAccessor(data[indices[i + 1]], indices[i + 1], dataset);\n            var currentSlope = (Math.floor(p1x) === Math.floor(p2x)) ? Infinity : (p2y - p1y) / (p2x - p1x);\n            var indexMin = indices[i];\n            var minScaledValue = (currentSlope === Infinity) ? p1y : p1x;\n            var indexMax = indexMin;\n            var maxScaledValue = minScaledValue;\n            var firstIndexOnCurrentSlope = true;\n            while (i < indices.length - 1 && (firstIndexOnCurrentSlope || indexOnCurrentSlope(i, currentSlope))) {\n                i++;\n                firstIndexOnCurrentSlope = false;\n                var currScaledValue = currentSlope === Infinity ? scaledYAccessor(data[indices[i]], indices[i], dataset) :\n                    scaledXAccessor(data[indices[i]], indices[i], dataset);\n                if (currScaledValue > maxScaledValue) {\n                    maxScaledValue = currScaledValue;\n                    indexMax = indices[i];\n                }\n                if (currScaledValue < minScaledValue) {\n                    minScaledValue = currScaledValue;\n                    indexMin = indices[i];\n                }\n            }\n            var indexLast = indices[i];\n            if (indexMin !== indexFirst) {\n                filteredIndices.push(indexMin);\n            }\n            if (indexMax !== indexMin && indexMax !== indexFirst) {\n                filteredIndices.push(indexMax);\n            }\n            if (indexLast !== indexFirst && indexLast !== indexMin && indexLast !== indexMax) {\n                filteredIndices.push(indexLast);\n            }\n        }\n        return filteredIndices;\n    };\n    return Line;\n}(xyPlot_1.XYPlot));\nexports.Line = Line;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/linePlot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/piePlot.js":
/*!***********************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/piePlot.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar SVGTypewriter = __webpack_require__(/*! svg-typewriter */ \"./node_modules/svg-typewriter/build/src/index.js\");\nvar Animators = __webpack_require__(/*! ../animators */ \"./node_modules/plottable/build/src/animators/index.js\");\nvar Drawers = __webpack_require__(/*! ../drawers */ \"./node_modules/plottable/build/src/drawers/index.js\");\nvar Formatters = __webpack_require__(/*! ../core/formatters */ \"./node_modules/plottable/build/src/core/formatters.js\");\nvar Scales = __webpack_require__(/*! ../scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar plot_1 = __webpack_require__(/*! ./plot */ \"./node_modules/plottable/build/src/plots/plot.js\");\nvar Pie = (function (_super) {\n    __extends(Pie, _super);\n    /**\n     * @constructor\n     */\n    function Pie() {\n        var _this = this;\n        _super.call(this);\n        this._startAngle = 0;\n        this._endAngle = 2 * Math.PI;\n        this._labelFormatter = Formatters.identity();\n        this._labelsEnabled = false;\n        this.innerRadius(0);\n        this.outerRadius(function () {\n            var pieCenter = _this._pieCenter();\n            return Math.min(Math.max(_this.width() - pieCenter.x, pieCenter.x), Math.max(_this.height() - pieCenter.y, pieCenter.y));\n        });\n        this.addClass(\"pie-plot\");\n        this.attr(\"fill\", function (d, i) { return String(i); }, new Scales.Color());\n        this._strokeDrawers = new Utils.Map();\n    }\n    Pie.prototype._setup = function () {\n        var _this = this;\n        _super.prototype._setup.call(this);\n        this._strokeDrawers.forEach(function (d) { return d.renderArea(_this._renderArea.append(\"g\")); });\n    };\n    Pie.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\n        var pieCenter = this._pieCenter();\n        this._renderArea.attr(\"transform\", \"translate(\" + pieCenter.x + \",\" + pieCenter.y + \")\");\n        var radiusLimit = Math.min(Math.max(this.width() - pieCenter.x, pieCenter.x), Math.max(this.height() - pieCenter.y, pieCenter.y));\n        if (this.innerRadius().scale != null) {\n            this.innerRadius().scale.range([0, radiusLimit]);\n        }\n        if (this.outerRadius().scale != null) {\n            this.outerRadius().scale.range([0, radiusLimit]);\n        }\n        return this;\n    };\n    Pie.prototype.addDataset = function (dataset) {\n        _super.prototype.addDataset.call(this, dataset);\n        return this;\n    };\n    Pie.prototype._addDataset = function (dataset) {\n        if (this.datasets().length === 1) {\n            Utils.Window.warn(\"Only one dataset is supported in Pie plots\");\n            return this;\n        }\n        this._updatePieAngles();\n        var strokeDrawer = new Drawers.ArcOutline(dataset);\n        if (this._isSetup) {\n            strokeDrawer.renderArea(this._renderArea.append(\"g\"));\n        }\n        this._strokeDrawers.set(dataset, strokeDrawer);\n        _super.prototype._addDataset.call(this, dataset);\n        return this;\n    };\n    Pie.prototype.removeDataset = function (dataset) {\n        _super.prototype.removeDataset.call(this, dataset);\n        return this;\n    };\n    Pie.prototype._removeDatasetNodes = function (dataset) {\n        _super.prototype._removeDatasetNodes.call(this, dataset);\n        this._strokeDrawers.get(dataset).remove();\n    };\n    Pie.prototype._removeDataset = function (dataset) {\n        _super.prototype._removeDataset.call(this, dataset);\n        this._startAngles = [];\n        this._endAngles = [];\n        return this;\n    };\n    Pie.prototype.selections = function (datasets) {\n        var _this = this;\n        if (datasets === void 0) { datasets = this.datasets(); }\n        var allSelections = _super.prototype.selections.call(this, datasets)[0];\n        datasets.forEach(function (dataset) {\n            var drawer = _this._strokeDrawers.get(dataset);\n            if (drawer == null) {\n                return;\n            }\n            drawer.renderArea().selectAll(drawer.selector()).each(function () {\n                allSelections.push(this);\n            });\n        });\n        return d3.selectAll(allSelections);\n    };\n    Pie.prototype._onDatasetUpdate = function () {\n        _super.prototype._onDatasetUpdate.call(this);\n        this._updatePieAngles();\n        this.render();\n    };\n    Pie.prototype._createDrawer = function (dataset) {\n        return new Drawers.Arc(dataset);\n    };\n    Pie.prototype.entities = function (datasets) {\n        var _this = this;\n        if (datasets === void 0) { datasets = this.datasets(); }\n        var entities = _super.prototype.entities.call(this, datasets);\n        entities.forEach(function (entity) {\n            entity.position.x += _this.width() / 2;\n            entity.position.y += _this.height() / 2;\n            var stroke = _this._strokeDrawers.get(entity.dataset).selectionForIndex(entity.index);\n            entity.selection[0].push(stroke[0][0]);\n        });\n        return entities;\n    };\n    Pie.prototype.sectorValue = function (sectorValue, scale) {\n        if (sectorValue == null) {\n            return this._propertyBindings.get(Pie._SECTOR_VALUE_KEY);\n        }\n        this._bindProperty(Pie._SECTOR_VALUE_KEY, sectorValue, scale);\n        this._updatePieAngles();\n        this.render();\n        return this;\n    };\n    Pie.prototype.innerRadius = function (innerRadius, scale) {\n        if (innerRadius == null) {\n            return this._propertyBindings.get(Pie._INNER_RADIUS_KEY);\n        }\n        this._bindProperty(Pie._INNER_RADIUS_KEY, innerRadius, scale);\n        this.render();\n        return this;\n    };\n    Pie.prototype.outerRadius = function (outerRadius, scale) {\n        if (outerRadius == null) {\n            return this._propertyBindings.get(Pie._OUTER_RADIUS_KEY);\n        }\n        this._bindProperty(Pie._OUTER_RADIUS_KEY, outerRadius, scale);\n        this.render();\n        return this;\n    };\n    Pie.prototype.startAngle = function (angle) {\n        if (angle == null) {\n            return this._startAngle;\n        }\n        else {\n            this._startAngle = angle;\n            this._updatePieAngles();\n            this.render();\n            return this;\n        }\n    };\n    Pie.prototype.endAngle = function (angle) {\n        if (angle == null) {\n            return this._endAngle;\n        }\n        else {\n            this._endAngle = angle;\n            this._updatePieAngles();\n            this.render();\n            return this;\n        }\n    };\n    Pie.prototype.labelsEnabled = function (enabled) {\n        if (enabled == null) {\n            return this._labelsEnabled;\n        }\n        else {\n            this._labelsEnabled = enabled;\n            this.render();\n            return this;\n        }\n    };\n    Pie.prototype.labelFormatter = function (formatter) {\n        if (formatter == null) {\n            return this._labelFormatter;\n        }\n        else {\n            this._labelFormatter = formatter;\n            this.render();\n            return this;\n        }\n    };\n    /*\n     * Gets the Entities at a particular Point.\n     *\n     * @param {Point} p\n     * @param {PlotEntity[]}\n     */\n    Pie.prototype.entitiesAt = function (queryPoint) {\n        var center = { x: this.width() / 2, y: this.height() / 2 };\n        var adjustedQueryPoint = { x: queryPoint.x - center.x, y: queryPoint.y - center.y };\n        var index = this._sliceIndexForPoint(adjustedQueryPoint);\n        return index == null ? [] : [this.entities()[index]];\n    };\n    Pie.prototype._propertyProjectors = function () {\n        var _this = this;\n        var attrToProjector = _super.prototype._propertyProjectors.call(this);\n        var innerRadiusAccessor = plot_1.Plot._scaledAccessor(this.innerRadius());\n        var outerRadiusAccessor = plot_1.Plot._scaledAccessor(this.outerRadius());\n        attrToProjector[\"d\"] = function (datum, index, ds) {\n            return d3.svg.arc().innerRadius(innerRadiusAccessor(datum, index, ds))\n                .outerRadius(outerRadiusAccessor(datum, index, ds))\n                .startAngle(_this._startAngles[index])\n                .endAngle(_this._endAngles[index])(datum, index);\n        };\n        return attrToProjector;\n    };\n    Pie.prototype._updatePieAngles = function () {\n        if (this.sectorValue() == null) {\n            return;\n        }\n        if (this.datasets().length === 0) {\n            return;\n        }\n        var sectorValueAccessor = plot_1.Plot._scaledAccessor(this.sectorValue());\n        var dataset = this.datasets()[0];\n        var data = this._getDataToDraw().get(dataset);\n        var pie = d3.layout.pie().sort(null).startAngle(this._startAngle).endAngle(this._endAngle)\n            .value(function (d, i) { return sectorValueAccessor(d, i, dataset); })(data);\n        this._startAngles = pie.map(function (slice) { return slice.startAngle; });\n        this._endAngles = pie.map(function (slice) { return slice.endAngle; });\n    };\n    Pie.prototype._pieCenter = function () {\n        var a = this._startAngle < this._endAngle ? this._startAngle : this._endAngle;\n        var b = this._startAngle < this._endAngle ? this._endAngle : this._startAngle;\n        var sinA = Math.sin(a);\n        var cosA = Math.cos(a);\n        var sinB = Math.sin(b);\n        var cosB = Math.cos(b);\n        var hTop;\n        var hBottom;\n        var wRight;\n        var wLeft;\n        /**\n         *  The center of the pie is computed using the sine and cosine of the start angle and the end angle\n         *  The sine indicates whether the start and end fall on the right half or the left half of the pie\n         *  The cosine indicates whether the start and end fall on the top or the bottom half of the pie\n         *  Different combinations provide the different heights and widths the pie needs from the center to the sides\n         */\n        if (sinA >= 0 && sinB >= 0) {\n            if (cosA >= 0 && cosB >= 0) {\n                hTop = cosA;\n                hBottom = 0;\n                wLeft = 0;\n                wRight = sinB;\n            }\n            else if (cosA < 0 && cosB < 0) {\n                hTop = 0;\n                hBottom = -cosB;\n                wLeft = 0;\n                wRight = sinA;\n            }\n            else if (cosA >= 0 && cosB < 0) {\n                hTop = cosA;\n                hBottom = -cosB;\n                wLeft = 0;\n                wRight = sinA;\n            }\n            else if (cosA < 0 && cosB >= 0) {\n                hTop = 1;\n                hBottom = 1;\n                wLeft = 1;\n                wRight = Math.max(sinA, sinB);\n            }\n        }\n        else if (sinA >= 0 && sinB < 0) {\n            if (cosA >= 0 && cosB >= 0) {\n                hTop = Math.max(cosA, cosB);\n                hBottom = 1;\n                wLeft = 1;\n                wRight = 1;\n            }\n            else if (cosA < 0 && cosB < 0) {\n                hTop = 0;\n                hBottom = 1;\n                wLeft = -sinB;\n                wRight = sinA;\n            }\n            else if (cosA >= 0 && cosB < 0) {\n                hTop = cosA;\n                hBottom = 1;\n                wLeft = -sinB;\n                wRight = 1;\n            }\n            else if (cosA < 0 && cosB >= 0) {\n                hTop = cosB;\n                hBottom = 1;\n                wLeft = 1;\n                wRight = sinA;\n            }\n        }\n        else if (sinA < 0 && sinB >= 0) {\n            if (cosA >= 0 && cosB >= 0) {\n                hTop = 1;\n                hBottom = 0;\n                wLeft = -sinA;\n                wRight = sinB;\n            }\n            else if (cosA < 0 && cosB < 0) {\n                hTop = 1;\n                hBottom = Math.max(-cosA, -cosB);\n                wLeft = 1;\n                wRight = 1;\n            }\n            else if (cosA >= 0 && cosB < 0) {\n                hTop = 1;\n                hBottom = -cosB;\n                wLeft = -sinA;\n                wRight = 1;\n            }\n            else if (cosA < 0 && cosB >= 0) {\n                hTop = 1;\n                hBottom = -cosA;\n                wLeft = 1;\n                wRight = sinB;\n            }\n        }\n        else if (sinA < 0 && sinB < 0) {\n            if (cosA >= 0 && cosB >= 0) {\n                hTop = cosB;\n                hBottom = 0;\n                wLeft = -sinA;\n                wRight = 0;\n            }\n            else if (cosA < 0 && cosB < 0) {\n                hTop = 0;\n                hBottom = -cosA;\n                wLeft = -sinB;\n                wRight = 0;\n            }\n            else if (cosA >= 0 && cosB < 0) {\n                hTop = 1;\n                hBottom = 1;\n                wLeft = Math.max(cosA, -cosB);\n                wRight = 1;\n            }\n            else if (cosA < 0 && cosB >= 0) {\n                hTop = cosB;\n                hBottom = -cosA;\n                wLeft = 1;\n                wRight = 0;\n            }\n        }\n        return {\n            x: wLeft + wRight == 0 ? 0 : (wLeft / (wLeft + wRight)) * this.width(),\n            y: hTop + hBottom == 0 ? 0 : (hTop / (hTop + hBottom)) * this.height()\n        };\n    };\n    Pie.prototype._getDataToDraw = function () {\n        var dataToDraw = _super.prototype._getDataToDraw.call(this);\n        if (this.datasets().length === 0) {\n            return dataToDraw;\n        }\n        var sectorValueAccessor = plot_1.Plot._scaledAccessor(this.sectorValue());\n        var ds = this.datasets()[0];\n        var data = dataToDraw.get(ds);\n        var filteredData = data.filter(function (d, i) { return Pie._isValidData(sectorValueAccessor(d, i, ds)); });\n        dataToDraw.set(ds, filteredData);\n        return dataToDraw;\n    };\n    Pie._isValidData = function (value) {\n        return Utils.Math.isValidNumber(value) && value >= 0;\n    };\n    Pie.prototype._pixelPoint = function (datum, index, dataset) {\n        var scaledValueAccessor = plot_1.Plot._scaledAccessor(this.sectorValue());\n        if (!Pie._isValidData(scaledValueAccessor(datum, index, dataset))) {\n            return { x: NaN, y: NaN };\n        }\n        var innerRadius = plot_1.Plot._scaledAccessor(this.innerRadius())(datum, index, dataset);\n        var outerRadius = plot_1.Plot._scaledAccessor(this.outerRadius())(datum, index, dataset);\n        var avgRadius = (innerRadius + outerRadius) / 2;\n        var pie = d3.layout.pie()\n            .sort(null)\n            .value(function (d, i) {\n            var value = scaledValueAccessor(d, i, dataset);\n            return Pie._isValidData(value) ? value : 0;\n        }).startAngle(this._startAngle).endAngle(this._endAngle)(dataset.data());\n        var startAngle = pie[index].startAngle;\n        var endAngle = pie[index].endAngle;\n        var avgAngle = (startAngle + endAngle) / 2;\n        return { x: avgRadius * Math.sin(avgAngle), y: -avgRadius * Math.cos(avgAngle) };\n    };\n    Pie.prototype._additionalPaint = function (time) {\n        var _this = this;\n        this._renderArea.select(\".label-area\").remove();\n        if (this._labelsEnabled) {\n            Utils.Window.setTimeout(function () { return _this._drawLabels(); }, time);\n        }\n        var drawSteps = this._generateStrokeDrawSteps();\n        var dataToDraw = this._getDataToDraw();\n        this.datasets().forEach(function (dataset) { return _this._strokeDrawers.get(dataset).draw(dataToDraw.get(dataset), drawSteps); });\n    };\n    Pie.prototype._generateStrokeDrawSteps = function () {\n        var attrToProjector = this._generateAttrToProjector();\n        return [{ attrToProjector: attrToProjector, animator: new Animators.Null() }];\n    };\n    Pie.prototype._sliceIndexForPoint = function (p) {\n        var pointRadius = Math.sqrt(Math.pow(p.x, 2) + Math.pow(p.y, 2));\n        var pointAngle = Math.acos(-p.y / pointRadius);\n        if (p.x < 0) {\n            pointAngle = Math.PI * 2 - pointAngle;\n        }\n        var index;\n        for (var i = 0; i < this._startAngles.length; i++) {\n            if (this._startAngles[i] < pointAngle && this._endAngles[i] > pointAngle) {\n                index = i;\n                break;\n            }\n        }\n        if (index !== undefined) {\n            var dataset = this.datasets()[0];\n            var datum = dataset.data()[index];\n            var innerRadius = this.innerRadius().accessor(datum, index, dataset);\n            var outerRadius = this.outerRadius().accessor(datum, index, dataset);\n            if (pointRadius > innerRadius && pointRadius < outerRadius) {\n                return index;\n            }\n        }\n        return null;\n    };\n    Pie.prototype._drawLabels = function () {\n        var _this = this;\n        var attrToProjector = this._generateAttrToProjector();\n        var labelArea = this._renderArea.append(\"g\").classed(\"label-area\", true);\n        var measurer = new SVGTypewriter.CacheMeasurer(labelArea);\n        var writer = new SVGTypewriter.Writer(measurer);\n        var dataset = this.datasets()[0];\n        var data = this._getDataToDraw().get(dataset);\n        data.forEach(function (datum, datumIndex) {\n            var value = _this.sectorValue().accessor(datum, datumIndex, dataset);\n            if (!Utils.Math.isValidNumber(value)) {\n                return;\n            }\n            value = _this._labelFormatter(value);\n            var measurement = measurer.measure(value);\n            var theta = (_this._endAngles[datumIndex] + _this._startAngles[datumIndex]) / 2;\n            var outerRadius = _this.outerRadius().accessor(datum, datumIndex, dataset);\n            if (_this.outerRadius().scale) {\n                outerRadius = _this.outerRadius().scale.scale(outerRadius);\n            }\n            var innerRadius = _this.innerRadius().accessor(datum, datumIndex, dataset);\n            if (_this.innerRadius().scale) {\n                innerRadius = _this.innerRadius().scale.scale(innerRadius);\n            }\n            var labelRadius = (outerRadius + innerRadius) / 2;\n            var x = Math.sin(theta) * labelRadius - measurement.width / 2;\n            var y = -Math.cos(theta) * labelRadius - measurement.height / 2;\n            var corners = [\n                { x: x, y: y },\n                { x: x, y: y + measurement.height },\n                { x: x + measurement.width, y: y },\n                { x: x + measurement.width, y: y + measurement.height },\n            ];\n            var showLabel = corners.every(function (corner) {\n                return Math.abs(corner.x) <= _this.width() / 2 && Math.abs(corner.y) <= _this.height() / 2;\n            });\n            if (showLabel) {\n                var sliceIndices = corners.map(function (corner) { return _this._sliceIndexForPoint(corner); });\n                showLabel = sliceIndices.every(function (index) { return index === datumIndex; });\n            }\n            var color = attrToProjector[\"fill\"](datum, datumIndex, dataset);\n            var dark = Utils.Color.contrast(\"white\", color) * 1.6 < Utils.Color.contrast(\"black\", color);\n            var g = labelArea.append(\"g\").attr(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n            var className = dark ? \"dark-label\" : \"light-label\";\n            g.classed(className, true);\n            g.style(\"visibility\", showLabel ? \"inherit\" : \"hidden\");\n            writer.write(value, measurement.width, measurement.height, {\n                selection: g,\n                xAlign: \"center\",\n                yAlign: \"center\",\n                textRotation: 0,\n            });\n        });\n    };\n    Pie._INNER_RADIUS_KEY = \"inner-radius\";\n    Pie._OUTER_RADIUS_KEY = \"outer-radius\";\n    Pie._SECTOR_VALUE_KEY = \"sector-value\";\n    return Pie;\n}(plot_1.Plot));\nexports.Pie = Pie;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/piePlot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/plot.js":
/*!********************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/plot.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Animators = __webpack_require__(/*! ../animators */ \"./node_modules/plottable/build/src/animators/index.js\");\nvar component_1 = __webpack_require__(/*! ../components/component */ \"./node_modules/plottable/build/src/components/component.js\");\nvar drawer_1 = __webpack_require__(/*! ../drawers/drawer */ \"./node_modules/plottable/build/src/drawers/drawer.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Plots = __webpack_require__(/*! ./commons */ \"./node_modules/plottable/build/src/plots/commons.js\");\nvar Plot = (function (_super) {\n    __extends(Plot, _super);\n    /**\n     * A Plot draws some visualization of the inputted Datasets.\n     *\n     * @constructor\n     */\n    function Plot() {\n        var _this = this;\n        _super.call(this);\n        this._dataChanged = false;\n        this._animate = false;\n        this._animators = {};\n        this._clipPathEnabled = true;\n        this.addClass(\"plot\");\n        this._datasetToDrawer = new Utils.Map();\n        this._attrBindings = d3.map();\n        this._attrExtents = d3.map();\n        this._includedValuesProvider = function (scale) { return _this._includedValuesForScale(scale); };\n        this._renderCallback = function (scale) { return _this.render(); };\n        this._onDatasetUpdateCallback = function () { return _this._onDatasetUpdate(); };\n        this._propertyBindings = d3.map();\n        this._propertyExtents = d3.map();\n        var mainAnimator = new Animators.Easing().maxTotalDuration(Plot._ANIMATION_MAX_DURATION);\n        this.animator(Plots.Animator.MAIN, mainAnimator);\n        this.animator(Plots.Animator.RESET, new Animators.Null());\n    }\n    Plot.prototype.anchor = function (selection) {\n        _super.prototype.anchor.call(this, selection);\n        this._dataChanged = true;\n        this._cachedEntityStore = undefined;\n        this._updateExtents();\n        return this;\n    };\n    Plot.prototype._setup = function () {\n        var _this = this;\n        _super.prototype._setup.call(this);\n        this._renderArea = this.content().append(\"g\").classed(\"render-area\", true);\n        this.datasets().forEach(function (dataset) { return _this._createNodesForDataset(dataset); });\n    };\n    Plot.prototype.destroy = function () {\n        var _this = this;\n        _super.prototype.destroy.call(this);\n        this._scales().forEach(function (scale) { return scale.offUpdate(_this._renderCallback); });\n        this.datasets([]);\n    };\n    Plot.prototype._createNodesForDataset = function (dataset) {\n        var drawer = this._datasetToDrawer.get(dataset);\n        drawer.renderArea(this._renderArea.append(\"g\"));\n        return drawer;\n    };\n    Plot.prototype._createDrawer = function (dataset) {\n        return new drawer_1.Drawer(dataset);\n    };\n    Plot.prototype._getAnimator = function (key) {\n        if (this._animateOnNextRender()) {\n            return this._animators[key] || new Animators.Null();\n        }\n        else {\n            return new Animators.Null();\n        }\n    };\n    Plot.prototype._onDatasetUpdate = function () {\n        this._updateExtents();\n        this._dataChanged = true;\n        this._cachedEntityStore = undefined;\n        this.render();\n    };\n    Plot.prototype.attr = function (attr, attrValue, scale) {\n        if (attrValue == null) {\n            return this._attrBindings.get(attr);\n        }\n        this._bindAttr(attr, attrValue, scale);\n        this.render(); // queue a re-render upon changing projector\n        return this;\n    };\n    Plot.prototype._bindProperty = function (property, value, scale) {\n        var binding = this._propertyBindings.get(property);\n        var oldScale = binding != null ? binding.scale : null;\n        this._propertyBindings.set(property, { accessor: d3.functor(value), scale: scale });\n        this._updateExtentsForProperty(property);\n        if (oldScale != null) {\n            this._uninstallScaleForKey(oldScale, property);\n        }\n        if (scale != null) {\n            this._installScaleForKey(scale, property);\n        }\n    };\n    Plot.prototype._bindAttr = function (attr, value, scale) {\n        var binding = this._attrBindings.get(attr);\n        var oldScale = binding != null ? binding.scale : null;\n        this._attrBindings.set(attr, { accessor: d3.functor(value), scale: scale });\n        this._updateExtentsForAttr(attr);\n        if (oldScale != null) {\n            this._uninstallScaleForKey(oldScale, attr);\n        }\n        if (scale != null) {\n            this._installScaleForKey(scale, attr);\n        }\n    };\n    Plot.prototype._generateAttrToProjector = function () {\n        var h = {};\n        this._attrBindings.forEach(function (attr, binding) {\n            var accessor = binding.accessor;\n            var scale = binding.scale;\n            var fn = scale ? function (d, i, dataset) { return scale.scale(accessor(d, i, dataset)); } : accessor;\n            h[attr] = fn;\n        });\n        var propertyProjectors = this._propertyProjectors();\n        Object.keys(propertyProjectors).forEach(function (key) {\n            if (h[key] == null) {\n                h[key] = propertyProjectors[key];\n            }\n        });\n        return h;\n    };\n    Plot.prototype.renderImmediately = function () {\n        _super.prototype.renderImmediately.call(this);\n        if (this._isAnchored) {\n            this._paint();\n            this._dataChanged = false;\n        }\n        return this;\n    };\n    Plot.prototype.animated = function (willAnimate) {\n        if (willAnimate == null) {\n            return this._animate;\n        }\n        this._animate = willAnimate;\n        return this;\n    };\n    Plot.prototype.detach = function () {\n        _super.prototype.detach.call(this);\n        // make the domain resize\n        this._updateExtents();\n        return this;\n    };\n    /**\n     * @returns {Scale[]} A unique array of all scales currently used by the Plot.\n     */\n    Plot.prototype._scales = function () {\n        var scales = [];\n        this._attrBindings.forEach(function (attr, binding) {\n            var scale = binding.scale;\n            if (scale != null && scales.indexOf(scale) === -1) {\n                scales.push(scale);\n            }\n        });\n        this._propertyBindings.forEach(function (property, binding) {\n            var scale = binding.scale;\n            if (scale != null && scales.indexOf(scale) === -1) {\n                scales.push(scale);\n            }\n        });\n        return scales;\n    };\n    /**\n     * Updates the extents associated with each attribute, then autodomains all scales the Plot uses.\n     */\n    Plot.prototype._updateExtents = function () {\n        var _this = this;\n        this._attrBindings.forEach(function (attr) { return _this._updateExtentsForAttr(attr); });\n        this._propertyExtents.forEach(function (property) { return _this._updateExtentsForProperty(property); });\n        this._scales().forEach(function (scale) { return scale.addIncludedValuesProvider(_this._includedValuesProvider); });\n    };\n    Plot.prototype._updateExtentsForAttr = function (attr) {\n        // Filters should never be applied to attributes\n        this._updateExtentsForKey(attr, this._attrBindings, this._attrExtents, null);\n    };\n    Plot.prototype._updateExtentsForProperty = function (property) {\n        this._updateExtentsForKey(property, this._propertyBindings, this._propertyExtents, this._filterForProperty(property));\n    };\n    Plot.prototype._filterForProperty = function (property) {\n        return null;\n    };\n    Plot.prototype._updateExtentsForKey = function (key, bindings, extents, filter) {\n        var _this = this;\n        var accScaleBinding = bindings.get(key);\n        if (accScaleBinding == null || accScaleBinding.accessor == null) {\n            return;\n        }\n        extents.set(key, this.datasets().map(function (dataset) { return _this._computeExtent(dataset, accScaleBinding, filter); }));\n    };\n    Plot.prototype._computeExtent = function (dataset, accScaleBinding, filter) {\n        var accessor = accScaleBinding.accessor;\n        var scale = accScaleBinding.scale;\n        if (scale == null) {\n            return [];\n        }\n        var data = dataset.data();\n        if (filter != null) {\n            data = data.filter(function (d, i) { return filter(d, i, dataset); });\n        }\n        var appliedAccessor = function (d, i) { return accessor(d, i, dataset); };\n        var mappedData = data.map(appliedAccessor);\n        return scale.extentOfValues(mappedData);\n    };\n    /**\n     * Override in subclass to add special extents, such as included values\n     */\n    Plot.prototype._extentsForProperty = function (property) {\n        return this._propertyExtents.get(property);\n    };\n    Plot.prototype._includedValuesForScale = function (scale) {\n        var _this = this;\n        if (!this._isAnchored) {\n            return [];\n        }\n        var includedValues = [];\n        this._attrBindings.forEach(function (attr, binding) {\n            if (binding.scale === scale) {\n                var extents = _this._attrExtents.get(attr);\n                if (extents != null) {\n                    includedValues = includedValues.concat(d3.merge(extents));\n                }\n            }\n        });\n        this._propertyBindings.forEach(function (property, binding) {\n            if (binding.scale === scale) {\n                var extents = _this._extentsForProperty(property);\n                if (extents != null) {\n                    includedValues = includedValues.concat(d3.merge(extents));\n                }\n            }\n        });\n        return includedValues;\n    };\n    Plot.prototype.animator = function (animatorKey, animator) {\n        if (animator === undefined) {\n            return this._animators[animatorKey];\n        }\n        else {\n            this._animators[animatorKey] = animator;\n            return this;\n        }\n    };\n    /**\n     * Adds a Dataset to the Plot.\n     *\n     * @param {Dataset} dataset\n     * @returns {Plot} The calling Plot.\n     */\n    Plot.prototype.addDataset = function (dataset) {\n        this._addDataset(dataset);\n        this._onDatasetUpdate();\n        return this;\n    };\n    Plot.prototype._addDataset = function (dataset) {\n        this._removeDataset(dataset);\n        var drawer = this._createDrawer(dataset);\n        this._datasetToDrawer.set(dataset, drawer);\n        if (this._isSetup) {\n            this._createNodesForDataset(dataset);\n        }\n        dataset.onUpdate(this._onDatasetUpdateCallback);\n        return this;\n    };\n    /**\n     * Removes a Dataset from the Plot.\n     *\n     * @param {Dataset} dataset\n     * @returns {Plot} The calling Plot.\n     */\n    Plot.prototype.removeDataset = function (dataset) {\n        this._removeDataset(dataset);\n        this._onDatasetUpdate();\n        return this;\n    };\n    Plot.prototype._removeDataset = function (dataset) {\n        if (this.datasets().indexOf(dataset) === -1) {\n            return this;\n        }\n        this._removeDatasetNodes(dataset);\n        dataset.offUpdate(this._onDatasetUpdateCallback);\n        this._datasetToDrawer.delete(dataset);\n        return this;\n    };\n    Plot.prototype._removeDatasetNodes = function (dataset) {\n        var drawer = this._datasetToDrawer.get(dataset);\n        drawer.remove();\n    };\n    Plot.prototype.datasets = function (datasets) {\n        var _this = this;\n        var currentDatasets = [];\n        this._datasetToDrawer.forEach(function (drawer, dataset) { return currentDatasets.push(dataset); });\n        if (datasets == null) {\n            return currentDatasets;\n        }\n        currentDatasets.forEach(function (dataset) { return _this._removeDataset(dataset); });\n        datasets.forEach(function (dataset) { return _this._addDataset(dataset); });\n        this._onDatasetUpdate();\n        return this;\n    };\n    Plot.prototype._getDrawersInOrder = function () {\n        var _this = this;\n        return this.datasets().map(function (dataset) { return _this._datasetToDrawer.get(dataset); });\n    };\n    Plot.prototype._generateDrawSteps = function () {\n        return [{ attrToProjector: this._generateAttrToProjector(), animator: new Animators.Null() }];\n    };\n    Plot.prototype._additionalPaint = function (time) {\n        // no-op\n    };\n    /**\n     * _buildLightweightPlotEntities constucts {LightweightPlotEntity[]} from\n     * all the entities in the plot\n     * @param {Dataset[]} [datasets] - datasets comprising this plot\n     */\n    Plot.prototype._buildLightweightPlotEntities = function (datasets) {\n        var _this = this;\n        var lightweightPlotEntities = [];\n        datasets.forEach(function (dataset, datasetIndex) {\n            var drawer = _this._datasetToDrawer.get(dataset);\n            var validDatumIndex = 0;\n            dataset.data().forEach(function (datum, datumIndex) {\n                var position = _this._pixelPoint(datum, datumIndex, dataset);\n                if (Utils.Math.isNaN(position.x) || Utils.Math.isNaN(position.y)) {\n                    return;\n                }\n                lightweightPlotEntities.push({\n                    datum: datum,\n                    position: position,\n                    index: datumIndex,\n                    dataset: dataset,\n                    datasetIndex: datasetIndex,\n                    component: _this,\n                    drawer: drawer,\n                    validDatumIndex: validDatumIndex,\n                });\n                validDatumIndex++;\n            });\n        });\n        return lightweightPlotEntities;\n    };\n    Plot.prototype._getDataToDraw = function () {\n        var dataToDraw = new Utils.Map();\n        this.datasets().forEach(function (dataset) { return dataToDraw.set(dataset, dataset.data()); });\n        return dataToDraw;\n    };\n    Plot.prototype._paint = function () {\n        var drawSteps = this._generateDrawSteps();\n        var dataToDraw = this._getDataToDraw();\n        var drawers = this._getDrawersInOrder();\n        this.datasets().forEach(function (ds, i) { return drawers[i].draw(dataToDraw.get(ds), drawSteps); });\n        var times = this.datasets().map(function (ds, i) { return drawers[i].totalDrawTime(dataToDraw.get(ds), drawSteps); });\n        var maxTime = Utils.Math.max(times, 0);\n        this._additionalPaint(maxTime);\n    };\n    /**\n     * Retrieves Selections of this Plot for the specified Datasets.\n     *\n     * @param {Dataset[]} [datasets] The Datasets to retrieve the Selections for.\n     *   If not provided, Selections will be retrieved for all Datasets on the Plot.\n     * @returns {d3.Selection}\n     */\n    Plot.prototype.selections = function (datasets) {\n        var _this = this;\n        if (datasets === void 0) { datasets = this.datasets(); }\n        var selections = [];\n        datasets.forEach(function (dataset) {\n            var drawer = _this._datasetToDrawer.get(dataset);\n            if (drawer == null) {\n                return;\n            }\n            drawer.renderArea().selectAll(drawer.selector()).each(function () {\n                selections.push(this);\n            });\n        });\n        return d3.selectAll(selections);\n    };\n    /**\n     * Gets the Entities associated with the specified Datasets.\n     *\n     * @param {Dataset[]} datasets The Datasets to retrieve the Entities for.\n     *   If not provided, returns defaults to all Datasets on the Plot.\n     * @return {Plots.PlotEntity[]}\n     */\n    Plot.prototype.entities = function (datasets) {\n        var _this = this;\n        return this._getEntityStore(datasets).map(function (entity) { return _this._lightweightPlotEntityToPlotEntity(entity); });\n    };\n    /**\n     * _getEntityStore returns the store of all Entities associated with the specified dataset\n     *\n     * @param {Dataset[]} [datasets] - The datasets with which to construct the store. If no datasets\n     * are specified all datasets will be used.\n     */\n    Plot.prototype._getEntityStore = function (datasets) {\n        var _this = this;\n        if (datasets !== undefined) {\n            var EntityStore_1 = new Utils.EntityArray();\n            this._buildLightweightPlotEntities(datasets).forEach(function (entity) {\n                EntityStore_1.add(entity);\n            });\n            return EntityStore_1;\n        }\n        else if (this._cachedEntityStore === undefined) {\n            this._cachedEntityStore = new Utils.EntityArray();\n            this._buildLightweightPlotEntities(this.datasets()).forEach(function (entity) {\n                _this._cachedEntityStore.add(entity);\n            });\n        }\n        return this._cachedEntityStore;\n    };\n    Plot.prototype._lightweightPlotEntityToPlotEntity = function (entity) {\n        var plotEntity = {\n            datum: entity.datum,\n            position: this._pixelPoint(entity.datum, entity.index, entity.dataset),\n            dataset: entity.dataset,\n            datasetIndex: entity.datasetIndex,\n            index: entity.index,\n            component: entity.component,\n            selection: entity.drawer.selectionForIndex(entity.validDatumIndex),\n        };\n        return plotEntity;\n    };\n    /**\n     * Gets the PlotEntities at a particular Point.\n     *\n     * Each plot type determines how to locate entities at or near the query\n     * point. For example, line and area charts will return the nearest entity,\n     * but bar charts will only return the entities that fully contain the query\n     * point.\n     *\n     * @param {Point} point The point to query.\n     * @returns {PlotEntity[]} The PlotEntities at the particular point\n     */\n    Plot.prototype.entitiesAt = function (point) {\n        throw new Error(\"plots must implement entitiesAt\");\n    };\n    /**\n     * Returns the {Plots.PlotEntity} nearest to the query point,\n     * or undefined if no {Plots.PlotEntity} can be found.\n     *\n     * @param {Point} queryPoint\n     * @param {bounds} Bounds The bounding box within which to search. By default, bounds is the bounds of\n     * the chart, relative to the parent.\n     * @returns {Plots.PlotEntity} The nearest PlotEntity, or undefined if no {Plots.PlotEntity} can be found.\n     */\n    Plot.prototype.entityNearest = function (queryPoint, bounds) {\n        var _this = this;\n        if (bounds === void 0) { bounds = this.bounds(); }\n        var nearest = this._getEntityStore().entityNearest(queryPoint, function (entity) {\n            return _this._entityVisibleOnPlot(entity, bounds);\n        });\n        return nearest === undefined ? undefined : this._lightweightPlotEntityToPlotEntity(nearest);\n    };\n    Plot.prototype._entityVisibleOnPlot = function (entity, chartBounds) {\n        return !(entity.position.x < chartBounds.topLeft.x || entity.position.y < chartBounds.topLeft.y ||\n            entity.position.x > chartBounds.bottomRight.x || entity.position.y > chartBounds.bottomRight.y);\n    };\n    Plot.prototype._uninstallScaleForKey = function (scale, key) {\n        scale.offUpdate(this._renderCallback);\n        scale.removeIncludedValuesProvider(this._includedValuesProvider);\n    };\n    Plot.prototype._installScaleForKey = function (scale, key) {\n        scale.onUpdate(this._renderCallback);\n        scale.addIncludedValuesProvider(this._includedValuesProvider);\n    };\n    Plot.prototype._propertyProjectors = function () {\n        return {};\n    };\n    Plot._scaledAccessor = function (binding) {\n        return binding.scale == null ?\n            binding.accessor :\n            function (d, i, ds) { return binding.scale.scale(binding.accessor(d, i, ds)); };\n    };\n    Plot.prototype._pixelPoint = function (datum, index, dataset) {\n        return { x: 0, y: 0 };\n    };\n    Plot.prototype._animateOnNextRender = function () {\n        return this._animate && this._dataChanged;\n    };\n    Plot._ANIMATION_MAX_DURATION = 600;\n    return Plot;\n}(component_1.Component));\nexports.Plot = Plot;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/plot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/rectanglePlot.js":
/*!*****************************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/rectanglePlot.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar SVGTypewriter = __webpack_require__(/*! svg-typewriter */ \"./node_modules/svg-typewriter/build/src/index.js\");\nvar Animators = __webpack_require__(/*! ../animators */ \"./node_modules/plottable/build/src/animators/index.js\");\nvar Drawers = __webpack_require__(/*! ../drawers */ \"./node_modules/plottable/build/src/drawers/index.js\");\nvar Scales = __webpack_require__(/*! ../scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar plot_1 = __webpack_require__(/*! ./plot */ \"./node_modules/plottable/build/src/plots/plot.js\");\nvar xyPlot_1 = __webpack_require__(/*! ./xyPlot */ \"./node_modules/plottable/build/src/plots/xyPlot.js\");\nvar Rectangle = (function (_super) {\n    __extends(Rectangle, _super);\n    /**\n     * A Rectangle Plot displays rectangles based on the data.\n     * The left and right edges of each rectangle can be set with x() and x2().\n     *   If only x() is set the Rectangle Plot will attempt to compute the correct left and right edge positions.\n     * The top and bottom edges of each rectangle can be set with y() and y2().\n     *   If only y() is set the Rectangle Plot will attempt to compute the correct top and bottom edge positions.\n     *\n     * @constructor\n     * @param {Scale.Scale} xScale\n     * @param {Scale.Scale} yScale\n     */\n    function Rectangle() {\n        _super.call(this);\n        this._labelsEnabled = false;\n        this._label = null;\n        this.animator(\"rectangles\", new Animators.Null());\n        this.addClass(\"rectangle-plot\");\n        this.attr(\"fill\", new Scales.Color().range()[0]);\n    }\n    Rectangle.prototype._createDrawer = function (dataset) {\n        return new Drawers.Rectangle(dataset);\n    };\n    Rectangle.prototype._generateAttrToProjector = function () {\n        var _this = this;\n        var attrToProjector = _super.prototype._generateAttrToProjector.call(this);\n        // Copy each of the different projectors.\n        var xAttr = plot_1.Plot._scaledAccessor(this.x());\n        var x2Attr = attrToProjector[Rectangle._X2_KEY];\n        var yAttr = plot_1.Plot._scaledAccessor(this.y());\n        var y2Attr = attrToProjector[Rectangle._Y2_KEY];\n        var xScale = this.x().scale;\n        var yScale = this.y().scale;\n        if (x2Attr != null) {\n            attrToProjector[\"width\"] = function (d, i, dataset) { return Math.abs(x2Attr(d, i, dataset) - xAttr(d, i, dataset)); };\n            attrToProjector[\"x\"] = function (d, i, dataset) { return Math.min(x2Attr(d, i, dataset), xAttr(d, i, dataset)); };\n        }\n        else {\n            attrToProjector[\"width\"] = function (d, i, dataset) { return _this._rectangleWidth(xScale); };\n            attrToProjector[\"x\"] = function (d, i, dataset) { return xAttr(d, i, dataset) - 0.5 * attrToProjector[\"width\"](d, i, dataset); };\n        }\n        if (y2Attr != null) {\n            attrToProjector[\"height\"] = function (d, i, dataset) { return Math.abs(y2Attr(d, i, dataset) - yAttr(d, i, dataset)); };\n            attrToProjector[\"y\"] = function (d, i, dataset) {\n                return Math.max(y2Attr(d, i, dataset), yAttr(d, i, dataset)) - attrToProjector[\"height\"](d, i, dataset);\n            };\n        }\n        else {\n            attrToProjector[\"height\"] = function (d, i, dataset) { return _this._rectangleWidth(yScale); };\n            attrToProjector[\"y\"] = function (d, i, dataset) { return yAttr(d, i, dataset) - 0.5 * attrToProjector[\"height\"](d, i, dataset); };\n        }\n        // Clean up the attributes projected onto the SVG elements\n        delete attrToProjector[Rectangle._X2_KEY];\n        delete attrToProjector[Rectangle._Y2_KEY];\n        return attrToProjector;\n    };\n    Rectangle.prototype._generateDrawSteps = function () {\n        return [{ attrToProjector: this._generateAttrToProjector(), animator: this._getAnimator(\"rectangles\") }];\n    };\n    Rectangle.prototype._updateExtentsForProperty = function (property) {\n        _super.prototype._updateExtentsForProperty.call(this, property);\n        if (property === \"x\") {\n            _super.prototype._updateExtentsForProperty.call(this, \"x2\");\n        }\n        else if (property === \"y\") {\n            _super.prototype._updateExtentsForProperty.call(this, \"y2\");\n        }\n    };\n    Rectangle.prototype._filterForProperty = function (property) {\n        if (property === \"x2\") {\n            return _super.prototype._filterForProperty.call(this, \"x\");\n        }\n        else if (property === \"y2\") {\n            return _super.prototype._filterForProperty.call(this, \"y\");\n        }\n        return _super.prototype._filterForProperty.call(this, property);\n    };\n    Rectangle.prototype.x = function (x, xScale) {\n        if (x == null) {\n            return _super.prototype.x.call(this);\n        }\n        if (xScale == null) {\n            _super.prototype.x.call(this, x);\n        }\n        else {\n            _super.prototype.x.call(this, x, xScale);\n        }\n        if (xScale != null) {\n            var x2Binding = this.x2();\n            var x2 = x2Binding && x2Binding.accessor;\n            if (x2 != null) {\n                this._bindProperty(Rectangle._X2_KEY, x2, xScale);\n            }\n        }\n        // The x and y scales should render in bands with no padding for category scales\n        if (xScale instanceof Scales.Category) {\n            xScale.innerPadding(0).outerPadding(0);\n        }\n        return this;\n    };\n    Rectangle.prototype.x2 = function (x2) {\n        if (x2 == null) {\n            return this._propertyBindings.get(Rectangle._X2_KEY);\n        }\n        var xBinding = this.x();\n        var xScale = xBinding && xBinding.scale;\n        this._bindProperty(Rectangle._X2_KEY, x2, xScale);\n        this.render();\n        return this;\n    };\n    Rectangle.prototype.y = function (y, yScale) {\n        if (y == null) {\n            return _super.prototype.y.call(this);\n        }\n        if (yScale == null) {\n            _super.prototype.y.call(this, y);\n        }\n        else {\n            _super.prototype.y.call(this, y, yScale);\n        }\n        if (yScale != null) {\n            var y2Binding = this.y2();\n            var y2 = y2Binding && y2Binding.accessor;\n            if (y2 != null) {\n                this._bindProperty(Rectangle._Y2_KEY, y2, yScale);\n            }\n        }\n        // The x and y scales should render in bands with no padding for category scales\n        if (yScale instanceof Scales.Category) {\n            yScale.innerPadding(0).outerPadding(0);\n        }\n        return this;\n    };\n    Rectangle.prototype.y2 = function (y2) {\n        if (y2 == null) {\n            return this._propertyBindings.get(Rectangle._Y2_KEY);\n        }\n        var yBinding = this.y();\n        var yScale = yBinding && yBinding.scale;\n        this._bindProperty(Rectangle._Y2_KEY, y2, yScale);\n        this.render();\n        return this;\n    };\n    /**\n     * Gets the PlotEntities at a particular Point.\n     *\n     * @param {Point} point The point to query.\n     * @returns {PlotEntity[]} The PlotEntities at the particular point\n     */\n    Rectangle.prototype.entitiesAt = function (point) {\n        var attrToProjector = this._generateAttrToProjector();\n        return this.entities().filter(function (entity) {\n            var datum = entity.datum;\n            var index = entity.index;\n            var dataset = entity.dataset;\n            var x = attrToProjector[\"x\"](datum, index, dataset);\n            var y = attrToProjector[\"y\"](datum, index, dataset);\n            var width = attrToProjector[\"width\"](datum, index, dataset);\n            var height = attrToProjector[\"height\"](datum, index, dataset);\n            return x <= point.x && point.x <= x + width && y <= point.y && point.y <= y + height;\n        });\n    };\n    Rectangle.prototype.entitiesIn = function (xRangeOrBounds, yRange) {\n        var dataXRange;\n        var dataYRange;\n        if (yRange == null) {\n            var bounds = xRangeOrBounds;\n            dataXRange = { min: bounds.topLeft.x, max: bounds.bottomRight.x };\n            dataYRange = { min: bounds.topLeft.y, max: bounds.bottomRight.y };\n        }\n        else {\n            dataXRange = xRangeOrBounds;\n            dataYRange = yRange;\n        }\n        return this._entitiesIntersecting(dataXRange, dataYRange);\n    };\n    Rectangle.prototype._entityBBox = function (datum, index, dataset, attrToProjector) {\n        return {\n            x: attrToProjector[\"x\"](datum, index, dataset),\n            y: attrToProjector[\"y\"](datum, index, dataset),\n            width: attrToProjector[\"width\"](datum, index, dataset),\n            height: attrToProjector[\"height\"](datum, index, dataset),\n        };\n    };\n    Rectangle.prototype._entitiesIntersecting = function (xValOrRange, yValOrRange) {\n        var _this = this;\n        var intersected = [];\n        var attrToProjector = this._generateAttrToProjector();\n        this.entities().forEach(function (entity) {\n            if (Utils.DOM.intersectsBBox(xValOrRange, yValOrRange, _this._entityBBox(entity.datum, entity.index, entity.dataset, attrToProjector))) {\n                intersected.push(entity);\n            }\n        });\n        return intersected;\n    };\n    Rectangle.prototype.label = function (label) {\n        if (label == null) {\n            return this._label;\n        }\n        this._label = label;\n        this.render();\n        return this;\n    };\n    Rectangle.prototype.labelsEnabled = function (enabled) {\n        if (enabled == null) {\n            return this._labelsEnabled;\n        }\n        else {\n            this._labelsEnabled = enabled;\n            this.render();\n            return this;\n        }\n    };\n    Rectangle.prototype._propertyProjectors = function () {\n        var attrToProjector = _super.prototype._propertyProjectors.call(this);\n        if (this.x2() != null) {\n            attrToProjector[\"x2\"] = plot_1.Plot._scaledAccessor(this.x2());\n        }\n        if (this.y2() != null) {\n            attrToProjector[\"y2\"] = plot_1.Plot._scaledAccessor(this.y2());\n        }\n        return attrToProjector;\n    };\n    Rectangle.prototype._pixelPoint = function (datum, index, dataset) {\n        var attrToProjector = this._generateAttrToProjector();\n        var rectX = attrToProjector[\"x\"](datum, index, dataset);\n        var rectY = attrToProjector[\"y\"](datum, index, dataset);\n        var rectWidth = attrToProjector[\"width\"](datum, index, dataset);\n        var rectHeight = attrToProjector[\"height\"](datum, index, dataset);\n        var x = rectX + rectWidth / 2;\n        var y = rectY + rectHeight / 2;\n        return { x: x, y: y };\n    };\n    Rectangle.prototype._rectangleWidth = function (scale) {\n        if (scale instanceof Scales.Category) {\n            return scale.rangeBand();\n        }\n        else {\n            var accessor_1 = scale === this.x().scale ? this.x().accessor : this.y().accessor;\n            var accessorData = d3.set(Utils.Array.flatten(this.datasets().map(function (dataset) {\n                return dataset.data().map(function (d, i) { return accessor_1(d, i, dataset).valueOf(); });\n            }))).values().map(function (value) { return +value; });\n            // Get the absolute difference between min and max\n            var min = Utils.Math.min(accessorData, 0);\n            var max = Utils.Math.max(accessorData, 0);\n            var scaledMin = scale.scale(min);\n            var scaledMax = scale.scale(max);\n            return (scaledMax - scaledMin) / Math.abs(max - min);\n        }\n    };\n    Rectangle.prototype._getDataToDraw = function () {\n        var dataToDraw = new Utils.Map();\n        var attrToProjector = this._generateAttrToProjector();\n        this.datasets().forEach(function (dataset) {\n            var data = dataset.data().filter(function (d, i) { return Utils.Math.isValidNumber(attrToProjector[\"x\"](d, i, dataset)) &&\n                Utils.Math.isValidNumber(attrToProjector[\"y\"](d, i, dataset)) &&\n                Utils.Math.isValidNumber(attrToProjector[\"width\"](d, i, dataset)) &&\n                Utils.Math.isValidNumber(attrToProjector[\"height\"](d, i, dataset)); });\n            dataToDraw.set(dataset, data);\n        });\n        return dataToDraw;\n    };\n    Rectangle.prototype._additionalPaint = function (time) {\n        var _this = this;\n        this._renderArea.selectAll(\".label-area\").remove();\n        if (this._labelsEnabled && this.label() != null) {\n            Utils.Window.setTimeout(function () { return _this._drawLabels(); }, time);\n        }\n    };\n    Rectangle.prototype._drawLabels = function () {\n        var _this = this;\n        var dataToDraw = this._getDataToDraw();\n        this.datasets().forEach(function (dataset, i) { return _this._drawLabel(dataToDraw, dataset, i); });\n    };\n    Rectangle.prototype._drawLabel = function (dataToDraw, dataset, datasetIndex) {\n        var _this = this;\n        var attrToProjector = this._generateAttrToProjector();\n        var labelArea = this._renderArea.append(\"g\").classed(\"label-area\", true);\n        var measurer = new SVGTypewriter.CacheMeasurer(labelArea);\n        var writer = new SVGTypewriter.Writer(measurer);\n        var xRange = this.x().scale.range();\n        var yRange = this.y().scale.range();\n        var xMin = Math.min.apply(null, xRange);\n        var xMax = Math.max.apply(null, xRange);\n        var yMin = Math.min.apply(null, yRange);\n        var yMax = Math.max.apply(null, yRange);\n        var data = dataToDraw.get(dataset);\n        data.forEach(function (datum, datumIndex) {\n            var label = \"\" + _this.label()(datum, datumIndex, dataset);\n            var measurement = measurer.measure(label);\n            var x = attrToProjector[\"x\"](datum, datumIndex, dataset);\n            var y = attrToProjector[\"y\"](datum, datumIndex, dataset);\n            var width = attrToProjector[\"width\"](datum, datumIndex, dataset);\n            var height = attrToProjector[\"height\"](datum, datumIndex, dataset);\n            if (measurement.height <= height && measurement.width <= width) {\n                var horizontalOffset = (width - measurement.width) / 2;\n                var verticalOffset = (height - measurement.height) / 2;\n                x += horizontalOffset;\n                y += verticalOffset;\n                var xLabelRange = { min: x, max: x + measurement.width };\n                var yLabelRange = { min: y, max: y + measurement.height };\n                if (xLabelRange.min < xMin || xLabelRange.max > xMax || yLabelRange.min < yMin || yLabelRange.max > yMax) {\n                    return;\n                }\n                if (_this._overlayLabel(xLabelRange, yLabelRange, datumIndex, datasetIndex, dataToDraw)) {\n                    return;\n                }\n                var color = attrToProjector[\"fill\"](datum, datumIndex, dataset);\n                var dark = Utils.Color.contrast(\"white\", color) * 1.6 < Utils.Color.contrast(\"black\", color);\n                var g = labelArea.append(\"g\").attr(\"transform\", \"translate(\" + x + \",\" + y + \")\");\n                var className = dark ? \"dark-label\" : \"light-label\";\n                g.classed(className, true);\n                writer.write(label, measurement.width, measurement.height, {\n                    selection: g,\n                    xAlign: \"center\",\n                    yAlign: \"center\",\n                    textRotation: 0,\n                });\n            }\n        });\n    };\n    Rectangle.prototype._overlayLabel = function (labelXRange, labelYRange, datumIndex, datasetIndex, dataToDraw) {\n        var attrToProjector = this._generateAttrToProjector();\n        var datasets = this.datasets();\n        for (var i = datasetIndex; i < datasets.length; i++) {\n            var dataset = datasets[i];\n            var data = dataToDraw.get(dataset);\n            for (var j = (i === datasetIndex ? datumIndex + 1 : 0); j < data.length; j++) {\n                if (Utils.DOM.intersectsBBox(labelXRange, labelYRange, this._entityBBox(data[j], j, dataset, attrToProjector))) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Rectangle._X2_KEY = \"x2\";\n    Rectangle._Y2_KEY = \"y2\";\n    return Rectangle;\n}(xyPlot_1.XYPlot));\nexports.Rectangle = Rectangle;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/rectanglePlot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/scatterPlot.js":
/*!***************************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/scatterPlot.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Animators = __webpack_require__(/*! ../animators */ \"./node_modules/plottable/build/src/animators/index.js\");\nvar SymbolFactories = __webpack_require__(/*! ../core/symbolFactories */ \"./node_modules/plottable/build/src/core/symbolFactories.js\");\nvar Drawers = __webpack_require__(/*! ../drawers */ \"./node_modules/plottable/build/src/drawers/index.js\");\nvar Scales = __webpack_require__(/*! ../scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Plots = __webpack_require__(/*! ./ */ \"./node_modules/plottable/build/src/plots/index.js\");\nvar plot_1 = __webpack_require__(/*! ./plot */ \"./node_modules/plottable/build/src/plots/plot.js\");\nvar xyPlot_1 = __webpack_require__(/*! ./xyPlot */ \"./node_modules/plottable/build/src/plots/xyPlot.js\");\nvar Scatter = (function (_super) {\n    __extends(Scatter, _super);\n    /**\n     * A Scatter Plot draws a symbol at each data point.\n     *\n     * @constructor\n     */\n    function Scatter() {\n        _super.call(this);\n        this.addClass(\"scatter-plot\");\n        var animator = new Animators.Easing();\n        animator.startDelay(5);\n        animator.stepDuration(250);\n        animator.maxTotalDuration(plot_1.Plot._ANIMATION_MAX_DURATION);\n        this.animator(Plots.Animator.MAIN, animator);\n        this.attr(\"opacity\", 0.6);\n        this.attr(\"fill\", new Scales.Color().range()[0]);\n        this.size(6);\n        var circleSymbolFactory = SymbolFactories.circle();\n        this.symbol(function () { return circleSymbolFactory; });\n    }\n    Scatter.prototype._buildLightweightPlotEntities = function (datasets) {\n        var _this = this;\n        var lightweightPlotEntities = _super.prototype._buildLightweightPlotEntities.call(this, datasets);\n        return lightweightPlotEntities.map(function (lightweightPlotEntity) {\n            var diameter = plot_1.Plot._scaledAccessor(_this.size())(lightweightPlotEntity.datum, lightweightPlotEntity.index, lightweightPlotEntity.dataset);\n            // convert diameter into data space to be on the same scale as the scatter point position\n            lightweightPlotEntity.diameter = _this._invertedPixelSize({ x: diameter, y: diameter });\n            return lightweightPlotEntity;\n        });\n    };\n    Scatter.prototype._createDrawer = function (dataset) {\n        return new Drawers.Symbol(dataset);\n    };\n    Scatter.prototype.size = function (size, scale) {\n        if (size == null) {\n            return this._propertyBindings.get(Scatter._SIZE_KEY);\n        }\n        this._bindProperty(Scatter._SIZE_KEY, size, scale);\n        this.render();\n        return this;\n    };\n    Scatter.prototype.symbol = function (symbol) {\n        if (symbol == null) {\n            return this._propertyBindings.get(Scatter._SYMBOL_KEY);\n        }\n        this._propertyBindings.set(Scatter._SYMBOL_KEY, { accessor: symbol });\n        this.render();\n        return this;\n    };\n    Scatter.prototype._generateDrawSteps = function () {\n        var drawSteps = [];\n        if (this._animateOnNextRender()) {\n            var resetAttrToProjector = this._generateAttrToProjector();\n            var symbolProjector_1 = plot_1.Plot._scaledAccessor(this.symbol());\n            resetAttrToProjector[\"d\"] = function (datum, index, dataset) { return symbolProjector_1(datum, index, dataset)(0); };\n            drawSteps.push({ attrToProjector: resetAttrToProjector, animator: this._getAnimator(Plots.Animator.RESET) });\n        }\n        drawSteps.push({\n            attrToProjector: this._generateAttrToProjector(),\n            animator: this._getAnimator(Plots.Animator.MAIN)\n        });\n        return drawSteps;\n    };\n    Scatter.prototype._entityVisibleOnPlot = function (entity, bounds) {\n        var xRange = { min: bounds.topLeft.x, max: bounds.bottomRight.x };\n        var yRange = { min: bounds.topLeft.y, max: bounds.bottomRight.y };\n        var translatedBbox = {\n            x: entity.position.x - entity.diameter.x,\n            y: entity.position.y - entity.diameter.y,\n            width: entity.diameter.x,\n            height: entity.diameter.y,\n        };\n        return Utils.DOM.intersectsBBox(xRange, yRange, translatedBbox);\n    };\n    Scatter.prototype._propertyProjectors = function () {\n        var propertyToProjectors = _super.prototype._propertyProjectors.call(this);\n        var xProjector = plot_1.Plot._scaledAccessor(this.x());\n        var yProjector = plot_1.Plot._scaledAccessor(this.y());\n        var sizeProjector = plot_1.Plot._scaledAccessor(this.size());\n        propertyToProjectors[\"transform\"] = function (datum, index, dataset) {\n            return \"translate(\" + xProjector(datum, index, dataset) + \",\" + yProjector(datum, index, dataset) + \")\";\n        };\n        var symbolProjector = plot_1.Plot._scaledAccessor(this.symbol());\n        propertyToProjectors[\"d\"] = function (datum, index, dataset) {\n            return symbolProjector(datum, index, dataset)(sizeProjector(datum, index, dataset));\n        };\n        return propertyToProjectors;\n    };\n    Scatter.prototype.entitiesIn = function (xRangeOrBounds, yRange) {\n        var dataXRange;\n        var dataYRange;\n        if (yRange == null) {\n            var bounds = xRangeOrBounds;\n            dataXRange = { min: bounds.topLeft.x, max: bounds.bottomRight.x };\n            dataYRange = { min: bounds.topLeft.y, max: bounds.bottomRight.y };\n        }\n        else {\n            dataXRange = xRangeOrBounds;\n            dataYRange = yRange;\n        }\n        var xProjector = plot_1.Plot._scaledAccessor(this.x());\n        var yProjector = plot_1.Plot._scaledAccessor(this.y());\n        return this.entities().filter(function (entity) {\n            var datum = entity.datum;\n            var index = entity.index;\n            var dataset = entity.dataset;\n            var x = xProjector(datum, index, dataset);\n            var y = yProjector(datum, index, dataset);\n            return dataXRange.min <= x && x <= dataXRange.max && dataYRange.min <= y && y <= dataYRange.max;\n        });\n    };\n    /**\n     * Gets the Entities at a particular Point.\n     *\n     * @param {Point} p\n     * @returns {PlotEntity[]}\n     */\n    Scatter.prototype.entitiesAt = function (p) {\n        var xProjector = plot_1.Plot._scaledAccessor(this.x());\n        var yProjector = plot_1.Plot._scaledAccessor(this.y());\n        var sizeProjector = plot_1.Plot._scaledAccessor(this.size());\n        return this.entities().filter(function (entity) {\n            var datum = entity.datum;\n            var index = entity.index;\n            var dataset = entity.dataset;\n            var x = xProjector(datum, index, dataset);\n            var y = yProjector(datum, index, dataset);\n            var size = sizeProjector(datum, index, dataset);\n            return x - size / 2 <= p.x && p.x <= x + size / 2 && y - size / 2 <= p.y && p.y <= y + size / 2;\n        });\n    };\n    /**\n     * _invertedPixelSize returns the size of the object in data space\n     * @param {Point} [point] The size of the object in pixel space. X corresponds to\n     * the width of the object, and Y corresponds to the height of the object\n     * @return {Point} Returns the size of the object in data space. X corresponds to\n     * the width of the object in data space, and Y corresponds to the height of the\n     * object in data space.\n     */\n    Scatter.prototype._invertedPixelSize = function (point) {\n        var invertedOrigin = this._invertPixelPoint(this.origin());\n        var invertedSize = this._invertPixelPoint({ x: point.x, y: point.y });\n        return {\n            x: Math.abs(invertedSize.x - invertedOrigin.x),\n            y: Math.abs(invertedSize.y - invertedOrigin.y)\n        };\n    };\n    Scatter._SIZE_KEY = \"size\";\n    Scatter._SYMBOL_KEY = \"symbol\";\n    return Scatter;\n}(xyPlot_1.XYPlot));\nexports.Scatter = Scatter;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/scatterPlot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/segmentPlot.js":
/*!***************************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/segmentPlot.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Animators = __webpack_require__(/*! ../animators */ \"./node_modules/plottable/build/src/animators/index.js\");\nvar Drawers = __webpack_require__(/*! ../drawers */ \"./node_modules/plottable/build/src/drawers/index.js\");\nvar Scales = __webpack_require__(/*! ../scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar plot_1 = __webpack_require__(/*! ./plot */ \"./node_modules/plottable/build/src/plots/plot.js\");\nvar xyPlot_1 = __webpack_require__(/*! ./xyPlot */ \"./node_modules/plottable/build/src/plots/xyPlot.js\");\nvar Segment = (function (_super) {\n    __extends(Segment, _super);\n    /**\n     * A Segment Plot displays line segments based on the data.\n     *\n     * @constructor\n     */\n    function Segment() {\n        _super.call(this);\n        this.addClass(\"segment-plot\");\n        this.attr(\"stroke\", new Scales.Color().range()[0]);\n        this.attr(\"stroke-width\", \"2px\");\n    }\n    Segment.prototype._createDrawer = function (dataset) {\n        return new Drawers.Segment(dataset);\n    };\n    Segment.prototype._generateDrawSteps = function () {\n        return [{ attrToProjector: this._generateAttrToProjector(), animator: new Animators.Null() }];\n    };\n    Segment.prototype._updateExtentsForProperty = function (property) {\n        _super.prototype._updateExtentsForProperty.call(this, property);\n        if (property === \"x\") {\n            _super.prototype._updateExtentsForProperty.call(this, \"x2\");\n        }\n        else if (property === \"y\") {\n            _super.prototype._updateExtentsForProperty.call(this, \"y2\");\n        }\n    };\n    Segment.prototype._filterForProperty = function (property) {\n        if (property === \"x2\") {\n            return _super.prototype._filterForProperty.call(this, \"x\");\n        }\n        else if (property === \"y2\") {\n            return _super.prototype._filterForProperty.call(this, \"y\");\n        }\n        return _super.prototype._filterForProperty.call(this, property);\n    };\n    Segment.prototype.x = function (x, xScale) {\n        if (x == null) {\n            return _super.prototype.x.call(this);\n        }\n        if (xScale == null) {\n            _super.prototype.x.call(this, x);\n        }\n        else {\n            _super.prototype.x.call(this, x, xScale);\n            var x2Binding = this.x2();\n            var x2 = x2Binding && x2Binding.accessor;\n            if (x2 != null) {\n                this._bindProperty(Segment._X2_KEY, x2, xScale);\n            }\n        }\n        return this;\n    };\n    Segment.prototype.x2 = function (x2) {\n        if (x2 == null) {\n            return this._propertyBindings.get(Segment._X2_KEY);\n        }\n        var xBinding = this.x();\n        var xScale = xBinding && xBinding.scale;\n        this._bindProperty(Segment._X2_KEY, x2, xScale);\n        this.render();\n        return this;\n    };\n    Segment.prototype.y = function (y, yScale) {\n        if (y == null) {\n            return _super.prototype.y.call(this);\n        }\n        if (yScale == null) {\n            _super.prototype.y.call(this, y);\n        }\n        else {\n            _super.prototype.y.call(this, y, yScale);\n            var y2Binding = this.y2();\n            var y2 = y2Binding && y2Binding.accessor;\n            if (y2 != null) {\n                this._bindProperty(Segment._Y2_KEY, y2, yScale);\n            }\n        }\n        return this;\n    };\n    Segment.prototype.y2 = function (y2) {\n        if (y2 == null) {\n            return this._propertyBindings.get(Segment._Y2_KEY);\n        }\n        var yBinding = this.y();\n        var yScale = yBinding && yBinding.scale;\n        this._bindProperty(Segment._Y2_KEY, y2, yScale);\n        this.render();\n        return this;\n    };\n    Segment.prototype._propertyProjectors = function () {\n        var attrToProjector = _super.prototype._propertyProjectors.call(this);\n        attrToProjector[\"x1\"] = plot_1.Plot._scaledAccessor(this.x());\n        attrToProjector[\"x2\"] = this.x2() == null ? plot_1.Plot._scaledAccessor(this.x()) : plot_1.Plot._scaledAccessor(this.x2());\n        attrToProjector[\"y1\"] = plot_1.Plot._scaledAccessor(this.y());\n        attrToProjector[\"y2\"] = this.y2() == null ? plot_1.Plot._scaledAccessor(this.y()) : plot_1.Plot._scaledAccessor(this.y2());\n        return attrToProjector;\n    };\n    Segment.prototype.entitiesAt = function (point) {\n        var entity = this.entityNearest(point);\n        if (entity != null) {\n            return [entity];\n        }\n        else {\n            return [];\n        }\n    };\n    Segment.prototype.entitiesIn = function (xRangeOrBounds, yRange) {\n        var dataXRange;\n        var dataYRange;\n        if (yRange == null) {\n            var bounds = xRangeOrBounds;\n            dataXRange = { min: bounds.topLeft.x, max: bounds.bottomRight.x };\n            dataYRange = { min: bounds.topLeft.y, max: bounds.bottomRight.y };\n        }\n        else {\n            dataXRange = xRangeOrBounds;\n            dataYRange = yRange;\n        }\n        return this._entitiesIntersecting(dataXRange, dataYRange);\n    };\n    Segment.prototype._entitiesIntersecting = function (xRange, yRange) {\n        var _this = this;\n        var intersected = [];\n        var attrToProjector = this._generateAttrToProjector();\n        this.entities().forEach(function (entity) {\n            if (_this._lineIntersectsBox(entity, xRange, yRange, attrToProjector)) {\n                intersected.push(entity);\n            }\n        });\n        return intersected;\n    };\n    Segment.prototype._lineIntersectsBox = function (entity, xRange, yRange, attrToProjector) {\n        var _this = this;\n        var x1 = attrToProjector[\"x1\"](entity.datum, entity.index, entity.dataset);\n        var x2 = attrToProjector[\"x2\"](entity.datum, entity.index, entity.dataset);\n        var y1 = attrToProjector[\"y1\"](entity.datum, entity.index, entity.dataset);\n        var y2 = attrToProjector[\"y2\"](entity.datum, entity.index, entity.dataset);\n        // check if any of end points of the segment is inside the box\n        if ((xRange.min <= x1 && x1 <= xRange.max && yRange.min <= y1 && y1 <= yRange.max) ||\n            (xRange.min <= x2 && x2 <= xRange.max && yRange.min <= y2 && y2 <= yRange.max)) {\n            return true;\n        }\n        var startPoint = { x: x1, y: y1 };\n        var endPoint = { x: x2, y: y2 };\n        var corners = [\n            { x: xRange.min, y: yRange.min },\n            { x: xRange.min, y: yRange.max },\n            { x: xRange.max, y: yRange.max },\n            { x: xRange.max, y: yRange.min },\n        ];\n        var intersections = corners.filter(function (point, index) {\n            if (index !== 0) {\n                // return true if border formed by conecting current corner and previous corner intersects with the segment\n                return _this._lineIntersectsSegment(startPoint, endPoint, point, corners[index - 1]) &&\n                    _this._lineIntersectsSegment(point, corners[index - 1], startPoint, endPoint);\n            }\n            return false;\n        });\n        return intersections.length > 0;\n    };\n    Segment.prototype._lineIntersectsSegment = function (point1, point2, point3, point4) {\n        /* tslint:disable no-shadowed-variable */\n        var calcOrientation = function (point1, point2, point) {\n            return (point2.x - point1.x) * (point.y - point2.y) - (point2.y - point1.y) * (point.x - point2.x);\n        };\n        /* tslint:enable no-shadowed-variable */\n        // point3 and point4 are on different sides of line formed by point1 and point2\n        return calcOrientation(point1, point2, point3) * calcOrientation(point1, point2, point4) < 0;\n    };\n    Segment._X2_KEY = \"x2\";\n    Segment._Y2_KEY = \"y2\";\n    return Segment;\n}(xyPlot_1.XYPlot));\nexports.Segment = Segment;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/segmentPlot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/stackedAreaPlot.js":
/*!*******************************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/stackedAreaPlot.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Animators = __webpack_require__(/*! ../animators */ \"./node_modules/plottable/build/src/animators/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar areaPlot_1 = __webpack_require__(/*! ./areaPlot */ \"./node_modules/plottable/build/src/plots/areaPlot.js\");\nvar plot_1 = __webpack_require__(/*! ./plot */ \"./node_modules/plottable/build/src/plots/plot.js\");\nvar StackedArea = (function (_super) {\n    __extends(StackedArea, _super);\n    /**\n     * @constructor\n     */\n    function StackedArea() {\n        var _this = this;\n        _super.call(this);\n        this._baselineValue = 0;\n        this._stackingOrder = \"bottomup\";\n        this.addClass(\"stacked-area-plot\");\n        this.attr(\"fill-opacity\", 1);\n        this._stackingResult = new Utils.Map();\n        this._stackedExtent = [];\n        this._baselineValueProvider = function () { return [_this._baselineValue]; };\n        this.croppedRenderingEnabled(false);\n    }\n    StackedArea.prototype.croppedRenderingEnabled = function (croppedRendering) {\n        if (croppedRendering == null) {\n            return _super.prototype.croppedRenderingEnabled.call(this);\n        }\n        if (croppedRendering === true) {\n            // HACKHACK #3032: cropped rendering doesn't currently work correctly on StackedArea\n            Utils.Window.warn(\"Warning: Stacked Area Plot does not support cropped rendering.\");\n            return this;\n        }\n        return _super.prototype.croppedRenderingEnabled.call(this, croppedRendering);\n    };\n    StackedArea.prototype._getAnimator = function (key) {\n        return new Animators.Null();\n    };\n    StackedArea.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._baseline = this._renderArea.append(\"line\").classed(\"baseline\", true);\n    };\n    StackedArea.prototype.x = function (x, xScale) {\n        if (x == null) {\n            return _super.prototype.x.call(this);\n        }\n        if (xScale == null) {\n            _super.prototype.x.call(this, x);\n        }\n        else {\n            _super.prototype.x.call(this, x, xScale);\n        }\n        this._updateStackExtentsAndOffsets();\n        return this;\n    };\n    StackedArea.prototype.y = function (y, yScale) {\n        if (y == null) {\n            return _super.prototype.y.call(this);\n        }\n        if (yScale == null) {\n            _super.prototype.y.call(this, y);\n        }\n        else {\n            _super.prototype.y.call(this, y, yScale);\n        }\n        this._updateStackExtentsAndOffsets();\n        return this;\n    };\n    StackedArea.prototype.stackingOrder = function (stackingOrder) {\n        if (stackingOrder == null) {\n            return this._stackingOrder;\n        }\n        this._stackingOrder = stackingOrder;\n        this._onDatasetUpdate();\n        return this;\n    };\n    StackedArea.prototype.downsamplingEnabled = function (downsampling) {\n        if (downsampling == null) {\n            return _super.prototype.downsamplingEnabled.call(this);\n        }\n        Utils.Window.warn(\"Warning: Stacked Area Plot does not support downsampling\");\n        return this;\n    };\n    StackedArea.prototype._additionalPaint = function () {\n        var scaledBaseline = this.y().scale.scale(this._baselineValue);\n        var baselineAttr = {\n            \"x1\": 0,\n            \"y1\": scaledBaseline,\n            \"x2\": this.width(),\n            \"y2\": scaledBaseline,\n        };\n        this._getAnimator(\"baseline\").animate(this._baseline, baselineAttr);\n    };\n    StackedArea.prototype._updateYScale = function () {\n        var yBinding = this.y();\n        var scale = (yBinding && yBinding.scale);\n        if (scale == null) {\n            return;\n        }\n        scale.addPaddingExceptionsProvider(this._baselineValueProvider);\n        scale.addIncludedValuesProvider(this._baselineValueProvider);\n    };\n    StackedArea.prototype._onDatasetUpdate = function () {\n        this._updateStackExtentsAndOffsets();\n        _super.prototype._onDatasetUpdate.call(this);\n        return this;\n    };\n    StackedArea.prototype._updateExtentsForProperty = function (property) {\n        _super.prototype._updateExtentsForProperty.call(this, property);\n        if ((property === \"x\" || property === \"y\") && this._projectorsReady()) {\n            this._updateStackExtentsAndOffsets();\n        }\n    };\n    StackedArea.prototype._extentsForProperty = function (attr) {\n        var primaryAttr = \"y\";\n        if (attr === primaryAttr) {\n            return [this._stackedExtent];\n        }\n        else {\n            return _super.prototype._extentsForProperty.call(this, attr);\n        }\n    };\n    StackedArea.prototype._updateStackExtentsAndOffsets = function () {\n        if (!this._projectorsReady()) {\n            return;\n        }\n        var datasets = this.datasets();\n        var keyAccessor = this.x().accessor;\n        var valueAccessor = this.y().accessor;\n        var filter = this._filterForProperty(\"y\");\n        this._checkSameDomain(datasets, keyAccessor);\n        this._stackingResult = Utils.Stacking.stack(datasets, keyAccessor, valueAccessor, this._stackingOrder);\n        this._stackedExtent = Utils.Stacking.stackedExtent(this._stackingResult, keyAccessor, filter);\n    };\n    StackedArea.prototype._checkSameDomain = function (datasets, keyAccessor) {\n        var keySets = datasets.map(function (dataset) {\n            return d3.set(dataset.data().map(function (datum, i) { return keyAccessor(datum, i, dataset).toString(); })).values();\n        });\n        var domainKeys = StackedArea._domainKeys(datasets, keyAccessor);\n        if (keySets.some(function (keySet) { return keySet.length !== domainKeys.length; })) {\n            Utils.Window.warn(\"the domains across the datasets are not the same. Plot may produce unintended behavior.\");\n        }\n    };\n    /**\n     * Given an array of Datasets and the accessor function for the key, computes the\n     * set reunion (no duplicates) of the domain of each Dataset. The keys are stringified\n     * before being returned.\n     *\n     * @param {Dataset[]} datasets The Datasets for which we extract the domain keys\n     * @param {Accessor<any>} keyAccessor The accessor for the key of the data\n     * @return {string[]} An array of stringified keys\n     */\n    StackedArea._domainKeys = function (datasets, keyAccessor) {\n        var domainKeys = d3.set();\n        datasets.forEach(function (dataset) {\n            dataset.data().forEach(function (datum, index) {\n                domainKeys.add(keyAccessor(datum, index, dataset));\n            });\n        });\n        return domainKeys.values();\n    };\n    StackedArea.prototype._propertyProjectors = function () {\n        var _this = this;\n        var propertyToProjectors = _super.prototype._propertyProjectors.call(this);\n        var yAccessor = this.y().accessor;\n        var xAccessor = this.x().accessor;\n        var normalizedXAccessor = function (datum, index, dataset) {\n            return Utils.Stacking.normalizeKey(xAccessor(datum, index, dataset));\n        };\n        var stackYProjector = function (d, i, dataset) {\n            return _this.y().scale.scale(+yAccessor(d, i, dataset) + _this._stackingResult.get(dataset).get(normalizedXAccessor(d, i, dataset)).offset);\n        };\n        var stackY0Projector = function (d, i, dataset) {\n            return _this.y().scale.scale(_this._stackingResult.get(dataset).get(normalizedXAccessor(d, i, dataset)).offset);\n        };\n        propertyToProjectors[\"d\"] = this._constructAreaProjector(plot_1.Plot._scaledAccessor(this.x()), stackYProjector, stackY0Projector);\n        return propertyToProjectors;\n    };\n    StackedArea.prototype._pixelPoint = function (datum, index, dataset) {\n        var pixelPoint = _super.prototype._pixelPoint.call(this, datum, index, dataset);\n        var xValue = this.x().accessor(datum, index, dataset);\n        var yValue = this.y().accessor(datum, index, dataset);\n        var scaledYValue = this.y().scale.scale(+yValue + this._stackingResult.get(dataset).get(Utils.Stacking.normalizeKey(xValue)).offset);\n        return { x: pixelPoint.x, y: scaledYValue };\n    };\n    return StackedArea;\n}(areaPlot_1.Area));\nexports.StackedArea = StackedArea;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/stackedAreaPlot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/stackedBarPlot.js":
/*!******************************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/stackedBarPlot.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar SVGTypewriter = __webpack_require__(/*! svg-typewriter */ \"./node_modules/svg-typewriter/build/src/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar barPlot_1 = __webpack_require__(/*! ./barPlot */ \"./node_modules/plottable/build/src/plots/barPlot.js\");\nvar StackedBar = (function (_super) {\n    __extends(StackedBar, _super);\n    /**\n     * A StackedBar Plot stacks bars across Datasets based on the primary value of the bars.\n     *   On a vertical StackedBar Plot, the bars with the same X value are stacked.\n     *   On a horizontal StackedBar Plot, the bars with the same Y value are stacked.\n     *\n     * @constructor\n     * @param {Scale} xScale\n     * @param {Scale} yScale\n     * @param {string} [orientation=\"vertical\"] One of \"vertical\"/\"horizontal\".\n     */\n    function StackedBar(orientation) {\n        if (orientation === void 0) { orientation = barPlot_1.Bar.ORIENTATION_VERTICAL; }\n        _super.call(this, orientation);\n        this.addClass(\"stacked-bar-plot\");\n        this._stackingOrder = \"bottomup\";\n        this._stackingResult = new Utils.Map();\n        this._stackedExtent = [];\n    }\n    StackedBar.prototype.x = function (x, xScale) {\n        if (x == null) {\n            return _super.prototype.x.call(this);\n        }\n        if (xScale == null) {\n            _super.prototype.x.call(this, x);\n        }\n        else {\n            _super.prototype.x.call(this, x, xScale);\n        }\n        this._updateStackExtentsAndOffsets();\n        return this;\n    };\n    StackedBar.prototype.y = function (y, yScale) {\n        if (y == null) {\n            return _super.prototype.y.call(this);\n        }\n        if (yScale == null) {\n            _super.prototype.y.call(this, y);\n        }\n        else {\n            _super.prototype.y.call(this, y, yScale);\n        }\n        this._updateStackExtentsAndOffsets();\n        return this;\n    };\n    StackedBar.prototype.stackingOrder = function (stackingOrder) {\n        if (stackingOrder == null) {\n            return this._stackingOrder;\n        }\n        this._stackingOrder = stackingOrder;\n        this._onDatasetUpdate();\n        return this;\n    };\n    StackedBar.prototype._setup = function () {\n        _super.prototype._setup.call(this);\n        this._labelArea = this._renderArea.append(\"g\").classed(barPlot_1.Bar._LABEL_AREA_CLASS, true);\n        this._measurer = new SVGTypewriter.CacheMeasurer(this._labelArea);\n        this._writer = new SVGTypewriter.Writer(this._measurer);\n    };\n    StackedBar.prototype._drawLabels = function () {\n        var _this = this;\n        _super.prototype._drawLabels.call(this);\n        // remove all current labels before redrawing\n        this._labelArea.selectAll(\"g\").remove();\n        var baselineValue = +this.baselineValue();\n        var primaryScale = this._isVertical ? this.x().scale : this.y().scale;\n        var secondaryScale = this._isVertical ? this.y().scale : this.x().scale;\n        var _a = Utils.Stacking.stackedExtents(this._stackingResult), maximumExtents = _a.maximumExtents, minimumExtents = _a.minimumExtents;\n        var barWidth = this._getBarPixelWidth();\n        var drawLabel = function (text, measurement, labelPosition) {\n            var x = labelPosition.x, y = labelPosition.y;\n            var height = measurement.height, width = measurement.width;\n            var tooWide = _this._isVertical ? (width > barWidth) : (height > barWidth);\n            var hideLabel = x < 0\n                || y < 0\n                || x + width > _this.width()\n                || y + height > _this.height()\n                || tooWide;\n            if (!hideLabel) {\n                var labelContainer = _this._labelArea.append(\"g\").attr(\"transform\", \"translate(\" + x + \", \" + y + \")\");\n                labelContainer.classed(\"stacked-bar-label\", true);\n                var writeOptions = {\n                    selection: labelContainer,\n                    xAlign: \"center\",\n                    yAlign: \"center\",\n                    textRotation: 0,\n                };\n                _this._writer.write(text, measurement.width, measurement.height, writeOptions);\n            }\n        };\n        maximumExtents.forEach(function (maximum) {\n            if (maximum.extent !== baselineValue) {\n                // only draw sums for values not at the baseline\n                var text = _this.labelFormatter()(maximum.extent);\n                var measurement = _this._measurer.measure(text);\n                var primaryTextMeasurement = _this._isVertical ? measurement.width : measurement.height;\n                var secondaryTextMeasurement = _this._isVertical ? measurement.height : measurement.width;\n                var x = _this._isVertical\n                    ? primaryScale.scale(maximum.axisValue) - primaryTextMeasurement / 2\n                    : secondaryScale.scale(maximum.extent) + StackedBar._STACKED_BAR_LABEL_PADDING;\n                var y = _this._isVertical\n                    ? secondaryScale.scale(maximum.extent) - secondaryTextMeasurement - StackedBar._STACKED_BAR_LABEL_PADDING\n                    : primaryScale.scale(maximum.axisValue) - primaryTextMeasurement / 2;\n                drawLabel(text, measurement, { x: x, y: y });\n            }\n        });\n        minimumExtents.forEach(function (minimum) {\n            if (minimum.extent !== baselineValue) {\n                var text = _this.labelFormatter()(minimum.extent);\n                var measurement = _this._measurer.measure(text);\n                var primaryTextMeasurement = _this._isVertical ? measurement.width : measurement.height;\n                var secondaryTextMeasurement = _this._isVertical ? measurement.height : measurement.width;\n                var x = _this._isVertical\n                    ? primaryScale.scale(minimum.axisValue) - primaryTextMeasurement / 2\n                    : secondaryScale.scale(minimum.extent) - secondaryTextMeasurement - StackedBar._STACKED_BAR_LABEL_PADDING;\n                var y = _this._isVertical\n                    ? secondaryScale.scale(minimum.extent) + StackedBar._STACKED_BAR_LABEL_PADDING\n                    : primaryScale.scale(minimum.axisValue) - primaryTextMeasurement / 2;\n                drawLabel(text, measurement, { x: x, y: y });\n            }\n        });\n    };\n    StackedBar.prototype._generateAttrToProjector = function () {\n        var _this = this;\n        var attrToProjector = _super.prototype._generateAttrToProjector.call(this);\n        var valueAttr = this._isVertical ? \"y\" : \"x\";\n        var keyAttr = this._isVertical ? \"x\" : \"y\";\n        var primaryScale = this._isVertical ? this.y().scale : this.x().scale;\n        var primaryAccessor = this._propertyBindings.get(valueAttr).accessor;\n        var keyAccessor = this._propertyBindings.get(keyAttr).accessor;\n        var normalizedKeyAccessor = function (datum, index, dataset) {\n            return Utils.Stacking.normalizeKey(keyAccessor(datum, index, dataset));\n        };\n        var getStart = function (d, i, dataset) {\n            return primaryScale.scale(_this._stackingResult.get(dataset).get(normalizedKeyAccessor(d, i, dataset)).offset);\n        };\n        var getEnd = function (d, i, dataset) {\n            return primaryScale.scale(+primaryAccessor(d, i, dataset) +\n                _this._stackingResult.get(dataset).get(normalizedKeyAccessor(d, i, dataset)).offset);\n        };\n        var heightF = function (d, i, dataset) {\n            return Math.abs(getEnd(d, i, dataset) - getStart(d, i, dataset));\n        };\n        attrToProjector[this._isVertical ? \"height\" : \"width\"] = heightF;\n        var attrFunction = function (d, i, dataset) {\n            return +primaryAccessor(d, i, dataset) < 0 ? getStart(d, i, dataset) : getEnd(d, i, dataset);\n        };\n        attrToProjector[valueAttr] = function (d, i, dataset) {\n            return _this._isVertical ? attrFunction(d, i, dataset) : attrFunction(d, i, dataset) - heightF(d, i, dataset);\n        };\n        return attrToProjector;\n    };\n    StackedBar.prototype._onDatasetUpdate = function () {\n        this._updateStackExtentsAndOffsets();\n        _super.prototype._onDatasetUpdate.call(this);\n        return this;\n    };\n    StackedBar.prototype._updateExtentsForProperty = function (property) {\n        _super.prototype._updateExtentsForProperty.call(this, property);\n        if ((property === \"x\" || property === \"y\") && this._projectorsReady()) {\n            this._updateStackExtentsAndOffsets();\n        }\n    };\n    StackedBar.prototype._extentsForProperty = function (attr) {\n        var primaryAttr = this._isVertical ? \"y\" : \"x\";\n        if (attr === primaryAttr) {\n            return [this._stackedExtent];\n        }\n        else {\n            return _super.prototype._extentsForProperty.call(this, attr);\n        }\n    };\n    StackedBar.prototype._updateStackExtentsAndOffsets = function () {\n        if (!this._projectorsReady()) {\n            return;\n        }\n        var datasets = this.datasets();\n        var keyAccessor = this._isVertical ? this.x().accessor : this.y().accessor;\n        var valueAccessor = this._isVertical ? this.y().accessor : this.x().accessor;\n        var filter = this._filterForProperty(this._isVertical ? \"y\" : \"x\");\n        this._stackingResult = Utils.Stacking.stack(datasets, keyAccessor, valueAccessor, this._stackingOrder);\n        this._stackedExtent = Utils.Stacking.stackedExtent(this._stackingResult, keyAccessor, filter);\n    };\n    StackedBar._STACKED_BAR_LABEL_PADDING = 5;\n    return StackedBar;\n}(barPlot_1.Bar));\nexports.StackedBar = StackedBar;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/stackedBarPlot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/waterfallPlot.js":
/*!*****************************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/waterfallPlot.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar barPlot_1 = __webpack_require__(/*! ./barPlot */ \"./node_modules/plottable/build/src/plots/barPlot.js\");\nvar plot_1 = __webpack_require__(/*! ./plot */ \"./node_modules/plottable/build/src/plots/plot.js\");\nvar Waterfall = (function (_super) {\n    __extends(Waterfall, _super);\n    function Waterfall() {\n        _super.call(this);\n        this._connectorsEnabled = false;\n        this.addClass(\"waterfall-plot\");\n    }\n    Waterfall.prototype.connectorsEnabled = function (enabled) {\n        if (enabled == null) {\n            return this._connectorsEnabled;\n        }\n        this._connectorsEnabled = enabled;\n        return this;\n    };\n    Waterfall.prototype.total = function (total) {\n        if (total == null) {\n            return this._propertyBindings.get(Waterfall._TOTAL_KEY);\n        }\n        this._bindProperty(Waterfall._TOTAL_KEY, total, null);\n        return this;\n    };\n    Waterfall.prototype._additionalPaint = function (time) {\n        var _this = this;\n        this._connectorArea.selectAll(\"line\").remove();\n        if (this._connectorsEnabled) {\n            Utils.Window.setTimeout(function () { return _this._drawConnectors(); }, time);\n        }\n    };\n    Waterfall.prototype._createNodesForDataset = function (dataset) {\n        var drawer = _super.prototype._createNodesForDataset.call(this, dataset);\n        this._connectorArea = this._renderArea.append(\"g\").classed(Waterfall._CONNECTOR_AREA_CLASS, true);\n        return drawer;\n    };\n    Waterfall.prototype._extentsForProperty = function (attr) {\n        var primaryAttr = \"y\";\n        if (attr === primaryAttr) {\n            return [this._extent];\n        }\n        else {\n            return _super.prototype._extentsForProperty.call(this, attr);\n        }\n    };\n    Waterfall.prototype._generateAttrToProjector = function () {\n        var _this = this;\n        var attrToProjector = _super.prototype._generateAttrToProjector.call(this);\n        var yScale = this.y().scale;\n        var totalAccessor = plot_1.Plot._scaledAccessor(this.total());\n        var yAttr = this.attr(\"y\");\n        if (yAttr == null) {\n            attrToProjector[\"y\"] = function (d, i, dataset) {\n                var currentValue = _this.y().accessor(d, i, dataset);\n                var isTotal = totalAccessor(d, i, dataset);\n                if (isTotal) {\n                    return Math.min(yScale.scale(currentValue), yScale.scale(0));\n                }\n                else {\n                    var currentSubtotal = _this._subtotals[i];\n                    if (i === 0) {\n                        if (currentValue < 0) {\n                            return yScale.scale(currentSubtotal - currentValue);\n                        }\n                        else {\n                            return yScale.scale(currentSubtotal);\n                        }\n                    }\n                    var priorSubtotal = _this._subtotals[i - 1];\n                    if (currentSubtotal > priorSubtotal) {\n                        return yScale.scale(currentSubtotal);\n                    }\n                    else {\n                        return yScale.scale(priorSubtotal);\n                    }\n                }\n            };\n        }\n        var heightAttr = this.attr(\"height\");\n        if (heightAttr == null) {\n            attrToProjector[\"height\"] = function (d, i, dataset) {\n                var isTotal = totalAccessor(d, i, dataset);\n                var currentValue = _this.y().accessor(d, i, dataset);\n                if (isTotal) {\n                    return Math.abs(yScale.scale(currentValue) - yScale.scale(0));\n                }\n                else {\n                    var currentSubtotal = _this._subtotals[i];\n                    if (i === 0) {\n                        return Math.abs(yScale.scale(currentSubtotal) - yScale.scale(currentSubtotal - currentValue));\n                    }\n                    else {\n                        var priorSubtotal = _this._subtotals[i - 1];\n                        return Math.abs(yScale.scale(currentSubtotal) - yScale.scale(priorSubtotal));\n                    }\n                }\n            };\n        }\n        attrToProjector[\"class\"] = function (d, i, dataset) {\n            var baseClass = \"\";\n            if (_this.attr(\"class\") != null) {\n                baseClass = _this.attr(\"class\").accessor(d, i, dataset) + \" \";\n            }\n            var isTotal = totalAccessor(d, i, dataset);\n            if (isTotal) {\n                return baseClass + Waterfall._BAR_TOTAL_CLASS;\n            }\n            else {\n                var delta = _this.y().accessor(d, i, dataset);\n                return baseClass + (delta > 0 ? Waterfall._BAR_GROWTH_CLASS : Waterfall._BAR_DECLINE_CLASS);\n            }\n        };\n        return attrToProjector;\n    };\n    Waterfall.prototype._onDatasetUpdate = function () {\n        this._updateSubtotals();\n        _super.prototype._onDatasetUpdate.call(this);\n        return this;\n    };\n    Waterfall.prototype._calculateSubtotalsAndExtent = function (dataset) {\n        var _this = this;\n        var min = Number.MAX_VALUE;\n        var max = Number.MIN_VALUE;\n        var total = 0;\n        var hasStarted = false;\n        dataset.data().forEach(function (datum, index) {\n            var currentValue = _this.y().accessor(datum, index, dataset);\n            var isTotal = _this.total().accessor(datum, index, dataset);\n            if (!isTotal || index === 0) {\n                total += currentValue;\n            }\n            _this._subtotals.push(total);\n            if (total < min) {\n                min = total;\n            }\n            if (total > max) {\n                max = total;\n            }\n            if (isTotal) {\n                if (currentValue < min) {\n                    min = currentValue;\n                }\n                if (currentValue > max) {\n                    max = currentValue;\n                }\n            }\n            if (!hasStarted && isTotal) {\n                var startTotal = currentValue - total;\n                for (var i = 0; i < _this._subtotals.length; i++) {\n                    _this._subtotals[i] += startTotal;\n                }\n                hasStarted = true;\n                total += startTotal;\n                min += startTotal;\n                max += startTotal;\n            }\n        });\n        this._extent = [min, max];\n    };\n    Waterfall.prototype._drawConnectors = function () {\n        var attrToProjector = this._generateAttrToProjector();\n        var dataset = this.datasets()[0];\n        for (var datumIndex = 1; datumIndex < dataset.data().length; datumIndex++) {\n            var prevIndex = datumIndex - 1;\n            var datum = dataset.data()[datumIndex];\n            var prevDatum = dataset.data()[prevIndex];\n            var x = attrToProjector[\"x\"](prevDatum, prevIndex, dataset);\n            var x2 = attrToProjector[\"x\"](datum, datumIndex, dataset) + attrToProjector[\"width\"](datum, datumIndex, dataset);\n            var y = attrToProjector[\"y\"](datum, datumIndex, dataset);\n            if ((this._subtotals[datumIndex] > 0 && this._subtotals[datumIndex] > this._subtotals[prevIndex]) ||\n                (this._subtotals[datumIndex] < 0 && this._subtotals[datumIndex] >= this._subtotals[prevIndex])) {\n                y = attrToProjector[\"y\"](datum, datumIndex, dataset) + attrToProjector[\"height\"](datum, datumIndex, dataset);\n            }\n            this._connectorArea.append(\"line\").classed(Waterfall._CONNECTOR_CLASS, true)\n                .attr(\"x1\", x).attr(\"x2\", x2).attr(\"y1\", y).attr(\"y2\", y);\n        }\n    };\n    Waterfall.prototype._updateSubtotals = function () {\n        var datasets = this.datasets();\n        if (datasets.length > 0) {\n            var dataset = datasets[datasets.length - 1];\n            this._subtotals = new Array();\n            this._calculateSubtotalsAndExtent(dataset);\n        }\n    };\n    Waterfall._BAR_DECLINE_CLASS = \"waterfall-decline\";\n    Waterfall._BAR_GROWTH_CLASS = \"waterfall-growth\";\n    Waterfall._BAR_TOTAL_CLASS = \"waterfall-total\";\n    Waterfall._CONNECTOR_CLASS = \"connector\";\n    Waterfall._CONNECTOR_AREA_CLASS = \"connector-area\";\n    Waterfall._TOTAL_KEY = \"total\";\n    return Waterfall;\n}(barPlot_1.Bar));\nexports.Waterfall = Waterfall;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/waterfallPlot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/plots/xyPlot.js":
/*!**********************************************************!*\
  !*** ./node_modules/plottable/build/src/plots/xyPlot.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Scales = __webpack_require__(/*! ../scales */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar plot_1 = __webpack_require__(/*! ./plot */ \"./node_modules/plottable/build/src/plots/plot.js\");\nvar XYPlot = (function (_super) {\n    __extends(XYPlot, _super);\n    /**\n     * An XYPlot is a Plot that displays data along two primary directions, X and Y.\n     *\n     * @constructor\n     * @param {Scale} xScale The x scale to use.\n     * @param {Scale} yScale The y scale to use.\n     */\n    function XYPlot() {\n        var _this = this;\n        _super.call(this);\n        this._autoAdjustXScaleDomain = false;\n        this._autoAdjustYScaleDomain = false;\n        this._deferredRendering = false;\n        this._cachedDomainX = [null, null];\n        this._cachedDomainY = [null, null];\n        this.addClass(\"xy-plot\");\n        this._adjustYDomainOnChangeFromXCallback = function (scale) { return _this._adjustYDomainOnChangeFromX(); };\n        this._adjustXDomainOnChangeFromYCallback = function (scale) { return _this._adjustXDomainOnChangeFromY(); };\n        var _deltaX = 0;\n        var _deltaY = 0;\n        var _scalingX = 1;\n        var _scalingY = 1;\n        var _lastSeenDomainX = [null, null];\n        var _lastSeenDomainY = [null, null];\n        var _timeoutReference = 0;\n        var _deferredRenderingTimeout = 500;\n        var _registerDeferredRendering = function () {\n            if (_this._renderArea == null) {\n                return;\n            }\n            _this._renderArea.attr(\"transform\", \"translate(\" + _deltaX + \", \" + _deltaY + \")\" +\n                \"scale(\" + _scalingX + \", \" + _scalingY + \")\");\n            clearTimeout(_timeoutReference);\n            _timeoutReference = setTimeout(function () {\n                _this._cachedDomainX = _lastSeenDomainX;\n                _this._cachedDomainY = _lastSeenDomainY;\n                _deltaX = 0;\n                _deltaY = 0;\n                _scalingX = 1;\n                _scalingY = 1;\n                _this.render();\n                _this._renderArea.attr(\"transform\", \"translate(0, 0) scale(1, 1)\");\n            }, _deferredRenderingTimeout);\n        };\n        var _lazyDomainChangeCallbackX = function (scale) {\n            if (!_this._isAnchored) {\n                return;\n            }\n            _lastSeenDomainX = scale.domain();\n            _scalingX = (scale.scale(_this._cachedDomainX[1]) - scale.scale(_this._cachedDomainX[0])) /\n                (scale.scale(_lastSeenDomainX[1]) - scale.scale(_lastSeenDomainX[0])) || 1;\n            _deltaX = scale.scale(_this._cachedDomainX[0]) - scale.scale(_lastSeenDomainX[0]) || 0;\n            _registerDeferredRendering();\n        };\n        var _lazyDomainChangeCallbackY = function (scale) {\n            if (!_this._isAnchored) {\n                return;\n            }\n            _lastSeenDomainY = scale.domain();\n            _scalingY = (scale.scale(_this._cachedDomainY[1]) - scale.scale(_this._cachedDomainY[0])) /\n                (scale.scale(_lastSeenDomainY[1]) - scale.scale(_lastSeenDomainY[0])) || 1;\n            _deltaY = scale.scale(_this._cachedDomainY[0]) - scale.scale(_lastSeenDomainY[0]) * _scalingY || 0;\n            _registerDeferredRendering();\n        };\n        this._renderCallback = function (scale) {\n            if (_this.deferredRendering() && _this.x() && _this.x().scale === scale) {\n                _lazyDomainChangeCallbackX(scale);\n            }\n            else if (_this.deferredRendering() && _this.y() && _this.y().scale === scale) {\n                _lazyDomainChangeCallbackY(scale);\n            }\n            else {\n                _this.render();\n            }\n        };\n    }\n    XYPlot.prototype.entityNearest = function (queryPoint) {\n        // by default, the entity index stores position information in the data space\n        // the default impelentation of the entityNearest must convert the chart bounding\n        // box as well as the query point to the data space before it can make a comparison\n        var invertedChartBounds = this._invertedBounds();\n        var invertedQueryPoint = this._invertPixelPoint(queryPoint);\n        return _super.prototype.entityNearest.call(this, invertedQueryPoint, invertedChartBounds);\n    };\n    XYPlot.prototype.deferredRendering = function (deferredRendering) {\n        if (deferredRendering == null) {\n            return this._deferredRendering;\n        }\n        if (deferredRendering && this._isAnchored) {\n            if (this.x() && this.x().scale) {\n                this._cachedDomainX = this.x().scale.domain();\n            }\n            if (this.y() && this.y().scale) {\n                this._cachedDomainY = this.y().scale.domain();\n            }\n        }\n        this._deferredRendering = deferredRendering;\n        return this;\n    };\n    XYPlot.prototype.x = function (x, xScale) {\n        if (x == null) {\n            return this._propertyBindings.get(XYPlot._X_KEY);\n        }\n        this._bindProperty(XYPlot._X_KEY, x, xScale);\n        var width = this.width();\n        if (xScale != null && width != null) {\n            xScale.range([0, width]);\n        }\n        if (this._autoAdjustYScaleDomain) {\n            this._updateYExtentsAndAutodomain();\n        }\n        this.render();\n        return this;\n    };\n    XYPlot.prototype.y = function (y, yScale) {\n        if (y == null) {\n            return this._propertyBindings.get(XYPlot._Y_KEY);\n        }\n        this._bindProperty(XYPlot._Y_KEY, y, yScale);\n        var height = this.height();\n        if (yScale != null && height != null) {\n            if (yScale instanceof Scales.Category) {\n                yScale.range([0, height]);\n            }\n            else {\n                yScale.range([height, 0]);\n            }\n        }\n        if (this._autoAdjustXScaleDomain) {\n            this._updateXExtentsAndAutodomain();\n        }\n        this.render();\n        return this;\n    };\n    XYPlot.prototype._filterForProperty = function (property) {\n        if (property === \"x\" && this._autoAdjustXScaleDomain) {\n            return this._makeFilterByProperty(\"y\");\n        }\n        else if (property === \"y\" && this._autoAdjustYScaleDomain) {\n            return this._makeFilterByProperty(\"x\");\n        }\n        return null;\n    };\n    XYPlot.prototype._makeFilterByProperty = function (property) {\n        var binding = this._propertyBindings.get(property);\n        if (binding != null) {\n            var accessor_1 = binding.accessor;\n            var scale_1 = binding.scale;\n            if (scale_1 != null) {\n                return function (datum, index, dataset) {\n                    var range = scale_1.range();\n                    return Utils.Math.inRange(scale_1.scale(accessor_1(datum, index, dataset)), range[0], range[1]);\n                };\n            }\n        }\n        return null;\n    };\n    XYPlot.prototype._uninstallScaleForKey = function (scale, key) {\n        _super.prototype._uninstallScaleForKey.call(this, scale, key);\n        var adjustCallback = key === XYPlot._X_KEY ? this._adjustYDomainOnChangeFromXCallback\n            : this._adjustXDomainOnChangeFromYCallback;\n        scale.offUpdate(adjustCallback);\n    };\n    XYPlot.prototype._installScaleForKey = function (scale, key) {\n        _super.prototype._installScaleForKey.call(this, scale, key);\n        var adjustCallback = key === XYPlot._X_KEY ? this._adjustYDomainOnChangeFromXCallback\n            : this._adjustXDomainOnChangeFromYCallback;\n        scale.onUpdate(adjustCallback);\n    };\n    XYPlot.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n        if (this.x().scale) {\n            this.x().scale.offUpdate(this._adjustYDomainOnChangeFromXCallback);\n        }\n        if (this.y().scale) {\n            this.y().scale.offUpdate(this._adjustXDomainOnChangeFromYCallback);\n        }\n        return this;\n    };\n    XYPlot.prototype.autorangeMode = function (autorangeMode) {\n        if (autorangeMode == null) {\n            if (this._autoAdjustXScaleDomain) {\n                return \"x\";\n            }\n            if (this._autoAdjustYScaleDomain) {\n                return \"y\";\n            }\n            return \"none\";\n        }\n        switch (autorangeMode) {\n            case \"x\":\n                this._autoAdjustXScaleDomain = true;\n                this._autoAdjustYScaleDomain = false;\n                this._adjustXDomainOnChangeFromY();\n                break;\n            case \"y\":\n                this._autoAdjustXScaleDomain = false;\n                this._autoAdjustYScaleDomain = true;\n                this._adjustYDomainOnChangeFromX();\n                break;\n            case \"none\":\n                this._autoAdjustXScaleDomain = false;\n                this._autoAdjustYScaleDomain = false;\n                break;\n            default:\n                throw new Error(\"Invalid scale name '\" + autorangeMode + \"', must be 'x', 'y' or 'none'\");\n        }\n        return this;\n    };\n    XYPlot.prototype.computeLayout = function (origin, availableWidth, availableHeight) {\n        _super.prototype.computeLayout.call(this, origin, availableWidth, availableHeight);\n        var xBinding = this.x();\n        var xScale = xBinding && xBinding.scale;\n        if (xScale != null) {\n            xScale.range([0, this.width()]);\n        }\n        var yBinding = this.y();\n        var yScale = yBinding && yBinding.scale;\n        if (yScale != null) {\n            if (yScale instanceof Scales.Category) {\n                yScale.range([0, this.height()]);\n            }\n            else {\n                yScale.range([this.height(), 0]);\n            }\n        }\n        return this;\n    };\n    XYPlot.prototype._updateXExtentsAndAutodomain = function () {\n        this._updateExtentsForProperty(\"x\");\n        var xScale = this.x().scale;\n        if (xScale != null) {\n            xScale.autoDomain();\n        }\n    };\n    XYPlot.prototype._updateYExtentsAndAutodomain = function () {\n        this._updateExtentsForProperty(\"y\");\n        var yScale = this.y().scale;\n        if (yScale != null) {\n            yScale.autoDomain();\n        }\n    };\n    /**\n     * Adjusts the domains of both X and Y scales to show all data.\n     * This call does not override the autorange() behavior.\n     *\n     * @returns {XYPlot} The calling XYPlot.\n     */\n    XYPlot.prototype.showAllData = function () {\n        this._updateXExtentsAndAutodomain();\n        this._updateYExtentsAndAutodomain();\n        return this;\n    };\n    XYPlot.prototype._adjustYDomainOnChangeFromX = function () {\n        if (!this._projectorsReady()) {\n            return;\n        }\n        if (this._autoAdjustYScaleDomain) {\n            this._updateYExtentsAndAutodomain();\n        }\n    };\n    XYPlot.prototype._adjustXDomainOnChangeFromY = function () {\n        if (!this._projectorsReady()) {\n            return;\n        }\n        if (this._autoAdjustXScaleDomain) {\n            this._updateXExtentsAndAutodomain();\n        }\n    };\n    XYPlot.prototype._buildLightweightPlotEntities = function (datasets) {\n        var _this = this;\n        return _super.prototype._buildLightweightPlotEntities.call(this, datasets).map(function (lightweightPlotEntity) {\n            lightweightPlotEntity.position = _this._invertPixelPoint(lightweightPlotEntity.position);\n            return lightweightPlotEntity;\n        });\n    };\n    XYPlot.prototype._projectorsReady = function () {\n        var xBinding = this.x();\n        var yBinding = this.y();\n        return xBinding != null &&\n            xBinding.accessor != null &&\n            yBinding != null &&\n            yBinding.accessor != null;\n    };\n    /**\n     * Returns the bounds of the plot in the Data space ensures that the topLeft\n     * and bottomRight points represent the minima and maxima of the Data space, respectively\n     @returns {Bounds}\n     */\n    XYPlot.prototype._invertedBounds = function () {\n        var bounds = this.bounds();\n        var maybeTopLeft = this._invertPixelPoint(bounds.topLeft);\n        var maybeBottomRight = this._invertPixelPoint(bounds.bottomRight);\n        // Scale domains can map from lowest to highest or highest to lowest (eg [0, 1] or [1, 0]).\n        // What we're interested in is a domain space equivalent to the concept of topLeft\n        // and bottomRight, not a true mapping from point to domain. This is in keeping\n        // with our definition of {Bounds}, where the topLeft coordinate is minimal\n        // and the bottomRight is maximal.\n        return {\n            topLeft: {\n                x: Math.min(maybeTopLeft.x, maybeBottomRight.x),\n                y: Math.min(maybeTopLeft.y, maybeBottomRight.y)\n            },\n            bottomRight: {\n                x: Math.max(maybeBottomRight.x, maybeTopLeft.x),\n                y: Math.max(maybeBottomRight.y, maybeTopLeft.y)\n            }\n        };\n    };\n    /**\n     * _invertPixelPoint converts a point in pixel coordinates to a point in data coordinates\n     * @param {Point} point Representation of the point in pixel coordinates\n     * @return {Point} Returns the point represented in data coordinates\n     */\n    XYPlot.prototype._invertPixelPoint = function (point) {\n        var xScale = this.x();\n        var yScale = this.y();\n        return { x: xScale.scale.invertedTransformation(point.x), y: yScale.scale.invertedTransformation(point.y) };\n    };\n    XYPlot.prototype._pixelPoint = function (datum, index, dataset) {\n        var xProjector = plot_1.Plot._scaledAccessor(this.x());\n        var yProjector = plot_1.Plot._scaledAccessor(this.y());\n        return { x: xProjector(datum, index, dataset), y: yProjector(datum, index, dataset) };\n    };\n    XYPlot.prototype._getDataToDraw = function () {\n        var _this = this;\n        var dataToDraw = _super.prototype._getDataToDraw.call(this);\n        var definedFunction = function (d, i, dataset) {\n            var positionX = plot_1.Plot._scaledAccessor(_this.x())(d, i, dataset);\n            var positionY = plot_1.Plot._scaledAccessor(_this.y())(d, i, dataset);\n            return Utils.Math.isValidNumber(positionX) &&\n                Utils.Math.isValidNumber(positionY);\n        };\n        this.datasets().forEach(function (dataset) {\n            dataToDraw.set(dataset, dataToDraw.get(dataset).filter(function (d, i) { return definedFunction(d, i, dataset); }));\n        });\n        return dataToDraw;\n    };\n    XYPlot._X_KEY = \"x\";\n    XYPlot._Y_KEY = \"y\";\n    return XYPlot;\n}(plot_1.Plot));\nexports.XYPlot = XYPlot;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/plots/xyPlot.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/scales/categoryScale.js":
/*!******************************************************************!*\
  !*** ./node_modules/plottable/build/src/scales/categoryScale.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Interactions = __webpack_require__(/*! ../interactions */ \"./node_modules/plottable/build/src/interactions/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar scale_1 = __webpack_require__(/*! ./scale */ \"./node_modules/plottable/build/src/scales/scale.js\");\nvar TRANSFORMATION_SPACE = [0, 1];\nvar Category = (function (_super) {\n    __extends(Category, _super);\n    /**\n     * A Category Scale maps strings to numbers.\n     *\n     * @constructor\n     */\n    function Category() {\n        _super.call(this);\n        this._range = [0, 1];\n        this._d3Scale = d3.scale.ordinal();\n        this._d3Scale.range(TRANSFORMATION_SPACE);\n        this._d3TransformationScale = d3.scale.linear();\n        this._d3TransformationScale.domain(TRANSFORMATION_SPACE);\n        var d3InnerPadding = 0.3;\n        this._innerPadding = Category._convertToPlottableInnerPadding(d3InnerPadding);\n        this._outerPadding = Category._convertToPlottableOuterPadding(0.5, d3InnerPadding);\n    }\n    Category.prototype.extentOfValues = function (values) {\n        return Utils.Array.uniq(values);\n    };\n    Category.prototype._getExtent = function () {\n        return Utils.Array.uniq(this._getAllIncludedValues());\n    };\n    Category.prototype.domain = function (values) {\n        return _super.prototype.domain.call(this, values);\n    };\n    Category.prototype.range = function (values) {\n        return _super.prototype.range.call(this, values);\n    };\n    Category._convertToPlottableInnerPadding = function (d3InnerPadding) {\n        return 1 / (1 - d3InnerPadding) - 1;\n    };\n    Category._convertToPlottableOuterPadding = function (d3OuterPadding, d3InnerPadding) {\n        return d3OuterPadding / (1 - d3InnerPadding);\n    };\n    Category.prototype._setBands = function () {\n        var d3InnerPadding = 1 - 1 / (1 + this.innerPadding());\n        var d3OuterPadding = this.outerPadding() / (1 + this.innerPadding());\n        this._d3Scale.rangeBands(TRANSFORMATION_SPACE, d3InnerPadding, d3OuterPadding);\n    };\n    /**\n     * Returns the width of the range band.\n     *\n     * @returns {number} The range band width\n     */\n    Category.prototype.rangeBand = function () {\n        return this._rescaleBand(this._d3Scale.rangeBand());\n    };\n    /**\n     * Returns the step width of the scale.\n     *\n     * The step width is the pixel distance between adjacent values in the domain.\n     *\n     * @returns {number}\n     */\n    Category.prototype.stepWidth = function () {\n        return this._rescaleBand(this._d3Scale.rangeBand() * (1 + this.innerPadding()));\n    };\n    Category.prototype.innerPadding = function (innerPadding) {\n        if (innerPadding == null) {\n            return this._innerPadding;\n        }\n        this._innerPadding = innerPadding;\n        this.range(this.range());\n        this._dispatchUpdate();\n        return this;\n    };\n    Category.prototype.outerPadding = function (outerPadding) {\n        if (outerPadding == null) {\n            return this._outerPadding;\n        }\n        this._outerPadding = outerPadding;\n        this.range(this.range());\n        this._dispatchUpdate();\n        return this;\n    };\n    Category.prototype.scale = function (value) {\n        // Determine the middle of the range band for the value\n        var untransformed = this._d3Scale(value) + this._d3Scale.rangeBand() / 2;\n        // Convert to screen space\n        return this._d3TransformationScale(untransformed);\n    };\n    Category.prototype.zoom = function (magnifyAmount, centerValue) {\n        var _this = this;\n        var magnifyTransform = function (rangeValue) {\n            return _this._d3TransformationScale.invert(Interactions.zoomAt(rangeValue, magnifyAmount, centerValue));\n        };\n        this._d3TransformationScale.domain(this._d3TransformationScale.range().map(magnifyTransform));\n        this._dispatchUpdate();\n    };\n    Category.prototype.pan = function (translateAmount) {\n        var _this = this;\n        var translateTransform = function (rangeValue) {\n            return _this._d3TransformationScale.invert(rangeValue + translateAmount);\n        };\n        this._d3TransformationScale.domain(this._d3TransformationScale.range().map(translateTransform));\n        this._dispatchUpdate();\n    };\n    Category.prototype.scaleTransformation = function (value) {\n        return this._d3TransformationScale(value);\n    };\n    Category.prototype.invertedTransformation = function (value) {\n        return this._d3TransformationScale.invert(value);\n    };\n    Category.prototype.getTransformationDomain = function () {\n        return this._d3TransformationScale.domain();\n    };\n    Category.prototype._getDomain = function () {\n        return this._backingScaleDomain();\n    };\n    Category.prototype._backingScaleDomain = function (values) {\n        if (values == null) {\n            return this._d3Scale.domain();\n        }\n        else {\n            this._d3Scale.domain(values);\n            this._setBands();\n            return this;\n        }\n    };\n    Category.prototype._getRange = function () {\n        return this._range;\n    };\n    Category.prototype._setRange = function (values) {\n        this._range = values;\n        this._d3TransformationScale.range(values);\n        this._setBands();\n    };\n    /**\n     * Converts a width or height in *Transformation Space* into *Screen Space*.\n     */\n    Category.prototype._rescaleBand = function (band) {\n        return Math.abs(this._d3TransformationScale(band) - this._d3TransformationScale(0));\n    };\n    return Category;\n}(scale_1.Scale));\nexports.Category = Category;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/scales/categoryScale.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/scales/colorScale.js":
/*!***************************************************************!*\
  !*** ./node_modules/plottable/build/src/scales/colorScale.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar scale_1 = __webpack_require__(/*! ./scale */ \"./node_modules/plottable/build/src/scales/scale.js\");\nvar Color = (function (_super) {\n    __extends(Color, _super);\n    /**\n     * A Color Scale maps string values to color hex values expressed as a string.\n     *\n     * @constructor\n     * @param {string} [scaleType] One of \"Category10\"/\"Category20\"/\"Category20b\"/\"Category20c\".\n     *   (see https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors)\n     *   If not supplied, reads the colors defined using CSS -- see plottable.css.\n     */\n    function Color(scaleType) {\n        _super.call(this);\n        var scale;\n        switch (scaleType) {\n            case null:\n            case undefined:\n                if (Color._plottableColorCache == null) {\n                    Color._plottableColorCache = Color._getPlottableColors();\n                }\n                scale = d3.scale.ordinal().range(Color._plottableColorCache);\n                break;\n            case \"Category10\":\n            case \"category10\":\n            case \"10\":\n                scale = d3.scale.category10();\n                break;\n            case \"Category20\":\n            case \"category20\":\n            case \"20\":\n                scale = d3.scale.category20();\n                break;\n            case \"Category20b\":\n            case \"category20b\":\n            case \"20b\":\n                scale = d3.scale.category20b();\n                break;\n            case \"Category20c\":\n            case \"category20c\":\n            case \"20c\":\n                scale = d3.scale.category20c();\n                break;\n            default:\n                throw new Error(\"Unsupported ColorScale type\");\n        }\n        this._d3Scale = scale;\n    }\n    Color.prototype.extentOfValues = function (values) {\n        return Utils.Array.uniq(values);\n    };\n    // Duplicated from OrdinalScale._getExtent - should be removed in #388\n    Color.prototype._getExtent = function () {\n        return Utils.Array.uniq(this._getAllIncludedValues());\n    };\n    Color.invalidateColorCache = function () {\n        Color._plottableColorCache = null;\n    };\n    Color._getPlottableColors = function () {\n        var plottableDefaultColors = [];\n        var colorTester = d3.select(\"body\").append(\"plottable-color-tester\");\n        var defaultColorHex = Utils.Color.colorTest(colorTester, \"\");\n        var i = 0;\n        var colorHex = Utils.Color.colorTest(colorTester, \"plottable-colors-0\");\n        while (colorHex != null && i < this._MAXIMUM_COLORS_FROM_CSS) {\n            if (colorHex === defaultColorHex && colorHex === plottableDefaultColors[plottableDefaultColors.length - 1]) {\n                break;\n            }\n            plottableDefaultColors.push(colorHex);\n            i++;\n            colorHex = Utils.Color.colorTest(colorTester, \"plottable-colors-\" + i);\n        }\n        colorTester.remove();\n        return plottableDefaultColors;\n    };\n    /**\n     * Returns the color-string corresponding to a given string.\n     * If there are not enough colors in the range(), a lightened version of an existing color will be used.\n     *\n     * @param {string} value\n     * @returns {string}\n     */\n    Color.prototype.scale = function (value) {\n        var color = this._d3Scale(value);\n        var index = this.domain().indexOf(value);\n        var numLooped = Math.floor(index / this.range().length);\n        var modifyFactor = Math.log(numLooped * Color._LOOP_LIGHTEN_FACTOR + 1);\n        return Utils.Color.lightenColor(color, modifyFactor);\n    };\n    Color.prototype._getDomain = function () {\n        return this._backingScaleDomain();\n    };\n    Color.prototype._backingScaleDomain = function (values) {\n        if (values == null) {\n            return this._d3Scale.domain();\n        }\n        else {\n            this._d3Scale.domain(values);\n            return this;\n        }\n    };\n    Color.prototype._getRange = function () {\n        return this._d3Scale.range();\n    };\n    Color.prototype._setRange = function (values) {\n        this._d3Scale.range(values);\n    };\n    Color._LOOP_LIGHTEN_FACTOR = 1.6;\n    // The maximum number of colors we are getting from CSS stylesheets\n    Color._MAXIMUM_COLORS_FROM_CSS = 256;\n    return Color;\n}(scale_1.Scale));\nexports.Color = Color;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/scales/colorScale.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/scales/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/plottable/build/src/scales/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar TickGenerators = __webpack_require__(/*! ./tickGenerators */ \"./node_modules/plottable/build/src/scales/tickGenerators.js\");\nexports.TickGenerators = TickGenerators;\n__export(__webpack_require__(/*! ./categoryScale */ \"./node_modules/plottable/build/src/scales/categoryScale.js\"));\n__export(__webpack_require__(/*! ./colorScale */ \"./node_modules/plottable/build/src/scales/colorScale.js\"));\n__export(__webpack_require__(/*! ./interpolatedColorScale */ \"./node_modules/plottable/build/src/scales/interpolatedColorScale.js\"));\n__export(__webpack_require__(/*! ./linearScale */ \"./node_modules/plottable/build/src/scales/linearScale.js\"));\n__export(__webpack_require__(/*! ./modifiedLogScale */ \"./node_modules/plottable/build/src/scales/modifiedLogScale.js\"));\n__export(__webpack_require__(/*! ./timeScale */ \"./node_modules/plottable/build/src/scales/timeScale.js\"));\n// ---------------------------------------------------------\nvar categoryScale_2 = __webpack_require__(/*! ./categoryScale */ \"./node_modules/plottable/build/src/scales/categoryScale.js\");\nvar quantitativeScale_1 = __webpack_require__(/*! ./quantitativeScale */ \"./node_modules/plottable/build/src/scales/quantitativeScale.js\");\n/**\n * Type guarded function to check if the scale implements the\n * `TransformableScale` interface. Unfortunately, there is no way to do\n * runtime interface typechecking, so we have to explicitly list all classes\n * that implement the interface.\n */\nfunction isTransformable(scale) {\n    return (scale instanceof quantitativeScale_1.QuantitativeScale ||\n        scale instanceof categoryScale_2.Category);\n}\nexports.isTransformable = isTransformable;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/scales/index.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/scales/interpolatedColorScale.js":
/*!***************************************************************************!*\
  !*** ./node_modules/plottable/build/src/scales/interpolatedColorScale.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar scale_1 = __webpack_require__(/*! ./scale */ \"./node_modules/plottable/build/src/scales/scale.js\");\nvar InterpolatedColor = (function (_super) {\n    __extends(InterpolatedColor, _super);\n    /**\n     * An InterpolatedColor Scale maps numbers to color hex values, expressed as strings.\n     *\n     * @param {string} [scaleType=\"linear\"] One of \"linear\"/\"log\"/\"sqrt\"/\"pow\".\n     */\n    function InterpolatedColor(scaleType) {\n        if (scaleType === void 0) { scaleType = \"linear\"; }\n        _super.call(this);\n        switch (scaleType) {\n            case \"linear\":\n                this._colorScale = d3.scale.linear();\n                break;\n            case \"log\":\n                this._colorScale = d3.scale.log();\n                break;\n            case \"sqrt\":\n                this._colorScale = d3.scale.sqrt();\n                break;\n            case \"pow\":\n                this._colorScale = d3.scale.pow();\n                break;\n        }\n        if (this._colorScale == null) {\n            throw new Error(\"unknown QuantitativeScale scale type \" + scaleType);\n        }\n        this.range(InterpolatedColor.REDS);\n    }\n    InterpolatedColor.prototype.extentOfValues = function (values) {\n        var extent = d3.extent(values);\n        if (extent[0] == null || extent[1] == null) {\n            return [];\n        }\n        else {\n            return extent;\n        }\n    };\n    /**\n     * Generates the converted QuantitativeScale.\n     */\n    InterpolatedColor.prototype._d3InterpolatedScale = function () {\n        return this._colorScale.range([0, 1]).interpolate(this._interpolateColors());\n    };\n    /**\n     * Generates the d3 interpolator for colors.\n     */\n    InterpolatedColor.prototype._interpolateColors = function () {\n        var colors = this._colorRange;\n        if (colors.length < 2) {\n            throw new Error(\"Color scale arrays must have at least two elements.\");\n        }\n        ;\n        return function (a, b) {\n            return function (t) {\n                // Clamp t parameter to [0,1]\n                t = Math.max(0, Math.min(1, t));\n                // Determine indices for colors\n                var tScaled = t * (colors.length - 1);\n                var i0 = Math.floor(tScaled);\n                var i1 = Math.ceil(tScaled);\n                var frac = (tScaled - i0);\n                // Interpolate in the L*a*b color space\n                return d3.interpolateLab(colors[i0], colors[i1])(frac);\n            };\n        };\n    };\n    InterpolatedColor.prototype._resetScale = function () {\n        this._d3Scale = this._d3InterpolatedScale();\n        this._autoDomainIfAutomaticMode();\n        this._dispatchUpdate();\n    };\n    InterpolatedColor.prototype.autoDomain = function () {\n        // InterpolatedColorScales do not pad\n        var includedValues = this._getAllIncludedValues();\n        if (includedValues.length > 0) {\n            this._setDomain([Utils.Math.min(includedValues, 0), Utils.Math.max(includedValues, 0)]);\n        }\n        return this;\n    };\n    InterpolatedColor.prototype.scale = function (value) {\n        return this._d3Scale(value);\n    };\n    InterpolatedColor.prototype._getDomain = function () {\n        return this._backingScaleDomain();\n    };\n    InterpolatedColor.prototype._backingScaleDomain = function (values) {\n        if (values == null) {\n            return this._d3Scale.domain();\n        }\n        else {\n            this._d3Scale.domain(values);\n            return this;\n        }\n    };\n    InterpolatedColor.prototype._getRange = function () {\n        return this._colorRange;\n    };\n    InterpolatedColor.prototype._setRange = function (range) {\n        this._colorRange = range;\n        this._resetScale();\n    };\n    InterpolatedColor.REDS = [\n        \"#FFFFFF\",\n        \"#FFF6E1\",\n        \"#FEF4C0\",\n        \"#FED976\",\n        \"#FEB24C\",\n        \"#FD8D3C\",\n        \"#FC4E2A\",\n        \"#E31A1C\",\n        \"#B10026\",\n    ];\n    InterpolatedColor.BLUES = [\n        \"#FFFFFF\",\n        \"#CCFFFF\",\n        \"#A5FFFD\",\n        \"#85F7FB\",\n        \"#6ED3EF\",\n        \"#55A7E0\",\n        \"#417FD0\",\n        \"#2545D3\",\n        \"#0B02E1\",\n    ];\n    InterpolatedColor.POSNEG = [\n        \"#0B02E1\",\n        \"#2545D3\",\n        \"#417FD0\",\n        \"#55A7E0\",\n        \"#6ED3EF\",\n        \"#85F7FB\",\n        \"#A5FFFD\",\n        \"#CCFFFF\",\n        \"#FFFFFF\",\n        \"#FFF6E1\",\n        \"#FEF4C0\",\n        \"#FED976\",\n        \"#FEB24C\",\n        \"#FD8D3C\",\n        \"#FC4E2A\",\n        \"#E31A1C\",\n        \"#B10026\",\n    ];\n    return InterpolatedColor;\n}(scale_1.Scale));\nexports.InterpolatedColor = InterpolatedColor;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/scales/interpolatedColorScale.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/scales/linearScale.js":
/*!****************************************************************!*\
  !*** ./node_modules/plottable/build/src/scales/linearScale.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar quantitativeScale_1 = __webpack_require__(/*! ./quantitativeScale */ \"./node_modules/plottable/build/src/scales/quantitativeScale.js\");\nvar Linear = (function (_super) {\n    __extends(Linear, _super);\n    /**\n     * @constructor\n     */\n    function Linear() {\n        _super.call(this);\n        this._d3Scale = d3.scale.linear();\n    }\n    Linear.prototype._defaultExtent = function () {\n        return [0, 1];\n    };\n    Linear.prototype._expandSingleValueDomain = function (singleValueDomain) {\n        if (singleValueDomain[0] === singleValueDomain[1]) {\n            return [singleValueDomain[0] - 1, singleValueDomain[1] + 1];\n        }\n        return singleValueDomain;\n    };\n    Linear.prototype.scale = function (value) {\n        return this._d3Scale(value);\n    };\n    Linear.prototype.scaleTransformation = function (value) {\n        return this.scale(value);\n    };\n    Linear.prototype.invertedTransformation = function (value) {\n        return this.invert(value);\n    };\n    Linear.prototype.getTransformationDomain = function () {\n        return this.domain();\n    };\n    Linear.prototype._getDomain = function () {\n        return this._backingScaleDomain();\n    };\n    Linear.prototype._backingScaleDomain = function (values) {\n        if (values == null) {\n            return this._d3Scale.domain();\n        }\n        else {\n            this._d3Scale.domain(values);\n            return this;\n        }\n    };\n    Linear.prototype._getRange = function () {\n        return this._d3Scale.range();\n    };\n    Linear.prototype._setRange = function (values) {\n        this._d3Scale.range(values);\n    };\n    Linear.prototype.invert = function (value) {\n        return this._d3Scale.invert(value);\n    };\n    Linear.prototype.defaultTicks = function () {\n        return this._d3Scale.ticks(Linear._DEFAULT_NUM_TICKS);\n    };\n    Linear.prototype._niceDomain = function (domain, count) {\n        return this._d3Scale.copy().domain(domain).nice(count).domain();\n    };\n    return Linear;\n}(quantitativeScale_1.QuantitativeScale));\nexports.Linear = Linear;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/scales/linearScale.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/scales/modifiedLogScale.js":
/*!*********************************************************************!*\
  !*** ./node_modules/plottable/build/src/scales/modifiedLogScale.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Scales = __webpack_require__(/*! ./ */ \"./node_modules/plottable/build/src/scales/index.js\");\nvar quantitativeScale_1 = __webpack_require__(/*! ./quantitativeScale */ \"./node_modules/plottable/build/src/scales/quantitativeScale.js\");\nvar ModifiedLog = (function (_super) {\n    __extends(ModifiedLog, _super);\n    /**\n     * A ModifiedLog Scale acts as a regular log scale for large numbers.\n     * As it approaches 0, it gradually becomes linear.\n     * Consequently, a ModifiedLog Scale can process 0 and negative numbers.\n     *\n     * For x >= base, scale(x) = log(x).\n     *\n     * For 0 < x < base, scale(x) will become more and more\n     * linear as it approaches 0.\n     *\n     * At x == 0, scale(x) == 0.\n     *\n     * For negative values, scale(-x) = -scale(x).\n     *\n     * The range and domain for the scale should also be set, using the\n     * range() and domain() accessors, respectively.\n     *\n     * For `range`, provide a two-element array giving the minimum and\n     * maximum of values produced when scaling.\n     *\n     * For `domain` provide a two-element array giving the minimum and\n     * maximum of the values that will be scaled.\n     *\n     * @constructor\n     * @param {number} [base=10]\n     *        The base of the log. Must be > 1.\n     *\n     */\n    function ModifiedLog(base) {\n        if (base === void 0) { base = 10; }\n        _super.call(this);\n        this._d3Scale = d3.scale.linear();\n        this._base = base;\n        this._pivot = this._base;\n        this._setDomain(this._defaultExtent());\n        if (base <= 1) {\n            throw new Error(\"ModifiedLogScale: The base must be > 1\");\n        }\n    }\n    /**\n     * Returns an adjusted log10 value for graphing purposes.  The first\n     * adjustment is that negative values are changed to positive during\n     * the calculations, and then the answer is negated at the end.  The\n     * second is that, for values less than 10, an increasingly large\n     * (0 to 1) scaling factor is added such that at 0 the value is\n     * adjusted to 1, resulting in a returned result of 0.\n     */\n    ModifiedLog.prototype._adjustedLog = function (x) {\n        var negationFactor = x < 0 ? -1 : 1;\n        x *= negationFactor;\n        if (x < this._pivot) {\n            x += (this._pivot - x) / this._pivot;\n        }\n        x = Math.log(x) / Math.log(this._base);\n        x *= negationFactor;\n        return x;\n    };\n    ModifiedLog.prototype._invertedAdjustedLog = function (x) {\n        var negationFactor = x < 0 ? -1 : 1;\n        x *= negationFactor;\n        x = Math.pow(this._base, x);\n        if (x < this._pivot) {\n            x = (this._pivot * (x - 1)) / (this._pivot - 1);\n        }\n        x *= negationFactor;\n        return x;\n    };\n    ModifiedLog.prototype.scale = function (x) {\n        return this._d3Scale(this._adjustedLog(x));\n    };\n    ModifiedLog.prototype.invert = function (x) {\n        return this._invertedAdjustedLog(this._d3Scale.invert(x));\n    };\n    ModifiedLog.prototype.scaleTransformation = function (value) {\n        return this.scale(value);\n    };\n    ModifiedLog.prototype.invertedTransformation = function (value) {\n        return this.invert(value);\n    };\n    ModifiedLog.prototype.getTransformationDomain = function () {\n        return this.domain();\n    };\n    ModifiedLog.prototype._getDomain = function () {\n        return this._untransformedDomain;\n    };\n    ModifiedLog.prototype._setDomain = function (values) {\n        this._untransformedDomain = values;\n        var transformedDomain = [this._adjustedLog(values[0]), this._adjustedLog(values[1])];\n        _super.prototype._setDomain.call(this, transformedDomain);\n    };\n    ModifiedLog.prototype._backingScaleDomain = function (values) {\n        if (values == null) {\n            return this._d3Scale.domain();\n        }\n        else {\n            this._d3Scale.domain(values);\n            return this;\n        }\n    };\n    ModifiedLog.prototype.ticks = function () {\n        // Say your domain is [-100, 100] and your pivot is 10.\n        // then we're going to draw negative log ticks from -100 to -10,\n        // linear ticks from -10 to 10, and positive log ticks from 10 to 100.\n        var middle = function (x, y, z) { return [x, y, z].sort(function (a, b) { return a - b; })[1]; };\n        var min = Utils.Math.min(this._untransformedDomain, 0);\n        var max = Utils.Math.max(this._untransformedDomain, 0);\n        var negativeLower = min;\n        var negativeUpper = middle(min, max, -this._pivot);\n        var positiveLower = middle(min, max, this._pivot);\n        var positiveUpper = max;\n        var negativeLogTicks = this._logTicks(-negativeUpper, -negativeLower).map(function (x) { return -x; }).reverse();\n        var positiveLogTicks = this._logTicks(positiveLower, positiveUpper);\n        var linearMin = Math.max(min, -this._pivot);\n        var linearMax = Math.min(max, this._pivot);\n        var linearTicks = d3.scale.linear().domain([linearMin, linearMax]).ticks(this._howManyTicks(linearMin, linearMax));\n        var ticks = negativeLogTicks.concat(linearTicks).concat(positiveLogTicks);\n        // If you only have 1 tick, you can't tell how big the scale is.\n        if (ticks.length <= 1) {\n            ticks = d3.scale.linear().domain([min, max]).ticks(Scales.ModifiedLog._DEFAULT_NUM_TICKS);\n        }\n        return ticks;\n    };\n    /**\n     * Return an appropriate number of ticks from lower to upper.\n     *\n     * This will first try to fit as many powers of this.base as it can from\n     * lower to upper.\n     *\n     * If it still has ticks after that, it will generate ticks in \"clusters\",\n     * e.g. [20, 30, ... 90, 100] would be a cluster, [200, 300, ... 900, 1000]\n     * would be another cluster.\n     *\n     * This function will generate clusters as large as it can while not\n     * drastically exceeding its number of ticks.\n     */\n    ModifiedLog.prototype._logTicks = function (lower, upper) {\n        var _this = this;\n        var nTicks = this._howManyTicks(lower, upper);\n        if (nTicks === 0) {\n            return [];\n        }\n        var startLogged = Math.floor(Math.log(lower) / Math.log(this._base));\n        var endLogged = Math.ceil(Math.log(upper) / Math.log(this._base));\n        var bases = d3.range(endLogged, startLogged, -Math.ceil((endLogged - startLogged) / nTicks));\n        var multiples = d3.range(this._base, 1, -(this._base - 1)).map(Math.floor);\n        var uniqMultiples = Utils.Array.uniq(multiples);\n        var clusters = bases.map(function (b) { return uniqMultiples.map(function (x) { return Math.pow(_this._base, b - 1) * x; }); });\n        var flattened = Utils.Array.flatten(clusters);\n        var filtered = flattened.filter(function (x) { return lower <= x && x <= upper; });\n        var sorted = filtered.sort(function (x, y) { return x - y; });\n        return sorted;\n    };\n    /**\n     * How many ticks does the range [lower, upper] deserve?\n     *\n     * e.g. if your domain was [10, 1000] and I asked _howManyTicks(10, 100),\n     * I would get 1/2 of the ticks. The range 10, 100 takes up 1/2 of the\n     * distance when plotted.\n     */\n    ModifiedLog.prototype._howManyTicks = function (lower, upper) {\n        var adjustedMin = this._adjustedLog(Utils.Math.min(this._untransformedDomain, 0));\n        var adjustedMax = this._adjustedLog(Utils.Math.max(this._untransformedDomain, 0));\n        var adjustedLower = this._adjustedLog(lower);\n        var adjustedUpper = this._adjustedLog(upper);\n        var proportion = (adjustedUpper - adjustedLower) / (adjustedMax - adjustedMin);\n        var ticks = Math.ceil(proportion * Scales.ModifiedLog._DEFAULT_NUM_TICKS);\n        return ticks;\n    };\n    ModifiedLog.prototype._niceDomain = function (domain, count) {\n        return domain;\n    };\n    ModifiedLog.prototype._defaultExtent = function () {\n        return [0, this._base];\n    };\n    ModifiedLog.prototype._expandSingleValueDomain = function (singleValueDomain) {\n        if (singleValueDomain[0] === singleValueDomain[1]) {\n            var singleValue = singleValueDomain[0];\n            if (singleValue > 0) {\n                return [singleValue / this._base, singleValue * this._base];\n            }\n            else if (singleValue === 0) {\n                return [-this._base, this._base];\n            }\n            else {\n                return [singleValue * this._base, singleValue / this._base];\n            }\n        }\n        return singleValueDomain;\n    };\n    ModifiedLog.prototype._getRange = function () {\n        return this._d3Scale.range();\n    };\n    ModifiedLog.prototype._setRange = function (values) {\n        this._d3Scale.range(values);\n    };\n    ModifiedLog.prototype.defaultTicks = function () {\n        return this._d3Scale.ticks(Scales.ModifiedLog._DEFAULT_NUM_TICKS);\n    };\n    return ModifiedLog;\n}(quantitativeScale_1.QuantitativeScale));\nexports.ModifiedLog = ModifiedLog;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/scales/modifiedLogScale.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/scales/quantitativeScale.js":
/*!**********************************************************************!*\
  !*** ./node_modules/plottable/build/src/scales/quantitativeScale.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Interactions = __webpack_require__(/*! ../interactions */ \"./node_modules/plottable/build/src/interactions/index.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar scale_1 = __webpack_require__(/*! ./scale */ \"./node_modules/plottable/build/src/scales/scale.js\");\nvar QuantitativeScale = (function (_super) {\n    __extends(QuantitativeScale, _super);\n    /**\n     * A QuantitativeScale is a Scale that maps number-like values to numbers.\n     * It is invertible and continuous.\n     *\n     * @constructor\n     */\n    function QuantitativeScale() {\n        _super.call(this);\n        this._tickGenerator = function (scale) { return scale.defaultTicks(); };\n        this._padProportion = 0.05;\n        this._snappingDomainEnabled = true;\n        this._paddingExceptionsProviders = new Utils.Set();\n    }\n    QuantitativeScale.prototype.autoDomain = function () {\n        this._domainMin = null;\n        this._domainMax = null;\n        _super.prototype.autoDomain.call(this);\n        return this;\n    };\n    QuantitativeScale.prototype._autoDomainIfAutomaticMode = function () {\n        if (this._domainMin != null && this._domainMax != null) {\n            this._setDomain([this._domainMin, this._domainMax]);\n            return;\n        }\n        var computedExtent = this._getExtent();\n        if (this._domainMin != null) {\n            var maxValue = computedExtent[1];\n            if (this._domainMin >= maxValue) {\n                maxValue = this._expandSingleValueDomain([this._domainMin, this._domainMin])[1];\n            }\n            this._setDomain([this._domainMin, maxValue]);\n            return;\n        }\n        if (this._domainMax != null) {\n            var minValue = computedExtent[0];\n            if (this._domainMax <= minValue) {\n                minValue = this._expandSingleValueDomain([this._domainMax, this._domainMax])[0];\n            }\n            this._setDomain([minValue, this._domainMax]);\n            return;\n        }\n        _super.prototype._autoDomainIfAutomaticMode.call(this);\n    };\n    QuantitativeScale.prototype._getExtent = function () {\n        var includedValues = this._getAllIncludedValues();\n        var extent = this._defaultExtent();\n        if (includedValues.length !== 0) {\n            var combinedExtent = [\n                Utils.Math.min(includedValues, extent[0]),\n                Utils.Math.max(includedValues, extent[1]),\n            ];\n            extent = this._padDomain(combinedExtent);\n        }\n        if (this._domainMin != null) {\n            extent[0] = this._domainMin;\n        }\n        if (this._domainMax != null) {\n            extent[1] = this._domainMax;\n        }\n        return extent;\n    };\n    /**\n     * Adds a padding exception provider.\n     * If one end of the domain is set to an excepted value as a result of autoDomain()-ing,\n     * that end of the domain will not be padded.\n     *\n     * @param {Scales.PaddingExceptionProvider<D>} provider The provider function.\n     * @returns {QuantitativeScale} The calling QuantitativeScale.\n     */\n    QuantitativeScale.prototype.addPaddingExceptionsProvider = function (provider) {\n        this._paddingExceptionsProviders.add(provider);\n        this._autoDomainIfAutomaticMode();\n        return this;\n    };\n    /**\n     * Removes the padding exception provider.\n     *\n     * @param {Scales.PaddingExceptionProvider<D>} provider The provider function.\n     * @returns {QuantitativeScale} The calling QuantitativeScale.\n     */\n    QuantitativeScale.prototype.removePaddingExceptionsProvider = function (provider) {\n        this._paddingExceptionsProviders.delete(provider);\n        this._autoDomainIfAutomaticMode();\n        return this;\n    };\n    QuantitativeScale.prototype.padProportion = function (padProportion) {\n        if (padProportion == null) {\n            return this._padProportion;\n        }\n        if (padProportion < 0) {\n            throw new Error(\"padProportion must be non-negative\");\n        }\n        this._padProportion = padProportion;\n        this._autoDomainIfAutomaticMode();\n        return this;\n    };\n    QuantitativeScale.prototype._padDomain = function (domain) {\n        var _this = this;\n        if (domain[0].valueOf() === domain[1].valueOf()) {\n            return this._expandSingleValueDomain(domain);\n        }\n        if (this._padProportion === 0) {\n            return domain;\n        }\n        var p = this._padProportion / 2;\n        var min = domain[0];\n        var max = domain[1];\n        var minExistsInExceptions = false;\n        var maxExistsInExceptions = false;\n        this._paddingExceptionsProviders.forEach(function (provider) {\n            var values = provider(_this);\n            values.forEach(function (value) {\n                if (value.valueOf() === min.valueOf()) {\n                    minExistsInExceptions = true;\n                }\n                if (value.valueOf() === max.valueOf()) {\n                    maxExistsInExceptions = true;\n                }\n            });\n        });\n        var originalDomain = this._backingScaleDomain();\n        this._backingScaleDomain(domain);\n        var newMin = minExistsInExceptions ? min : this.invert(this.scale(min) - (this.scale(max) - this.scale(min)) * p);\n        var newMax = maxExistsInExceptions ? max : this.invert(this.scale(max) + (this.scale(max) - this.scale(min)) * p);\n        this._backingScaleDomain(originalDomain);\n        if (this._snappingDomainEnabled) {\n            return this._niceDomain([newMin, newMax]);\n        }\n        return ([newMin, newMax]);\n    };\n    QuantitativeScale.prototype.snappingDomainEnabled = function (snappingDomainEnabled) {\n        if (snappingDomainEnabled == null) {\n            return this._snappingDomainEnabled;\n        }\n        this._snappingDomainEnabled = snappingDomainEnabled;\n        this._autoDomainIfAutomaticMode();\n        return this;\n    };\n    QuantitativeScale.prototype._expandSingleValueDomain = function (singleValueDomain) {\n        return singleValueDomain;\n    };\n    /**\n     * Computes the domain value corresponding to a supplied range value.\n     *\n     * @param {number} value: A value from the Scale's range.\n     * @returns {D} The domain value corresponding to the supplied range value.\n     */\n    QuantitativeScale.prototype.invert = function (value) {\n        throw new Error(\"Subclasses should override invert\");\n    };\n    QuantitativeScale.prototype.domain = function (values) {\n        if (values != null) {\n            this._domainMin = values[0];\n            this._domainMax = values[1];\n        }\n        return _super.prototype.domain.call(this, values);\n    };\n    QuantitativeScale.prototype.domainMin = function (domainMin) {\n        if (domainMin == null) {\n            return this.domain()[0];\n        }\n        this._domainMin = domainMin;\n        this._autoDomainIfAutomaticMode();\n        return this;\n    };\n    QuantitativeScale.prototype.domainMax = function (domainMax) {\n        if (domainMax == null) {\n            return this.domain()[1];\n        }\n        this._domainMax = domainMax;\n        this._autoDomainIfAutomaticMode();\n        return this;\n    };\n    QuantitativeScale.prototype.extentOfValues = function (values) {\n        // HACKHACK: TS1.4 doesn't consider numbers to be Number-like (valueOf() returning number), so D can't be typed correctly\n        var extent = d3.extent(values.filter(function (value) { return Utils.Math.isValidNumber(+value); }));\n        if (extent[0] == null || extent[1] == null) {\n            return [];\n        }\n        else {\n            return extent;\n        }\n    };\n    QuantitativeScale.prototype.zoom = function (magnifyAmount, centerValue) {\n        var _this = this;\n        var magnifyTransform = function (rangeValue) { return _this.invert(Interactions.zoomAt(rangeValue, magnifyAmount, centerValue)); };\n        this.domain(this.range().map(magnifyTransform));\n    };\n    QuantitativeScale.prototype.pan = function (translateAmount) {\n        var _this = this;\n        var translateTransform = function (rangeValue) { return _this.invert(rangeValue + translateAmount); };\n        this.domain(this.range().map(translateTransform));\n    };\n    QuantitativeScale.prototype.scaleTransformation = function (value) {\n        throw new Error(\"Subclasses should override scaleTransformation\");\n    };\n    QuantitativeScale.prototype.invertedTransformation = function (value) {\n        throw new Error(\"Subclasses should override invertedTransformation\");\n    };\n    QuantitativeScale.prototype.getTransformationDomain = function () {\n        throw new Error(\"Subclasses should override getTransformationDomain\");\n    };\n    QuantitativeScale.prototype._setDomain = function (values) {\n        var isNaNOrInfinity = function (x) { return Utils.Math.isNaN(x) || x === Infinity || x === -Infinity; };\n        if (isNaNOrInfinity(values[0]) || isNaNOrInfinity(values[1])) {\n            Utils.Window.warn(\"Warning: QuantitativeScales cannot take NaN or Infinity as a domain value. Ignoring.\");\n            return;\n        }\n        _super.prototype._setDomain.call(this, values);\n    };\n    /**\n     * Gets the array of tick values generated by the default algorithm.\n     */\n    QuantitativeScale.prototype.defaultTicks = function () {\n        throw new Error(\"Subclasses should override _getDefaultTicks\");\n    };\n    /**\n     * Gets an array of tick values spanning the domain.\n     *\n     * @returns {D[]}\n     */\n    QuantitativeScale.prototype.ticks = function () {\n        return this._tickGenerator(this);\n    };\n    /**\n     * Given a domain, expands its domain onto \"nice\" values, e.g. whole\n     * numbers.\n     */\n    QuantitativeScale.prototype._niceDomain = function (domain, count) {\n        throw new Error(\"Subclasses should override _niceDomain\");\n    };\n    QuantitativeScale.prototype._defaultExtent = function () {\n        throw new Error(\"Subclasses should override _defaultExtent\");\n    };\n    QuantitativeScale.prototype.tickGenerator = function (generator) {\n        if (generator == null) {\n            return this._tickGenerator;\n        }\n        else {\n            this._tickGenerator = generator;\n            return this;\n        }\n    };\n    QuantitativeScale._DEFAULT_NUM_TICKS = 10;\n    return QuantitativeScale;\n}(scale_1.Scale));\nexports.QuantitativeScale = QuantitativeScale;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/scales/quantitativeScale.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/scales/scale.js":
/*!**********************************************************!*\
  !*** ./node_modules/plottable/build/src/scales/scale.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar Scale = (function () {\n    /**\n     * A Scale is a function (in the mathematical sense) that maps values from a domain to a range.\n     *\n     * @constructor\n     */\n    function Scale() {\n        this._autoDomainAutomatically = true;\n        this._domainModificationInProgress = false;\n        this._callbacks = new Utils.CallbackSet();\n        this._includedValuesProviders = new Utils.Set();\n    }\n    /**\n     * Given an array of potential domain values, computes the extent of those values.\n     *\n     * @param {D[]} values\n     * @returns {D[]} The extent of the input values.\n     */\n    Scale.prototype.extentOfValues = function (values) {\n        return []; // this should be overwritten\n    };\n    Scale.prototype._getAllIncludedValues = function () {\n        var _this = this;\n        var providerArray = [];\n        this._includedValuesProviders.forEach(function (provider) {\n            var extents = provider(_this);\n            providerArray = providerArray.concat(extents);\n        });\n        return providerArray;\n    };\n    Scale.prototype._getExtent = function () {\n        return []; // this should be overwritten\n    };\n    /**\n     * Adds a callback to be called when the Scale updates.\n     *\n     * @param {ScaleCallback} callback.\n     * @returns {Scale} The calling Scale.\n     */\n    Scale.prototype.onUpdate = function (callback) {\n        this._callbacks.add(callback);\n        return this;\n    };\n    /**\n     * Removes a callback that would be called when the Scale updates.\n     *\n     * @param {ScaleCallback} callback.\n     * @returns {Scale} The calling Scale.\n     */\n    Scale.prototype.offUpdate = function (callback) {\n        this._callbacks.delete(callback);\n        return this;\n    };\n    Scale.prototype._dispatchUpdate = function () {\n        this._callbacks.callCallbacks(this);\n    };\n    /**\n     * Sets the Scale's domain so that it spans the Extents of all its ExtentsProviders.\n     *\n     * @returns {Scale} The calling Scale.\n     */\n    Scale.prototype.autoDomain = function () {\n        this._autoDomainAutomatically = true;\n        this._setDomain(this._getExtent());\n        return this;\n    };\n    Scale.prototype._autoDomainIfAutomaticMode = function () {\n        if (this._autoDomainAutomatically) {\n            this.autoDomain();\n        }\n    };\n    /**\n     * Computes the range value corresponding to a given domain value.\n     *\n     * @param {D} value\n     * @returns {R} The range value corresponding to the supplied domain value.\n     */\n    Scale.prototype.scale = function (value) {\n        throw new Error(\"Subclasses should override scale\");\n    };\n    Scale.prototype.domain = function (values) {\n        if (values == null) {\n            return this._getDomain();\n        }\n        else {\n            this._autoDomainAutomatically = false;\n            this._setDomain(values);\n            return this;\n        }\n    };\n    Scale.prototype._getDomain = function () {\n        throw new Error(\"Subclasses should override _getDomain\");\n    };\n    Scale.prototype._setDomain = function (values) {\n        if (!this._domainModificationInProgress) {\n            this._domainModificationInProgress = true;\n            this._backingScaleDomain(values);\n            this._dispatchUpdate();\n            this._domainModificationInProgress = false;\n        }\n    };\n    Scale.prototype._backingScaleDomain = function (values) {\n        throw new Error(\"Subclasses should override _backingDomain\");\n    };\n    Scale.prototype.range = function (values) {\n        if (values == null) {\n            return this._getRange();\n        }\n        else {\n            this._setRange(values);\n            return this;\n        }\n    };\n    Scale.prototype._getRange = function () {\n        throw new Error(\"Subclasses should override _getRange\");\n    };\n    Scale.prototype._setRange = function (values) {\n        throw new Error(\"Subclasses should override _setRange\");\n    };\n    /**\n     * Adds an IncludedValuesProvider to the Scale.\n     *\n     * @param {Scales.IncludedValuesProvider} provider\n     * @returns {Scale} The calling Scale.\n     */\n    Scale.prototype.addIncludedValuesProvider = function (provider) {\n        this._includedValuesProviders.add(provider);\n        this._autoDomainIfAutomaticMode();\n        return this;\n    };\n    /**\n     * Removes the IncludedValuesProvider from the Scale.\n     *\n     * @param {Scales.IncludedValuesProvider} provider\n     * @returns {Scale} The calling Scale.\n     */\n    Scale.prototype.removeIncludedValuesProvider = function (provider) {\n        this._includedValuesProviders.delete(provider);\n        this._autoDomainIfAutomaticMode();\n        return this;\n    };\n    return Scale;\n}());\nexports.Scale = Scale;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/scales/scale.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/scales/tickGenerators.js":
/*!*******************************************************************!*\
  !*** ./node_modules/plottable/build/src/scales/tickGenerators.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/plottable/build/src/utils/index.js\");\n/**\n * Creates a TickGenerator using the specified interval.\n *\n * Generates ticks at multiples of the interval while also including the domain boundaries.\n *\n * @param {number} interval\n * @returns {TickGenerator}\n */\nfunction intervalTickGenerator(interval) {\n    if (interval <= 0) {\n        throw new Error(\"interval must be positive number\");\n    }\n    return function (s) {\n        var domain = s.domain();\n        var low = Math.min(domain[0], domain[1]);\n        var high = Math.max(domain[0], domain[1]);\n        var firstTick = Math.ceil(low / interval) * interval;\n        var numTicks = Math.floor((high - firstTick) / interval) + 1;\n        var lowTicks = low % interval === 0 ? [] : [low];\n        var middleTicks = Utils.Math.range(0, numTicks).map(function (t) { return firstTick + t * interval; });\n        var highTicks = high % interval === 0 ? [] : [high];\n        return lowTicks.concat(middleTicks).concat(highTicks);\n    };\n}\nexports.intervalTickGenerator = intervalTickGenerator;\n/**\n * Creates a TickGenerator returns only integer tick values.\n *\n * @returns {TickGenerator}\n */\nfunction integerTickGenerator() {\n    return function (s) {\n        var defaultTicks = s.defaultTicks();\n        return defaultTicks.filter(function (tick, i) { return (tick % 1 === 0) || (i === 0) || (i === defaultTicks.length - 1); });\n    };\n}\nexports.integerTickGenerator = integerTickGenerator;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/scales/tickGenerators.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/scales/timeScale.js":
/*!**************************************************************!*\
  !*** ./node_modules/plottable/build/src/scales/timeScale.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar timeAxis_1 = __webpack_require__(/*! ../axes/timeAxis */ \"./node_modules/plottable/build/src/axes/timeAxis.js\");\nvar quantitativeScale_1 = __webpack_require__(/*! ./quantitativeScale */ \"./node_modules/plottable/build/src/scales/quantitativeScale.js\");\nvar Time = (function (_super) {\n    __extends(Time, _super);\n    /**\n     * A Time Scale maps Date objects to numbers.\n     *\n     * @constructor\n     */\n    function Time() {\n        _super.call(this);\n        this._d3Scale = d3.time.scale();\n        this.autoDomain();\n    }\n    /**\n     * Returns an array of ticks values separated by the specified interval.\n     *\n     * @param {string} interval A string specifying the interval unit.\n     * @param {number?} [step] The number of multiples of the interval between consecutive ticks.\n     * @return {Date[]}\n     */\n    Time.prototype.tickInterval = function (interval, step) {\n        // temporarily creats a time scale from our linear scale into a time scale so we can get access to its api\n        var tempScale = d3.time.scale();\n        var d3Interval = Time.timeIntervalToD3Time(interval);\n        tempScale.domain(this.domain());\n        tempScale.range(this.range());\n        return tempScale.ticks(d3Interval, step);\n    };\n    Time.prototype._setDomain = function (values) {\n        if (values[1] < values[0]) {\n            throw new Error(\"Scale.Time domain values must be in chronological order\");\n        }\n        return _super.prototype._setDomain.call(this, values);\n    };\n    Time.prototype._defaultExtent = function () {\n        return [new Date(\"1970-01-01\"), new Date(\"1970-01-02\")];\n    };\n    Time.prototype._expandSingleValueDomain = function (singleValueDomain) {\n        var startTime = singleValueDomain[0].getTime();\n        var endTime = singleValueDomain[1].getTime();\n        if (startTime === endTime) {\n            var startDate = new Date(startTime);\n            startDate.setDate(startDate.getDate() - 1);\n            var endDate = new Date(endTime);\n            endDate.setDate(endDate.getDate() + 1);\n            return [startDate, endDate];\n        }\n        return singleValueDomain;\n    };\n    Time.prototype.scale = function (value) {\n        return this._d3Scale(value);\n    };\n    Time.prototype.scaleTransformation = function (value) {\n        return this.scale(new Date(value));\n    };\n    Time.prototype.invertedTransformation = function (value) {\n        return this.invert(value).getTime();\n    };\n    Time.prototype.getTransformationDomain = function () {\n        var dates = this.domain();\n        return [dates[0].valueOf(), dates[1].valueOf()];\n    };\n    Time.prototype._getDomain = function () {\n        return this._backingScaleDomain();\n    };\n    Time.prototype._backingScaleDomain = function (values) {\n        if (values == null) {\n            return this._d3Scale.domain();\n        }\n        else {\n            this._d3Scale.domain(values);\n            return this;\n        }\n    };\n    Time.prototype._getRange = function () {\n        return this._d3Scale.range();\n    };\n    Time.prototype._setRange = function (values) {\n        this._d3Scale.range(values);\n    };\n    Time.prototype.invert = function (value) {\n        return this._d3Scale.invert(value);\n    };\n    Time.prototype.defaultTicks = function () {\n        return this._d3Scale.ticks(Time._DEFAULT_NUM_TICKS);\n    };\n    Time.prototype._niceDomain = function (domain) {\n        return this._d3Scale.copy().domain(domain).nice().domain();\n    };\n    /**\n     * Transforms the Plottable TimeInterval string into a d3 time interval equivalent.\n     * If the provided TimeInterval is incorrect, the default is d3.time.year\n     */\n    Time.timeIntervalToD3Time = function (timeInterval) {\n        switch (timeInterval) {\n            case timeAxis_1.TimeInterval.second:\n                return d3.time.second;\n            case timeAxis_1.TimeInterval.minute:\n                return d3.time.minute;\n            case timeAxis_1.TimeInterval.hour:\n                return d3.time.hour;\n            case timeAxis_1.TimeInterval.day:\n                return d3.time.day;\n            case timeAxis_1.TimeInterval.week:\n                return d3.time.week;\n            case timeAxis_1.TimeInterval.month:\n                return d3.time.month;\n            case timeAxis_1.TimeInterval.year:\n                return d3.time.year;\n            default:\n                throw Error(\"TimeInterval specified does not exist: \" + timeInterval);\n        }\n    };\n    return Time;\n}(quantitativeScale_1.QuantitativeScale));\nexports.Time = Time;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/scales/timeScale.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/utils/arrayUtils.js":
/*!**************************************************************!*\
  !*** ./node_modules/plottable/build/src/utils/arrayUtils.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar nativeArray = window.Array;\n/**\n * Takes two arrays of numbers and adds them together\n *\n * @param {number[]} aList The first array of numbers\n * @param {number[]} bList The second array of numbers\n * @return {number[]} An array of numbers where x[i] = aList[i] + bList[i]\n */\nfunction add(aList, bList) {\n    if (aList.length !== bList.length) {\n        throw new Error(\"attempted to add arrays of unequal length\");\n    }\n    return aList.map(function (_, i) { return aList[i] + bList[i]; });\n}\nexports.add = add;\n/**\n * Take an array of values, and return the unique values.\n * Will work iff ∀ a, b, a.toString() == b.toString() => a == b; will break on Object inputs\n *\n * @param {T[]} values The values to find uniqueness for\n * @return {T[]} The unique values\n */\nfunction uniq(arr) {\n    var seen = d3.set();\n    var result = [];\n    arr.forEach(function (x) {\n        if (!seen.has(String(x))) {\n            seen.add(String(x));\n            result.push(x);\n        }\n    });\n    return result;\n}\nexports.uniq = uniq;\n/**\n * @param {T[][]} a The 2D array that will have its elements joined together.\n * @return {T[]} Every array in a, concatenated together in the order they appear.\n */\nfunction flatten(a) {\n    return nativeArray.prototype.concat.apply([], a);\n}\nexports.flatten = flatten;\n/**\n * Creates an array of length `count`, filled with value or (if value is a function), value()\n *\n * @param {T | ((index?: number) => T)} value The value to fill the array with or a value generator (called with index as arg)\n * @param {number} count The length of the array to generate\n * @return {any[]}\n */\nfunction createFilledArray(value, count) {\n    var out = [];\n    for (var i = 0; i < count; i++) {\n        out[i] = typeof (value) === \"function\" ? value(i) : value;\n    }\n    return out;\n}\nexports.createFilledArray = createFilledArray;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/utils/arrayUtils.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/utils/callbackSet.js":
/*!***************************************************************!*\
  !*** ./node_modules/plottable/build/src/utils/callbackSet.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar set_1 = __webpack_require__(/*! ./set */ \"./node_modules/plottable/build/src/utils/set.js\");\n/**\n * A set of callbacks which can be all invoked at once.\n * Each callback exists at most once in the set (based on reference equality).\n * All callbacks should have the same signature.\n */\nvar CallbackSet = (function (_super) {\n    __extends(CallbackSet, _super);\n    function CallbackSet() {\n        _super.apply(this, arguments);\n    }\n    CallbackSet.prototype.callCallbacks = function () {\n        var _this = this;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i - 0] = arguments[_i];\n        }\n        this.forEach(function (callback) {\n            callback.apply(_this, args);\n        });\n        return this;\n    };\n    return CallbackSet;\n}(set_1.Set));\nexports.CallbackSet = CallbackSet;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/utils/callbackSet.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/utils/clientToSVGTranslator.js":
/*!*************************************************************************!*\
  !*** ./node_modules/plottable/build/src/utils/clientToSVGTranslator.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar DOM = __webpack_require__(/*! ./domUtils */ \"./node_modules/plottable/build/src/utils/domUtils.js\");\nvar ClientToSVGTranslator = (function () {\n    function ClientToSVGTranslator(svg) {\n        this._svg = svg;\n        this._measureRect = document.createElementNS(svg.namespaceURI, \"rect\");\n        this._measureRect.setAttribute(\"class\", \"measure-rect\");\n        this._measureRect.setAttribute(\"style\", \"opacity: 0; visibility: hidden;\");\n        this._measureRect.setAttribute(\"width\", \"1\");\n        this._measureRect.setAttribute(\"height\", \"1\");\n        this._svg.appendChild(this._measureRect);\n    }\n    /**\n     * Returns the ClientToSVGTranslator for the <svg> containing elem.\n     * If one already exists on that <svg>, it will be returned; otherwise, a new one will be created.\n     */\n    ClientToSVGTranslator.getTranslator = function (elem) {\n        var svg = DOM.boundingSVG(elem);\n        var translator = svg[ClientToSVGTranslator._TRANSLATOR_KEY];\n        if (translator == null) {\n            translator = new ClientToSVGTranslator(svg);\n            svg[ClientToSVGTranslator._TRANSLATOR_KEY] = translator;\n        }\n        return translator;\n    };\n    /**\n     * Computes the position relative to the <svg> in svg-coordinate-space.\n     */\n    ClientToSVGTranslator.prototype.computePosition = function (clientX, clientY) {\n        // get the origin\n        this._measureRect.setAttribute(\"x\", \"0\");\n        this._measureRect.setAttribute(\"y\", \"0\");\n        var mrBCR = this._measureRect.getBoundingClientRect();\n        var origin = { x: mrBCR.left, y: mrBCR.top };\n        // calculate the scale\n        var sampleDistance = 100;\n        this._measureRect.setAttribute(\"x\", String(sampleDistance));\n        this._measureRect.setAttribute(\"y\", String(sampleDistance));\n        mrBCR = this._measureRect.getBoundingClientRect();\n        var testPoint = { x: mrBCR.left, y: mrBCR.top };\n        // invalid measurements -- SVG might not be in the DOM\n        if (origin.x === testPoint.x || origin.y === testPoint.y) {\n            return null;\n        }\n        var scaleX = (testPoint.x - origin.x) / sampleDistance;\n        var scaleY = (testPoint.y - origin.y) / sampleDistance;\n        // get the true cursor position\n        this._measureRect.setAttribute(\"x\", String((clientX - origin.x) / scaleX));\n        this._measureRect.setAttribute(\"y\", String((clientY - origin.y) / scaleY));\n        mrBCR = this._measureRect.getBoundingClientRect();\n        var trueCursorPosition = { x: mrBCR.left, y: mrBCR.top };\n        var scaledPosition = {\n            x: (trueCursorPosition.x - origin.x) / scaleX,\n            y: (trueCursorPosition.y - origin.y) / scaleY,\n        };\n        return scaledPosition;\n    };\n    /**\n     * Checks whether event happened inside <svg> element.\n     */\n    ClientToSVGTranslator.prototype.insideSVG = function (e) {\n        return DOM.boundingSVG(e.target) === this._svg;\n    };\n    ClientToSVGTranslator._TRANSLATOR_KEY = \"__Plottable_ClientToSVGTranslator\";\n    return ClientToSVGTranslator;\n}());\nexports.ClientToSVGTranslator = ClientToSVGTranslator;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/utils/clientToSVGTranslator.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/utils/colorUtils.js":
/*!**************************************************************!*\
  !*** ./node_modules/plottable/build/src/utils/colorUtils.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar nativeMath = window.Math;\n/**\n * Return contrast ratio between two colors\n * Based on implementation from chroma.js by Gregor Aisch (gka) (licensed under BSD)\n * chroma.js may be found here: https://github.com/gka/chroma.js\n * License may be found here: https://github.com/gka/chroma.js/blob/master/LICENSE\n * see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n */\nfunction contrast(a, b) {\n    var l1 = luminance(a) + 0.05;\n    var l2 = luminance(b) + 0.05;\n    return l1 > l2 ? l1 / l2 : l2 / l1;\n}\nexports.contrast = contrast;\n/**\n * Returns a brighter copy of this color. Each channel is multiplied by 0.7 ^ -factor.\n * Channel values are capped at the maximum value of 255, and the minimum value of 30.\n */\nfunction lightenColor(color, factor) {\n    var hsl = d3.hsl(color).brighter(factor);\n    return hsl.rgb().toString();\n}\nexports.lightenColor = lightenColor;\n/**\n * Gets the Hex Code of the color resulting by applying the className CSS class to the\n * colorTester selection. Returns null if the tester is transparent.\n *\n * @param {d3.Selection<void>} colorTester The d3 selection to apply the CSS class to\n * @param {string} className The name of the class to be applied\n * @return {string} The hex code of the computed color\n */\nfunction colorTest(colorTester, className) {\n    colorTester.classed(className, true);\n    // Use regex to get the text inside the rgb parentheses\n    var colorStyle = colorTester.style(\"background-color\");\n    if (colorStyle === \"transparent\") {\n        return null;\n    }\n    var rgb = /\\((.+)\\)/.exec(colorStyle)[1]\n        .split(\",\")\n        .map(function (colorValue) {\n        var colorNumber = +colorValue;\n        var hexValue = colorNumber.toString(16);\n        return colorNumber < 16 ? \"0\" + hexValue : hexValue;\n    });\n    if (rgb.length === 4 && rgb[3] === \"00\") {\n        return null;\n    }\n    var hexCode = \"#\" + rgb.join(\"\");\n    colorTester.classed(className, false);\n    return hexCode;\n}\nexports.colorTest = colorTest;\n/**\n * Return relative luminance (defined here: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef)\n * Based on implementation from chroma.js by Gregor Aisch (gka) (licensed under BSD)\n * chroma.js may be found here: https://github.com/gka/chroma.js\n * License may be found here: https://github.com/gka/chroma.js/blob/master/LICENSE\n */\nfunction luminance(color) {\n    var rgb = d3.rgb(color);\n    var lum = function (x) {\n        x = x / 255;\n        return x <= 0.03928 ? x / 12.92 : nativeMath.pow((x + 0.055) / 1.055, 2.4);\n    };\n    var r = lum(rgb.r);\n    var g = lum(rgb.g);\n    var b = lum(rgb.b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n}\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/utils/colorUtils.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/utils/domUtils.js":
/*!************************************************************!*\
  !*** ./node_modules/plottable/build/src/utils/domUtils.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar nativeMath = window.Math;\n/**\n * Gets the bounding box of an element.\n * @param {d3.Selection} element\n * @returns {SVGRed} The bounding box.\n */\nfunction elementBBox(element) {\n    var bbox;\n    // HACKHACK: Firefox won't correctly measure nodes with style \"display: none\" or their descendents (FF Bug 612118).\n    try {\n        bbox = element.node().getBBox();\n    }\n    catch (err) {\n        bbox = { x: 0, y: 0, width: 0, height: 0 };\n    }\n    return bbox;\n}\nexports.elementBBox = elementBBox;\n/**\n * Screen refresh rate which is assumed to be 60fps\n */\nexports.SCREEN_REFRESH_RATE_MILLISECONDS = 1000 / 60;\n/**\n * Polyfill for `window.requestAnimationFrame`.\n * If the function exists, then we use the function directly.\n * Otherwise, we set a timeout on `SCREEN_REFRESH_RATE_MILLISECONDS` and then perform the function.\n *\n * @param {() => void} callback The callback to call in the next animation frame\n */\nfunction requestAnimationFramePolyfill(callback) {\n    if (window.requestAnimationFrame != null) {\n        window.requestAnimationFrame(callback);\n    }\n    else {\n        setTimeout(callback, exports.SCREEN_REFRESH_RATE_MILLISECONDS);\n    }\n}\nexports.requestAnimationFramePolyfill = requestAnimationFramePolyfill;\n/**\n * Calculates the width of the element.\n * The width includes the padding and the border on the element's left and right sides.\n *\n * @param {Element} element The element to query\n * @returns {number} The width of the element.\n */\nfunction elementWidth(element) {\n    var style = window.getComputedStyle(element);\n    return _parseStyleValue(style, \"width\")\n        + _parseStyleValue(style, \"padding-left\")\n        + _parseStyleValue(style, \"padding-right\")\n        + _parseStyleValue(style, \"border-left-width\")\n        + _parseStyleValue(style, \"border-right-width\");\n}\nexports.elementWidth = elementWidth;\n/**\n * Calculates the height of the element.\n * The height includes the padding the and the border on the element's top and bottom sides.\n *\n * @param {Element} element The element to query\n * @returns {number} The height of the element\n */\nfunction elementHeight(element) {\n    var style = window.getComputedStyle(element);\n    return _parseStyleValue(style, \"height\")\n        + _parseStyleValue(style, \"padding-top\")\n        + _parseStyleValue(style, \"padding-bottom\")\n        + _parseStyleValue(style, \"border-top-width\")\n        + _parseStyleValue(style, \"border-bottom-width\");\n}\nexports.elementHeight = elementHeight;\nfunction translate(selection, x, y) {\n    var transformMatrix = d3.transform(selection.attr(\"transform\"));\n    if (x == null) {\n        return transformMatrix.translate;\n    }\n    y = (y == null) ? 0 : y;\n    transformMatrix.translate[0] = x;\n    transformMatrix.translate[1] = y;\n    selection.attr(\"transform\", transformMatrix.toString());\n    return selection;\n}\nexports.translate = translate;\n/**\n * Checks if the first ClientRect overlaps the second.\n *\n * @param {ClientRect} clientRectA The first ClientRect\n * @param {ClientRect} clientRectB The second ClientRect\n * @returns {boolean} If the ClientRects overlap each other.\n */\nfunction clientRectsOverlap(clientRectA, clientRectB) {\n    if (nativeMath.floor(clientRectA.right) <= nativeMath.ceil(clientRectB.left)) {\n        return false;\n    }\n    if (nativeMath.ceil(clientRectA.left) >= nativeMath.floor(clientRectB.right)) {\n        return false;\n    }\n    if (nativeMath.floor(clientRectA.bottom) <= nativeMath.ceil(clientRectB.top)) {\n        return false;\n    }\n    if (nativeMath.ceil(clientRectA.top) >= nativeMath.floor(clientRectB.bottom)) {\n        return false;\n    }\n    return true;\n}\nexports.clientRectsOverlap = clientRectsOverlap;\n/**\n * Returns true if and only if innerClientRect is inside outerClientRect.\n *\n * @param {ClientRect} innerClientRect The first ClientRect\n * @param {ClientRect} outerClientRect The second ClientRect\n * @returns {boolean} If and only if the innerClientRect is inside outerClientRect.\n */\nfunction clientRectInside(innerClientRect, outerClientRect) {\n    return (nativeMath.floor(outerClientRect.left) <= nativeMath.ceil(innerClientRect.left) &&\n        nativeMath.floor(outerClientRect.top) <= nativeMath.ceil(innerClientRect.top) &&\n        nativeMath.floor(innerClientRect.right) <= nativeMath.ceil(outerClientRect.right) &&\n        nativeMath.floor(innerClientRect.bottom) <= nativeMath.ceil(outerClientRect.bottom));\n}\nexports.clientRectInside = clientRectInside;\n/**\n * Retrieves the bounding svg of the input element\n *\n * @param {SVGElement} element The element to query\n * @returns {SVGElement} The bounding svg\n */\nfunction boundingSVG(element) {\n    var ownerSVG = element.ownerSVGElement;\n    if (ownerSVG != null) {\n        return ownerSVG;\n    }\n    if (element.nodeName.toLowerCase() === \"svg\") {\n        return element;\n    }\n    return null; // not in the DOM\n}\nexports.boundingSVG = boundingSVG;\nvar _latestClipPathId = 0;\n/**\n * Generates a ClipPath ID that is unique for this instance of Plottable\n */\nfunction generateUniqueClipPathId() {\n    return \"plottableClipPath\" + ++_latestClipPathId;\n}\nexports.generateUniqueClipPathId = generateUniqueClipPathId;\n/**\n * Returns true if the supplied coordinates or Ranges intersect or are contained by bbox.\n *\n * @param {number | Range} xValOrRange The x coordinate or Range to test\n * @param {number | Range} yValOrRange The y coordinate or Range to test\n * @param {SVGRect} bbox The bbox\n * @param {number} tolerance Amount by which to expand bbox, in each dimension, before\n * testing intersection\n *\n * @returns {boolean} True if the supplied coordinates or Ranges intersect or are\n * contained by bbox, false otherwise.\n */\nfunction intersectsBBox(xValOrRange, yValOrRange, bbox, tolerance) {\n    if (tolerance === void 0) { tolerance = 0.5; }\n    var xRange = _parseRange(xValOrRange);\n    var yRange = _parseRange(yValOrRange);\n    // SVGRects are positioned with sub-pixel accuracy (the default unit\n    // for the x, y, height & width attributes), but user selections (e.g. via\n    // mouse events) usually have pixel accuracy. A tolerance of half-a-pixel\n    // seems appropriate.\n    return bbox.x + bbox.width >= xRange.min - tolerance &&\n        bbox.x <= xRange.max + tolerance &&\n        bbox.y + bbox.height >= yRange.min - tolerance &&\n        bbox.y <= yRange.max + tolerance;\n}\nexports.intersectsBBox = intersectsBBox;\n/**\n * Create a Range from a number or an object with \"min\" and \"max\" defined.\n *\n * @param {any} input The object to parse\n *\n * @returns {Range} The generated Range\n */\nfunction _parseRange(input) {\n    if (typeof (input) === \"number\") {\n        var value = input;\n        return { min: value, max: value };\n    }\n    var range = input;\n    if (range instanceof Object && \"min\" in range && \"max\" in range) {\n        return range;\n    }\n    throw new Error(\"input '\" + input + \"' can't be parsed as an Range\");\n}\nfunction _parseStyleValue(style, property) {\n    var value = style.getPropertyValue(property);\n    var parsedValue = parseFloat(value);\n    return parsedValue || 0;\n}\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/utils/domUtils.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/utils/entityStore.js":
/*!***************************************************************!*\
  !*** ./node_modules/plottable/build/src/utils/entityStore.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Math = __webpack_require__(/*! ./mathUtils */ \"./node_modules/plottable/build/src/utils/mathUtils.js\");\n/**\n * Array-backed implementation of {EntityStore}\n */\nvar EntityArray = (function () {\n    function EntityArray() {\n        this._entities = [];\n    }\n    EntityArray.prototype.add = function (entity) {\n        this._entities.push(entity);\n    };\n    /**\n     * Iterates through array of of entities and computes the closest point using\n     * the standard Euclidean distance formula.\n     */\n    EntityArray.prototype.entityNearest = function (queryPoint, filter) {\n        var closestDistanceSquared = Infinity;\n        var closestPointEntity;\n        this._entities.forEach(function (entity) {\n            if (filter !== undefined && filter(entity) === false) {\n                return;\n            }\n            var distanceSquared = Math.distanceSquared(entity.position, queryPoint);\n            if (distanceSquared < closestDistanceSquared) {\n                closestDistanceSquared = distanceSquared;\n                closestPointEntity = entity;\n            }\n        });\n        if (closestPointEntity === undefined) {\n            return undefined;\n        }\n        return closestPointEntity;\n    };\n    EntityArray.prototype.map = function (callback) {\n        return this._entities.map(function (entity) { return callback(entity); });\n    };\n    return EntityArray;\n}());\nexports.EntityArray = EntityArray;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/utils/entityStore.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/utils/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/plottable/build/src/utils/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar Array = __webpack_require__(/*! ./arrayUtils */ \"./node_modules/plottable/build/src/utils/arrayUtils.js\");\nexports.Array = Array;\nvar Color = __webpack_require__(/*! ./colorUtils */ \"./node_modules/plottable/build/src/utils/colorUtils.js\");\nexports.Color = Color;\nvar DOM = __webpack_require__(/*! ./domUtils */ \"./node_modules/plottable/build/src/utils/domUtils.js\");\nexports.DOM = DOM;\nvar Math = __webpack_require__(/*! ./mathUtils */ \"./node_modules/plottable/build/src/utils/mathUtils.js\");\nexports.Math = Math;\nvar Stacking = __webpack_require__(/*! ./stackingUtils */ \"./node_modules/plottable/build/src/utils/stackingUtils.js\");\nexports.Stacking = Stacking;\nvar Window = __webpack_require__(/*! ./windowUtils */ \"./node_modules/plottable/build/src/utils/windowUtils.js\");\nexports.Window = Window;\n__export(__webpack_require__(/*! ./callbackSet */ \"./node_modules/plottable/build/src/utils/callbackSet.js\"));\n__export(__webpack_require__(/*! ./clientToSVGTranslator */ \"./node_modules/plottable/build/src/utils/clientToSVGTranslator.js\"));\n__export(__webpack_require__(/*! ./entityStore */ \"./node_modules/plottable/build/src/utils/entityStore.js\"));\n__export(__webpack_require__(/*! ./map */ \"./node_modules/plottable/build/src/utils/map.js\"));\n__export(__webpack_require__(/*! ./set */ \"./node_modules/plottable/build/src/utils/set.js\"));\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/utils/index.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/utils/map.js":
/*!*******************************************************!*\
  !*** ./node_modules/plottable/build/src/utils/map.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Math = __webpack_require__(/*! ./mathUtils */ \"./node_modules/plottable/build/src/utils/mathUtils.js\");\n/**\n * Shim for ES6 map.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map\n */\nvar Map = (function () {\n    function Map() {\n        if (typeof window.Map === \"function\") {\n            this._es6Map = new window.Map();\n        }\n        else {\n            this._keyValuePairs = [];\n        }\n    }\n    Map.prototype.set = function (key, value) {\n        if (Math.isNaN(key)) {\n            throw new Error(\"NaN may not be used as a key to the Map\");\n        }\n        if (this._es6Map != null) {\n            this._es6Map.set(key, value);\n            return this;\n        }\n        for (var i = 0; i < this._keyValuePairs.length; i++) {\n            if (this._keyValuePairs[i].key === key) {\n                this._keyValuePairs[i].value = value;\n                return this;\n            }\n        }\n        this._keyValuePairs.push({ key: key, value: value });\n        return this;\n    };\n    Map.prototype.get = function (key) {\n        if (this._es6Map != null) {\n            return this._es6Map.get(key);\n        }\n        for (var i = 0; i < this._keyValuePairs.length; i++) {\n            if (this._keyValuePairs[i].key === key) {\n                return this._keyValuePairs[i].value;\n            }\n        }\n        return undefined;\n    };\n    Map.prototype.has = function (key) {\n        if (this._es6Map != null) {\n            return this._es6Map.has(key);\n        }\n        for (var i = 0; i < this._keyValuePairs.length; i++) {\n            if (this._keyValuePairs[i].key === key) {\n                return true;\n            }\n        }\n        return false;\n    };\n    Map.prototype.forEach = function (callbackFn, thisArg) {\n        var _this = this;\n        if (this._es6Map != null) {\n            var callbackWrapper = function (value, key) { return callbackFn.call(thisArg, value, key, _this); };\n            this._es6Map.forEach(callbackWrapper, thisArg);\n            return;\n        }\n        this._keyValuePairs.forEach(function (keyValuePair) {\n            callbackFn.call(thisArg, keyValuePair.value, keyValuePair.key, _this);\n        });\n    };\n    Map.prototype.delete = function (key) {\n        if (this._es6Map != null) {\n            return this._es6Map.delete(key);\n        }\n        for (var i = 0; i < this._keyValuePairs.length; i++) {\n            if (this._keyValuePairs[i].key === key) {\n                this._keyValuePairs.splice(i, 1);\n                return true;\n            }\n        }\n        return false;\n    };\n    return Map;\n}());\nexports.Map = Map;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/utils/map.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/utils/mathUtils.js":
/*!*************************************************************!*\
  !*** ./node_modules/plottable/build/src/utils/mathUtils.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar nativeMath = window.Math;\n/**\n * Checks if x is between a and b.\n *\n * @param {number} x The value to test if in range\n * @param {number} a The beginning of the (inclusive) range\n * @param {number} b The ending of the (inclusive) range\n * @return {boolean} Whether x is in [a, b]\n */\nfunction inRange(x, a, b) {\n    return (nativeMath.min(a, b) <= x && x <= nativeMath.max(a, b));\n}\nexports.inRange = inRange;\n/**\n * Clamps x to the range [min, max].\n *\n * @param {number} x The value to be clamped.\n * @param {number} min The minimum value.\n * @param {number} max The maximum value.\n * @return {number} A clamped value in the range [min, max].\n */\nfunction clamp(x, min, max) {\n    return nativeMath.min(nativeMath.max(min, x), max);\n}\nexports.clamp = clamp;\nfunction max(array, firstArg, secondArg) {\n    var accessor = typeof (firstArg) === \"function\" ? firstArg : null;\n    var defaultValue = accessor == null ? firstArg : secondArg;\n    /* tslint:disable:ban */\n    var maxValue = accessor == null ? d3.max(array) : d3.max(array, accessor);\n    /* tslint:enable:ban */\n    return maxValue !== undefined ? maxValue : defaultValue;\n}\nexports.max = max;\nfunction min(array, firstArg, secondArg) {\n    var accessor = typeof (firstArg) === \"function\" ? firstArg : null;\n    var defaultValue = accessor == null ? firstArg : secondArg;\n    /* tslint:disable:ban */\n    var minValue = accessor == null ? d3.min(array) : d3.min(array, accessor);\n    /* tslint:enable:ban */\n    return minValue !== undefined ? minValue : defaultValue;\n}\nexports.min = min;\n/**\n * Returns true **only** if x is NaN\n */\nfunction isNaN(n) {\n    return n !== n;\n}\nexports.isNaN = isNaN;\n/**\n * Returns true if the argument is a number, which is not NaN\n * Numbers represented as strings do not pass this function\n */\nfunction isValidNumber(n) {\n    return typeof n === \"number\" && !isNaN(n) && isFinite(n);\n}\nexports.isValidNumber = isValidNumber;\n/**\n * Generates an array of consecutive, strictly increasing numbers\n * in the range [start, stop) separeted by step\n */\nfunction range(start, stop, step) {\n    if (step === void 0) { step = 1; }\n    if (step === 0) {\n        throw new Error(\"step cannot be 0\");\n    }\n    var length = nativeMath.max(nativeMath.ceil((stop - start) / step), 0);\n    var range = [];\n    for (var i = 0; i < length; ++i) {\n        range[i] = start + step * i;\n    }\n    return range;\n}\nexports.range = range;\n/**\n * Returns the square of the distance between two points\n *\n * @param {Point} p1\n * @param {Point} p2\n * @return {number} dist(p1, p2)^2\n */\nfunction distanceSquared(p1, p2) {\n    return nativeMath.pow(p2.y - p1.y, 2) + nativeMath.pow(p2.x - p1.x, 2);\n}\nexports.distanceSquared = distanceSquared;\nfunction degreesToRadians(degree) {\n    return degree / 360 * nativeMath.PI * 2;\n}\nexports.degreesToRadians = degreesToRadians;\n/**\n * Returns if the point is within the bounds. Points along\n * the bounds are considered \"within\" as well.\n * @param {Point} p Point in considerations.\n * @param {Bounds} bounds Bounds within which to check for inclusion.\n */\nfunction within(p, bounds) {\n    return bounds.topLeft.x <= p.x\n        && bounds.bottomRight.x >= p.x\n        && bounds.topLeft.y <= p.y\n        && bounds.bottomRight.y >= p.y;\n}\nexports.within = within;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/utils/mathUtils.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/utils/set.js":
/*!*******************************************************!*\
  !*** ./node_modules/plottable/build/src/utils/set.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * Shim for ES6 set.\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set\n */\nvar Set = (function () {\n    function Set() {\n        if (typeof window.Set === \"function\") {\n            this._es6Set = new window.Set();\n        }\n        else {\n            this._values = [];\n        }\n        this.size = 0;\n    }\n    Set.prototype.add = function (value) {\n        if (this._es6Set != null) {\n            this._es6Set.add(value);\n            this.size = this._es6Set.size;\n            return this;\n        }\n        if (!this.has(value)) {\n            this._values.push(value);\n            this.size = this._values.length;\n        }\n        return this;\n    };\n    Set.prototype.delete = function (value) {\n        if (this._es6Set != null) {\n            var deleted = this._es6Set.delete(value);\n            this.size = this._es6Set.size;\n            return deleted;\n        }\n        var index = this._values.indexOf(value);\n        if (index !== -1) {\n            this._values.splice(index, 1);\n            this.size = this._values.length;\n            return true;\n        }\n        return false;\n    };\n    Set.prototype.has = function (value) {\n        if (this._es6Set != null) {\n            return this._es6Set.has(value);\n        }\n        return this._values.indexOf(value) !== -1;\n    };\n    Set.prototype.forEach = function (callback, thisArg) {\n        var _this = this;\n        if (this._es6Set != null) {\n            var callbackWrapper = function (value, value2) { return callback.call(thisArg, value, value2, _this); };\n            this._es6Set.forEach(callbackWrapper, thisArg);\n            return;\n        }\n        this._values.forEach(function (value) {\n            callback.call(thisArg, value, value, _this);\n        });\n    };\n    return Set;\n}());\nexports.Set = Set;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/utils/set.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/utils/stackingUtils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/plottable/build/src/utils/stackingUtils.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Utils = __webpack_require__(/*! ./ */ \"./node_modules/plottable/build/src/utils/index.js\");\nvar nativeMath = window.Math;\n/**\n * Computes the StackingResult (value and offset) for each data point in each Dataset.\n *\n * @param {Dataset[]} datasets The Datasets to be stacked on top of each other in the order of stacking\n * @param {Accessor<any>} keyAccessor Accessor for the key of the data\n * @param {Accessor<number>} valueAccessor Accessor for the value of the data\n * @param {IStackingOrder} stackingOrder The order of stacking (default \"bottomup\")\n * @return {StackingResult} value and offset for each datapoint in each Dataset\n */\nfunction stack(datasets, keyAccessor, valueAccessor, stackingOrder) {\n    if (stackingOrder === void 0) { stackingOrder = \"bottomup\"; }\n    var positiveOffsets = d3.map();\n    var negativeOffsets = d3.map();\n    var datasetToKeyToStackedDatum = new Utils.Map();\n    if (stackingOrder === \"topdown\") {\n        datasets = datasets.slice();\n        datasets.reverse();\n    }\n    datasets.forEach(function (dataset) {\n        var keyToStackedDatum = new Utils.Map();\n        dataset.data().forEach(function (datum, index) {\n            var key = normalizeKey(keyAccessor(datum, index, dataset));\n            var value = +valueAccessor(datum, index, dataset);\n            var offset;\n            var offsetMap = (value >= 0) ? positiveOffsets : negativeOffsets;\n            if (offsetMap.has(key)) {\n                offset = offsetMap.get(key);\n                offsetMap.set(key, offset + value);\n            }\n            else {\n                offset = 0;\n                offsetMap.set(key, value);\n            }\n            keyToStackedDatum.set(key, {\n                offset: offset,\n                value: value,\n                axisValue: keyAccessor(datum, index, dataset),\n            });\n        });\n        datasetToKeyToStackedDatum.set(dataset, keyToStackedDatum);\n    });\n    return datasetToKeyToStackedDatum;\n}\nexports.stack = stack;\n/**\n * Computes the maximum and minimum extents of each stack individually.\n *\n * @param {GenericStackingResult} stackingResult The value and offset information for each datapoint in each dataset\n * @return { { maximumExtents: Utils.Map<D, number>, minimumExtents: Utils.Map<D, number> } } The maximum and minimum extents\n * of each individual stack.\n */\nfunction stackedExtents(stackingResult) {\n    var maximumExtents = new Utils.Map();\n    var minimumExtents = new Utils.Map();\n    stackingResult.forEach(function (stack) {\n        stack.forEach(function (datum, key) {\n            // correctly handle negative bar stacks\n            var maximalValue = Utils.Math.max([datum.offset + datum.value, datum.offset], datum.offset);\n            var minimalValue = Utils.Math.min([datum.offset + datum.value, datum.offset], datum.offset);\n            if (!maximumExtents.has(key)) {\n                maximumExtents.set(key, { extent: maximalValue, axisValue: datum.axisValue });\n            }\n            else if (maximumExtents.get(key).extent < maximalValue) {\n                maximumExtents.set(key, { extent: maximalValue, axisValue: datum.axisValue });\n            }\n            if (!minimumExtents.has(key)) {\n                minimumExtents.set(key, { extent: minimalValue, axisValue: datum.axisValue });\n            }\n            else if (minimumExtents.get(key).extent > (minimalValue)) {\n                minimumExtents.set(key, { extent: minimalValue, axisValue: datum.axisValue });\n            }\n        });\n    });\n    return { maximumExtents: maximumExtents, minimumExtents: minimumExtents };\n}\nexports.stackedExtents = stackedExtents;\n/**\n * Computes the total extent over all data points in all Datasets, taking stacking into consideration.\n *\n * @param {StackingResult} stackingResult The value and offset information for each datapoint in each dataset\n * @param {Accessor<any>} keyAccessor Accessor for the key of the data existent in the stackingResult\n * @param {Accessor<boolean>} filter A filter for data to be considered when computing the total extent\n * @return {[number, number]} The total extent\n */\nfunction stackedExtent(stackingResult, keyAccessor, filter) {\n    var extents = [];\n    stackingResult.forEach(function (stackedDatumMap, dataset) {\n        dataset.data().forEach(function (datum, index) {\n            if (filter != null && !filter(datum, index, dataset)) {\n                return;\n            }\n            var stackedDatum = stackedDatumMap.get(normalizeKey(keyAccessor(datum, index, dataset)));\n            extents.push(stackedDatum.value + stackedDatum.offset);\n        });\n    });\n    var maxStackExtent = Utils.Math.max(extents, 0);\n    var minStackExtent = Utils.Math.min(extents, 0);\n    return [nativeMath.min(minStackExtent, 0), nativeMath.max(0, maxStackExtent)];\n}\nexports.stackedExtent = stackedExtent;\n/**\n * Normalizes a key used for stacking\n *\n * @param {any} key The key to be normalized\n * @return {string} The stringified key\n */\nfunction normalizeKey(key) {\n    return String(key);\n}\nexports.normalizeKey = normalizeKey;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/utils/stackingUtils.js?");

/***/ }),

/***/ "./node_modules/plottable/build/src/utils/windowUtils.js":
/*!***************************************************************!*\
  !*** ./node_modules/plottable/build/src/utils/windowUtils.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nvar Configs = __webpack_require__(/*! ../core/config */ \"./node_modules/plottable/build/src/core/config.js\");\n/**\n * Print a warning message to the console, if it is available.\n *\n * @param {string} The warnings to print\n */\nfunction warn(warning) {\n    if (!Configs.SHOW_WARNINGS) {\n        return;\n    }\n    /* tslint:disable:no-console */\n    if (window.console != null) {\n        if (window.console.warn != null) {\n            console.warn(warning);\n        }\n        else if (window.console.log != null) {\n            console.log(warning);\n        }\n    }\n    /* tslint:enable:no-console */\n}\nexports.warn = warn;\n/**\n * Is like setTimeout, but activates synchronously if time=0\n * We special case 0 because of an observed issue where calling setTimeout causes visible flickering.\n * We believe this is because when requestAnimationFrame calls into the paint function, as soon as that function finishes\n * evaluating, the results are painted to the screen. As a result, if we want something to occur immediately but call setTimeout\n * with time=0, then it is pushed to the call stack and rendered in the next frame, so the component that was rendered via\n * setTimeout appears out-of-sync with the rest of the plot.\n */\nfunction setTimeout(f, time) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    if (time === 0) {\n        f(args);\n        return -1;\n    }\n    else {\n        return window.setTimeout(f, time, args);\n    }\n}\nexports.setTimeout = setTimeout;\n/**\n * Sends a deprecation warning to the console. The warning includes the name of the deprecated method,\n * version number of the deprecation, and an optional message.\n *\n * To be used in the first line of a deprecated method.\n *\n * @param {string} callingMethod The name of the method being deprecated\n * @param {string} version The version when the tagged method became obsolete\n * @param {string?} message Optional message to be shown with the warning\n */\nfunction deprecated(callingMethod, version, message) {\n    if (message === void 0) { message = \"\"; }\n    warn(\"Method \" + callingMethod + \" has been deprecated in version \" + version +\n        \". Please refer to the release notes. \" + message);\n}\nexports.deprecated = deprecated;\n\n\n//# sourceURL=webpack:///./node_modules/plottable/build/src/utils/windowUtils.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : undefined;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && btoa) {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack:///./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/animators/baseAnimator.js":
/*!*************************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/animators/baseAnimator.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar BaseAnimator = (function () {\n    function BaseAnimator() {\n        this.duration(BaseAnimator.DEFAULT_DURATION_MILLISECONDS);\n        this.delay(0);\n        this.easing(BaseAnimator.DEFAULT_EASING);\n        this.moveX(0);\n        this.moveY(0);\n    }\n    BaseAnimator.prototype.animate = function (selection) {\n        var xForm = d3.transform(\"\");\n        xForm.translate = [this.moveX(), this.moveY()];\n        selection.attr(\"transform\", xForm.toString());\n        xForm.translate = [0, 0];\n        return this._animate(selection, { transform: xForm.toString() });\n    };\n    BaseAnimator.prototype._animate = function (selection, attr) {\n        return selection.transition()\n            .ease(this.easing())\n            .duration(this.duration())\n            .delay(this.delay())\n            .attr(attr);\n    };\n    BaseAnimator.prototype.duration = function (duration) {\n        if (duration == null) {\n            return this._duration;\n        }\n        else {\n            this._duration = duration;\n            return this;\n        }\n    };\n    BaseAnimator.prototype.moveX = function (shift) {\n        if (shift == null) {\n            return this._moveX;\n        }\n        else {\n            this._moveX = shift;\n            return this;\n        }\n    };\n    BaseAnimator.prototype.moveY = function (shift) {\n        if (shift == null) {\n            return this._moveY;\n        }\n        else {\n            this._moveY = shift;\n            return this;\n        }\n    };\n    BaseAnimator.prototype.delay = function (delay) {\n        if (delay == null) {\n            return this._delay;\n        }\n        else {\n            this._delay = delay;\n            return this;\n        }\n    };\n    BaseAnimator.prototype.easing = function (easing) {\n        if (easing == null) {\n            return this._easing;\n        }\n        else {\n            this._easing = easing;\n            return this;\n        }\n    };\n    return BaseAnimator;\n}());\n/**\n * The default duration of the animation in milliseconds\n */\nBaseAnimator.DEFAULT_DURATION_MILLISECONDS = 300;\n/**\n * The default easing of the animation\n */\nBaseAnimator.DEFAULT_EASING = \"exp-out\";\nexports.BaseAnimator = BaseAnimator;\n//# sourceMappingURL=baseAnimator.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/animators/baseAnimator.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/animators/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/animators/index.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./baseAnimator */ \"./node_modules/svg-typewriter/build/src/animators/baseAnimator.js\"));\n__export(__webpack_require__(/*! ./opacityAnimator */ \"./node_modules/svg-typewriter/build/src/animators/opacityAnimator.js\"));\n__export(__webpack_require__(/*! ./unveilAnimator */ \"./node_modules/svg-typewriter/build/src/animators/unveilAnimator.js\"));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/animators/index.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/animators/opacityAnimator.js":
/*!****************************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/animators/opacityAnimator.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar baseAnimator_1 = __webpack_require__(/*! ./baseAnimator */ \"./node_modules/svg-typewriter/build/src/animators/baseAnimator.js\");\nvar OpacityAnimator = (function (_super) {\n    __extends(OpacityAnimator, _super);\n    function OpacityAnimator() {\n        return _super.apply(this, arguments) || this;\n    }\n    OpacityAnimator.prototype.animate = function (selection) {\n        var area = selection.select(\".text-area\");\n        area.attr(\"opacity\", 0);\n        var attr = {\n            opacity: 1,\n        };\n        this._animate(area, attr);\n        return _super.prototype.animate.call(this, selection);\n    };\n    return OpacityAnimator;\n}(baseAnimator_1.BaseAnimator));\nexports.OpacityAnimator = OpacityAnimator;\n//# sourceMappingURL=opacityAnimator.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/animators/opacityAnimator.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/animators/unveilAnimator.js":
/*!***************************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/animators/unveilAnimator.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/svg-typewriter/build/src/utils/index.js\");\nvar baseAnimator_1 = __webpack_require__(/*! ./baseAnimator */ \"./node_modules/svg-typewriter/build/src/animators/baseAnimator.js\");\nvar UnveilAnimator = (function (_super) {\n    __extends(UnveilAnimator, _super);\n    function UnveilAnimator() {\n        var _this = _super.call(this) || this;\n        _this.direction(\"bottom\");\n        return _this;\n    }\n    UnveilAnimator.prototype.direction = function (direction) {\n        if (direction == null) {\n            return this._direction;\n        }\n        else {\n            if (UnveilAnimator.SupportedDirections.indexOf(direction) === -1) {\n                throw new Error(\"unsupported direction - \" + direction);\n            }\n            this._direction = direction;\n            return this;\n        }\n    };\n    UnveilAnimator.prototype.animate = function (selection) {\n        var attr = Utils.DOM.getBBox(selection);\n        var mask = selection.select(\".clip-rect\");\n        mask.attr(\"width\", 0);\n        mask.attr(\"height\", 0);\n        switch (this._direction) {\n            case \"top\":\n                mask.attr(\"y\", attr.y + attr.height);\n                mask.attr(\"x\", attr.x);\n                mask.attr(\"width\", attr.width);\n                break;\n            case \"bottom\":\n                mask.attr(\"y\", attr.y);\n                mask.attr(\"x\", attr.x);\n                mask.attr(\"width\", attr.width);\n                break;\n            case \"left\":\n                mask.attr(\"y\", attr.y);\n                mask.attr(\"x\", attr.x);\n                mask.attr(\"height\", attr.height);\n                break;\n            case \"right\":\n                mask.attr(\"y\", attr.y);\n                mask.attr(\"x\", attr.x + attr.width);\n                mask.attr(\"height\", attr.height);\n                break;\n            default:\n                break;\n        }\n        this._animate(mask, attr);\n        return _super.prototype.animate.call(this, selection);\n    };\n    return UnveilAnimator;\n}(baseAnimator_1.BaseAnimator));\nUnveilAnimator.SupportedDirections = [\"top\", \"bottom\", \"left\", \"right\"];\nexports.UnveilAnimator = UnveilAnimator;\n//# sourceMappingURL=unveilAnimator.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/animators/unveilAnimator.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/index.js":
/*!********************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./animators */ \"./node_modules/svg-typewriter/build/src/animators/index.js\"));\n__export(__webpack_require__(/*! ./measurers */ \"./node_modules/svg-typewriter/build/src/measurers/index.js\"));\n__export(__webpack_require__(/*! ./utils */ \"./node_modules/svg-typewriter/build/src/utils/index.js\"));\n__export(__webpack_require__(/*! ./wrappers */ \"./node_modules/svg-typewriter/build/src/wrappers/index.js\"));\n__export(__webpack_require__(/*! ./writers */ \"./node_modules/svg-typewriter/build/src/writers/index.js\"));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/index.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/measurers/abstractMeasurer.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/measurers/abstractMeasurer.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/svg-typewriter/build/src/utils/index.js\");\n;\nvar AbstractMeasurer = (function () {\n    function AbstractMeasurer(area, className) {\n        this.textMeasurer = this.getTextMeasurer(area, className);\n    }\n    AbstractMeasurer.prototype.measure = function (text) {\n        if (text === void 0) { text = AbstractMeasurer.HEIGHT_TEXT; }\n        return this.textMeasurer(text);\n    };\n    AbstractMeasurer.prototype.checkSelectionIsText = function (d) {\n        return d[0][0].tagName === \"text\" || !d.select(\"text\").empty();\n    };\n    AbstractMeasurer.prototype.getTextMeasurer = function (area, className) {\n        var _this = this;\n        if (!this.checkSelectionIsText(area)) {\n            var textElement_1 = area.append(\"text\");\n            if (className) {\n                textElement_1.classed(className, true);\n            }\n            textElement_1.remove();\n            return function (text) {\n                area.node().appendChild(textElement_1.node());\n                var areaDimension = _this.measureBBox(textElement_1, text);\n                textElement_1.remove();\n                return areaDimension;\n            };\n        }\n        else {\n            var parentNode_1 = area.node().parentNode;\n            var textSelection_1;\n            if (area[0][0].tagName === \"text\") {\n                textSelection_1 = area;\n            }\n            else {\n                textSelection_1 = area.select(\"text\");\n            }\n            area.remove();\n            return function (text) {\n                parentNode_1.appendChild(area.node());\n                var areaDimension = _this.measureBBox(textSelection_1, text);\n                area.remove();\n                return areaDimension;\n            };\n        }\n    };\n    AbstractMeasurer.prototype.measureBBox = function (d, text) {\n        d.text(text);\n        var bb = Utils.DOM.getBBox(d);\n        return { width: bb.width, height: bb.height };\n    };\n    return AbstractMeasurer;\n}());\nAbstractMeasurer.HEIGHT_TEXT = \"bqpdl\";\nexports.AbstractMeasurer = AbstractMeasurer;\n//# sourceMappingURL=abstractMeasurer.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/measurers/abstractMeasurer.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/measurers/cacheCharacterMeasurer.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/measurers/cacheCharacterMeasurer.js ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/svg-typewriter/build/src/utils/index.js\");\nvar characterMeasurer_1 = __webpack_require__(/*! ./characterMeasurer */ \"./node_modules/svg-typewriter/build/src/measurers/characterMeasurer.js\");\nvar CacheCharacterMeasurer = (function (_super) {\n    __extends(CacheCharacterMeasurer, _super);\n    function CacheCharacterMeasurer(area, className, useGuards) {\n        var _this = _super.call(this, area, className, useGuards) || this;\n        _this.cache = new Utils.Cache(function (c) {\n            return _this._measureCharacterNotFromCache(c);\n        });\n        return _this;\n    }\n    CacheCharacterMeasurer.prototype._measureCharacterNotFromCache = function (c) {\n        return _super.prototype._measureCharacter.call(this, c);\n    };\n    CacheCharacterMeasurer.prototype._measureCharacter = function (c) {\n        return this.cache.get(c);\n    };\n    CacheCharacterMeasurer.prototype.reset = function () {\n        this.cache.clear();\n    };\n    return CacheCharacterMeasurer;\n}(characterMeasurer_1.CharacterMeasurer));\nexports.CacheCharacterMeasurer = CacheCharacterMeasurer;\n//# sourceMappingURL=cacheCharacterMeasurer.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/measurers/cacheCharacterMeasurer.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/measurers/cacheMeasurer.js":
/*!**************************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/measurers/cacheMeasurer.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/svg-typewriter/build/src/utils/index.js\");\nvar cacheCharacterMeasurer_1 = __webpack_require__(/*! ./cacheCharacterMeasurer */ \"./node_modules/svg-typewriter/build/src/measurers/cacheCharacterMeasurer.js\");\nvar CacheMeasurer = (function (_super) {\n    __extends(CacheMeasurer, _super);\n    function CacheMeasurer(area, className) {\n        var _this = _super.call(this, area, className) || this;\n        _this.dimCache = new Utils.Cache(function (s) {\n            return _this._measureNotFromCache(s);\n        });\n        return _this;\n    }\n    CacheMeasurer.prototype._measureNotFromCache = function (s) {\n        return _super.prototype.measure.call(this, s);\n    };\n    CacheMeasurer.prototype.measure = function (s) {\n        return this.dimCache.get(s);\n    };\n    CacheMeasurer.prototype.reset = function () {\n        this.dimCache.clear();\n        _super.prototype.reset.call(this);\n    };\n    return CacheMeasurer;\n}(cacheCharacterMeasurer_1.CacheCharacterMeasurer));\nexports.CacheMeasurer = CacheMeasurer;\n//# sourceMappingURL=cacheMeasurer.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/measurers/cacheMeasurer.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/measurers/characterMeasurer.js":
/*!******************************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/measurers/characterMeasurer.js ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar measurer_1 = __webpack_require__(/*! ./measurer */ \"./node_modules/svg-typewriter/build/src/measurers/measurer.js\");\nvar CharacterMeasurer = (function (_super) {\n    __extends(CharacterMeasurer, _super);\n    function CharacterMeasurer() {\n        return _super.apply(this, arguments) || this;\n    }\n    CharacterMeasurer.prototype._measureCharacter = function (c) {\n        return _super.prototype._measureLine.call(this, c);\n    };\n    CharacterMeasurer.prototype._measureLine = function (line) {\n        var _this = this;\n        var charactersDimensions = line.split(\"\").map(function (c) { return _this._measureCharacter(c); });\n        return {\n            height: d3.max(charactersDimensions, function (dim) { return dim.height; }),\n            width: d3.sum(charactersDimensions, function (dim) { return dim.width; }),\n        };\n    };\n    return CharacterMeasurer;\n}(measurer_1.Measurer));\nexports.CharacterMeasurer = CharacterMeasurer;\n//# sourceMappingURL=characterMeasurer.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/measurers/characterMeasurer.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/measurers/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/measurers/index.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./abstractMeasurer */ \"./node_modules/svg-typewriter/build/src/measurers/abstractMeasurer.js\"));\n__export(__webpack_require__(/*! ./cacheCharacterMeasurer */ \"./node_modules/svg-typewriter/build/src/measurers/cacheCharacterMeasurer.js\"));\n__export(__webpack_require__(/*! ./cacheMeasurer */ \"./node_modules/svg-typewriter/build/src/measurers/cacheMeasurer.js\"));\n__export(__webpack_require__(/*! ./characterMeasurer */ \"./node_modules/svg-typewriter/build/src/measurers/characterMeasurer.js\"));\n__export(__webpack_require__(/*! ./measurer */ \"./node_modules/svg-typewriter/build/src/measurers/measurer.js\"));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/measurers/index.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/measurers/measurer.js":
/*!*********************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/measurers/measurer.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar abstractMeasurer_1 = __webpack_require__(/*! ./abstractMeasurer */ \"./node_modules/svg-typewriter/build/src/measurers/abstractMeasurer.js\");\nvar Measurer = (function (_super) {\n    __extends(Measurer, _super);\n    function Measurer(area, className, useGuards) {\n        if (className === void 0) { className = null; }\n        if (useGuards === void 0) { useGuards = false; }\n        var _this = _super.call(this, area, className) || this;\n        _this.useGuards = useGuards;\n        return _this;\n    }\n    // Guards assures same line height and width of whitespaces on both ends.\n    Measurer.prototype._addGuards = function (text) {\n        return abstractMeasurer_1.AbstractMeasurer.HEIGHT_TEXT + text + abstractMeasurer_1.AbstractMeasurer.HEIGHT_TEXT;\n    };\n    Measurer.prototype._measureLine = function (line, forceGuards) {\n        if (forceGuards === void 0) { forceGuards = false; }\n        var useGuards = this.useGuards || forceGuards || /^[\\t ]$/.test(line);\n        var measuredLine = useGuards ? this._addGuards(line) : line;\n        var measuredLineDimensions = _super.prototype.measure.call(this, measuredLine);\n        measuredLineDimensions.width -= useGuards ? (2 * this.getGuardWidth()) : 0;\n        return measuredLineDimensions;\n    };\n    Measurer.prototype.measure = function (text) {\n        var _this = this;\n        if (text === void 0) { text = abstractMeasurer_1.AbstractMeasurer.HEIGHT_TEXT; }\n        if (text.trim() === \"\") {\n            return { width: 0, height: 0 };\n        }\n        var linesDimensions = text.trim().split(\"\\n\").map(function (line) { return _this._measureLine(line); });\n        return {\n            height: d3.sum(linesDimensions, function (dim) { return dim.height; }),\n            width: d3.max(linesDimensions, function (dim) { return dim.width; }),\n        };\n    };\n    Measurer.prototype.getGuardWidth = function () {\n        if (this.guardWidth == null) {\n            this.guardWidth = _super.prototype.measure.call(this).width;\n        }\n        return this.guardWidth;\n    };\n    return Measurer;\n}(abstractMeasurer_1.AbstractMeasurer));\nexports.Measurer = Measurer;\n//# sourceMappingURL=measurer.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/measurers/measurer.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/utils/cache.js":
/*!**************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/utils/cache.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Cache = (function () {\n    /**\n     * @constructor\n     *\n     * @param {string} compute The function whose results will be cached.\n     */\n    function Cache(compute) {\n        this.cache = d3.map();\n        this.compute = compute;\n    }\n    /**\n     * Attempt to look up k in the cache, computing the result if it isn't\n     * found.\n     *\n     * @param {string} k The key to look up in the cache.\n     * @return {T} The value associated with k; the result of compute(k).\n     */\n    Cache.prototype.get = function (k) {\n        if (!this.cache.has(k)) {\n            this.cache.set(k, this.compute(k));\n        }\n        return this.cache.get(k);\n    };\n    /**\n     * Reset the cache empty.\n     *\n     * @return {Cache<T>} The calling Cache.\n     */\n    Cache.prototype.clear = function () {\n        this.cache = d3.map();\n        return this;\n    };\n    return Cache;\n}());\nexports.Cache = Cache;\n//# sourceMappingURL=cache.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/utils/cache.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/utils/dom.js":
/*!************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/utils/dom.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar DOM = (function () {\n    function DOM() {\n    }\n    DOM.transform = function (s, x, y) {\n        var xform = d3.transform(s.attr(\"transform\"));\n        if (x == null) {\n            return xform.translate;\n        }\n        else {\n            y = (y == null) ? 0 : y;\n            xform.translate[0] = x;\n            xform.translate[1] = y;\n            s.attr(\"transform\", xform.toString());\n            return s;\n        }\n    };\n    DOM.getBBox = function (element) {\n        var bbox;\n        try {\n            bbox = element.node().getBBox();\n        }\n        catch (err) {\n            bbox = {\n                height: 0,\n                width: 0,\n                x: 0,\n                y: 0,\n            };\n        }\n        return bbox;\n    };\n    return DOM;\n}());\nexports.DOM = DOM;\n//# sourceMappingURL=dom.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/utils/dom.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/utils/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/utils/index.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./cache */ \"./node_modules/svg-typewriter/build/src/utils/cache.js\"));\n__export(__webpack_require__(/*! ./dom */ \"./node_modules/svg-typewriter/build/src/utils/dom.js\"));\n__export(__webpack_require__(/*! ./methods */ \"./node_modules/svg-typewriter/build/src/utils/methods.js\"));\n__export(__webpack_require__(/*! ./stringMethods */ \"./node_modules/svg-typewriter/build/src/utils/stringMethods.js\"));\n__export(__webpack_require__(/*! ./tokenizer */ \"./node_modules/svg-typewriter/build/src/utils/tokenizer.js\"));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/utils/index.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/utils/methods.js":
/*!****************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/utils/methods.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar Methods = (function () {\n    function Methods() {\n    }\n    /**\n     * Check if two arrays are equal by strict equality.\n     */\n    Methods.arrayEq = function (a, b) {\n        // Technically, null and undefined are arrays too\n        if (a == null || b == null) {\n            return a === b;\n        }\n        if (a.length !== b.length) {\n            return false;\n        }\n        for (var i = 0; i < a.length; i++) {\n            if (a[i] !== b[i]) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param {any} a Object to check against b for equality.\n     * @param {any} b Object to check against a for equality.\n     *\n     * @returns {boolean} whether or not two objects share the same keys, and\n     *          values associated with those keys. Values will be compared\n     *          with ===.\n     */\n    Methods.objEq = function (a, b) {\n        if (a == null || b == null) {\n            return a === b;\n        }\n        var keysA = Object.keys(a).sort();\n        var keysB = Object.keys(b).sort();\n        var valuesA = keysA.map(function (k) { return a[k]; });\n        var valuesB = keysB.map(function (k) { return b[k]; });\n        return Methods.arrayEq(keysA, keysB) && Methods.arrayEq(valuesA, valuesB);\n    };\n    Methods.strictEq = function (a, b) {\n        return a === b;\n    };\n    return Methods;\n}());\nexports.Methods = Methods;\n//# sourceMappingURL=methods.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/utils/methods.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/utils/stringMethods.js":
/*!**********************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/utils/stringMethods.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar StringMethods = (function () {\n    function StringMethods() {\n    }\n    /**\n     * Treat all sequences of consecutive spaces as a single \" \".\n     */\n    StringMethods.combineWhitespace = function (str) {\n        return str.replace(/[ \\t]+/g, \" \");\n    };\n    StringMethods.isNotEmptyString = function (str) {\n        return str && str.trim() !== \"\";\n    };\n    StringMethods.trimStart = function (str, splitter) {\n        if (!str) {\n            return str;\n        }\n        var chars = str.split(\"\");\n        var reduceFunction = splitter ? function (s) { return s.split(splitter).some(StringMethods.isNotEmptyString); }\n            : StringMethods.isNotEmptyString;\n        return chars.reduce(function (s, c) { return reduceFunction(s + c) ? s + c : s; }, \"\");\n    };\n    StringMethods.trimEnd = function (str, c) {\n        if (!str) {\n            return str;\n        }\n        var reversedChars = str.split(\"\");\n        reversedChars.reverse();\n        reversedChars = StringMethods.trimStart(reversedChars.join(\"\"), c).split(\"\");\n        reversedChars.reverse();\n        return reversedChars.join(\"\");\n    };\n    return StringMethods;\n}());\nexports.StringMethods = StringMethods;\n//# sourceMappingURL=stringMethods.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/utils/stringMethods.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/utils/tokenizer.js":
/*!******************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/utils/tokenizer.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar Tokenizer = (function () {\n    function Tokenizer() {\n        this.WordDividerRegExp = new RegExp(\"\\\\W\");\n        this.WhitespaceRegExp = new RegExp(\"\\\\s\");\n    }\n    Tokenizer.prototype.tokenize = function (line) {\n        var _this = this;\n        return line.split(\"\").reduce(function (tokens, c) {\n            return tokens.slice(0, -1).concat(_this.shouldCreateNewToken(tokens[tokens.length - 1], c));\n        }, [\"\"]);\n    };\n    Tokenizer.prototype.shouldCreateNewToken = function (token, newCharacter) {\n        if (!token) {\n            return [newCharacter];\n        }\n        var lastCharacter = token[token.length - 1];\n        if (this.WhitespaceRegExp.test(lastCharacter) && this.WhitespaceRegExp.test(newCharacter)) {\n            return [token + newCharacter];\n        }\n        else if (this.WhitespaceRegExp.test(lastCharacter) || this.WhitespaceRegExp.test(newCharacter)) {\n            return [token, newCharacter];\n        }\n        else if (!(this.WordDividerRegExp.test(lastCharacter) || this.WordDividerRegExp.test(newCharacter))) {\n            return [token + newCharacter];\n        }\n        else if (lastCharacter === newCharacter) {\n            return [token + newCharacter];\n        }\n        else {\n            return [token, newCharacter];\n        }\n    };\n    return Tokenizer;\n}());\nexports.Tokenizer = Tokenizer;\n//# sourceMappingURL=tokenizer.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/utils/tokenizer.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/wrappers/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/wrappers/index.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./singleLineWrapper */ \"./node_modules/svg-typewriter/build/src/wrappers/singleLineWrapper.js\"));\n__export(__webpack_require__(/*! ./wrapper */ \"./node_modules/svg-typewriter/build/src/wrappers/wrapper.js\"));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/wrappers/index.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/wrappers/singleLineWrapper.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/wrappers/singleLineWrapper.js ***!
  \*****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar wrapper_1 = __webpack_require__(/*! ./wrapper */ \"./node_modules/svg-typewriter/build/src/wrappers/wrapper.js\");\nvar SingleLineWrapper = (function (_super) {\n    __extends(SingleLineWrapper, _super);\n    function SingleLineWrapper() {\n        return _super.apply(this, arguments) || this;\n    }\n    SingleLineWrapper.prototype.wrap = function (text, measurer, width, height) {\n        var _this = this;\n        if (height === void 0) { height = Infinity; }\n        var lines = text.split(\"\\n\");\n        if (lines.length > 1) {\n            throw new Error(\"SingleLineWrapper is designed to work only on single line\");\n        }\n        var wrapFN = function (w) { return _super.prototype.wrap.call(_this, text, measurer, w, height); };\n        var result = wrapFN(width);\n        if (result.noLines < 2) {\n            return result;\n        }\n        var left = 0;\n        var right = width;\n        for (var i = 0; i < SingleLineWrapper.NO_WRAP_ITERATIONS && right > left; ++i) {\n            var currentWidth = (right + left) / 2;\n            var currentResult = wrapFN(currentWidth);\n            if (this.areSameResults(result, currentResult)) {\n                right = currentWidth;\n                result = currentResult;\n            }\n            else {\n                left = currentWidth;\n            }\n        }\n        return result;\n    };\n    SingleLineWrapper.prototype.areSameResults = function (one, two) {\n        return one.noLines === two.noLines && one.truncatedText === two.truncatedText;\n    };\n    return SingleLineWrapper;\n}(wrapper_1.Wrapper));\nSingleLineWrapper.NO_WRAP_ITERATIONS = 5;\nexports.SingleLineWrapper = SingleLineWrapper;\n//# sourceMappingURL=singleLineWrapper.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/wrappers/singleLineWrapper.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/wrappers/wrapper.js":
/*!*******************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/wrappers/wrapper.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/svg-typewriter/build/src/utils/index.js\");\nvar Wrapper = (function () {\n    function Wrapper() {\n        this.maxLines(Infinity);\n        this.textTrimming(\"ellipsis\");\n        this.allowBreakingWords(true);\n        this._tokenizer = new Utils.Tokenizer();\n        this._breakingCharacter = \"-\";\n    }\n    Wrapper.prototype.maxLines = function (noLines) {\n        if (noLines == null) {\n            return this._maxLines;\n        }\n        else {\n            this._maxLines = noLines;\n            return this;\n        }\n    };\n    Wrapper.prototype.textTrimming = function (option) {\n        if (option == null) {\n            return this._textTrimming;\n        }\n        else {\n            if (option !== \"ellipsis\" && option !== \"none\") {\n                throw new Error(option + \" - unsupported text trimming option.\");\n            }\n            this._textTrimming = option;\n            return this;\n        }\n    };\n    Wrapper.prototype.allowBreakingWords = function (allow) {\n        if (allow == null) {\n            return this._allowBreakingWords;\n        }\n        else {\n            this._allowBreakingWords = allow;\n            return this;\n        }\n    };\n    Wrapper.prototype.wrap = function (text, measurer, width, height) {\n        var _this = this;\n        if (height === void 0) { height = Infinity; }\n        var initialWrappingResult = {\n            noBrokeWords: 0,\n            noLines: 0,\n            originalText: text,\n            truncatedText: \"\",\n            wrappedText: \"\",\n        };\n        var state = {\n            availableLines: Math.min(Math.floor(height / measurer.measure().height), this._maxLines),\n            availableWidth: width,\n            canFitText: true,\n            currentLine: \"\",\n            wrapping: initialWrappingResult,\n        };\n        var lines = text.split(\"\\n\");\n        return lines.reduce(function (s, line, i) {\n            return _this.breakLineToFitWidth(s, line, i !== lines.length - 1, measurer);\n        }, state).wrapping;\n    };\n    Wrapper.prototype.breakLineToFitWidth = function (state, line, hasNextLine, measurer) {\n        var _this = this;\n        if (!state.canFitText && state.wrapping.truncatedText !== \"\") {\n            state.wrapping.truncatedText += \"\\n\";\n        }\n        var tokens = this._tokenizer.tokenize(line);\n        state = tokens.reduce(function (s, token) {\n            return _this.wrapNextToken(token, s, measurer);\n        }, state);\n        var wrappedText = Utils.StringMethods.trimEnd(state.currentLine);\n        state.wrapping.noLines += +(wrappedText !== \"\");\n        if (state.wrapping.noLines === state.availableLines && this._textTrimming !== \"none\" && hasNextLine) {\n            var ellipsisResult = this.addEllipsis(wrappedText, state.availableWidth, measurer);\n            state.wrapping.wrappedText += ellipsisResult.wrappedToken;\n            state.wrapping.truncatedText += ellipsisResult.remainingToken;\n            state.canFitText = false;\n        }\n        else {\n            state.wrapping.wrappedText += wrappedText;\n        }\n        state.currentLine = \"\\n\";\n        return state;\n    };\n    Wrapper.prototype.canFitToken = function (token, width, measurer) {\n        var _this = this;\n        var possibleBreaks = this._allowBreakingWords ?\n            token.split(\"\").map(function (c, i) { return (i !== token.length - 1) ? c + _this._breakingCharacter : c; })\n            : [token];\n        return (measurer.measure(token).width <= width) || possibleBreaks.every(function (c) { return measurer.measure(c).width <= width; });\n    };\n    Wrapper.prototype.addEllipsis = function (line, width, measurer) {\n        if (this._textTrimming === \"none\") {\n            return {\n                remainingToken: \"\",\n                wrappedToken: line,\n            };\n        }\n        var truncatedLine = line.substring(0).trim();\n        var lineWidth = measurer.measure(truncatedLine).width;\n        var ellipsesWidth = measurer.measure(\"...\").width;\n        var prefix = (line.length > 0 && line[0] === \"\\n\") ? \"\\n\" : \"\";\n        if (width <= ellipsesWidth) {\n            var periodWidth = ellipsesWidth / 3;\n            var numPeriodsThatFit = Math.floor(width / periodWidth);\n            return {\n                remainingToken: line,\n                wrappedToken: prefix + \"...\".substr(0, numPeriodsThatFit),\n            };\n        }\n        while (lineWidth + ellipsesWidth > width) {\n            truncatedLine = Utils.StringMethods.trimEnd(truncatedLine.substr(0, truncatedLine.length - 1));\n            lineWidth = measurer.measure(truncatedLine).width;\n        }\n        return {\n            remainingToken: Utils.StringMethods.trimEnd(line.substring(truncatedLine.length), \"-\").trim(),\n            wrappedToken: prefix + truncatedLine + \"...\",\n        };\n    };\n    Wrapper.prototype.wrapNextToken = function (token, state, measurer) {\n        if (!state.canFitText ||\n            state.availableLines === state.wrapping.noLines ||\n            !this.canFitToken(token, state.availableWidth, measurer)) {\n            return this.finishWrapping(token, state, measurer);\n        }\n        var remainingToken = token;\n        while (remainingToken) {\n            var result = this.breakTokenToFitInWidth(remainingToken, state.currentLine, state.availableWidth, measurer);\n            state.currentLine = result.line;\n            remainingToken = result.remainingToken;\n            if (remainingToken != null) {\n                state.wrapping.noBrokeWords += +result.breakWord;\n                ++state.wrapping.noLines;\n                if (state.availableLines === state.wrapping.noLines) {\n                    var ellipsisResult = this.addEllipsis(state.currentLine, state.availableWidth, measurer);\n                    state.wrapping.wrappedText += ellipsisResult.wrappedToken;\n                    state.wrapping.truncatedText += ellipsisResult.remainingToken + remainingToken;\n                    state.currentLine = \"\\n\";\n                    return state;\n                }\n                else {\n                    state.wrapping.wrappedText += Utils.StringMethods.trimEnd(state.currentLine);\n                    state.currentLine = \"\\n\";\n                }\n            }\n        }\n        return state;\n    };\n    Wrapper.prototype.finishWrapping = function (token, state, measurer) {\n        // Token is really long, but we have a space to put part of the word.\n        if (state.canFitText &&\n            state.availableLines !== state.wrapping.noLines &&\n            this._allowBreakingWords &&\n            this._textTrimming !== \"none\") {\n            var res = this.addEllipsis(state.currentLine + token, state.availableWidth, measurer);\n            state.wrapping.wrappedText += res.wrappedToken;\n            state.wrapping.truncatedText += res.remainingToken;\n            state.wrapping.noBrokeWords += +(res.remainingToken.length < token.length);\n            state.wrapping.noLines += +(res.wrappedToken.length > 0);\n            state.currentLine = \"\";\n        }\n        else {\n            state.wrapping.truncatedText += token;\n        }\n        state.canFitText = false;\n        return state;\n    };\n    /**\n     * Breaks single token to fit current line.\n     * If token contains only whitespaces then they will not be populated to next line.\n     */\n    Wrapper.prototype.breakTokenToFitInWidth = function (token, line, availableWidth, measurer, breakingCharacter) {\n        if (breakingCharacter === void 0) { breakingCharacter = this._breakingCharacter; }\n        if (measurer.measure(line + token).width <= availableWidth) {\n            return {\n                breakWord: false,\n                line: line + token,\n                remainingToken: null,\n            };\n        }\n        if (token.trim() === \"\") {\n            return {\n                breakWord: false,\n                line: line,\n                remainingToken: \"\",\n            };\n        }\n        if (!this._allowBreakingWords) {\n            return {\n                breakWord: false,\n                line: line,\n                remainingToken: token,\n            };\n        }\n        var fitTokenLength = 0;\n        while (fitTokenLength < token.length) {\n            if (measurer.measure(line + token.substring(0, fitTokenLength + 1) + breakingCharacter).width <= availableWidth) {\n                ++fitTokenLength;\n            }\n            else {\n                break;\n            }\n        }\n        var suffix = \"\";\n        if (fitTokenLength > 0) {\n            suffix = breakingCharacter;\n        }\n        return {\n            breakWord: fitTokenLength > 0,\n            line: line + token.substring(0, fitTokenLength) + suffix,\n            remainingToken: token.substring(fitTokenLength),\n        };\n    };\n    return Wrapper;\n}());\nexports.Wrapper = Wrapper;\n//# sourceMappingURL=wrapper.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/wrappers/wrapper.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/writers/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/writers/index.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(__webpack_require__(/*! ./writer */ \"./node_modules/svg-typewriter/build/src/writers/writer.js\"));\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/writers/index.js?");

/***/ }),

/***/ "./node_modules/svg-typewriter/build/src/writers/writer.js":
/*!*****************************************************************!*\
  !*** ./node_modules/svg-typewriter/build/src/writers/writer.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/**\n * Copyright 2017-present Palantir Technologies, Inc. All rights reserved.\n * Licensed under the MIT License (the \"License\"); you may obtain a copy of the\n * license at https://github.com/palantir/svg-typewriter/blob/develop/LICENSE\n */\n\nvar d3 = __webpack_require__(/*! d3 */ \"./node_modules/d3/d3.js\");\nvar Utils = __webpack_require__(/*! ../utils */ \"./node_modules/svg-typewriter/build/src/utils/index.js\");\nvar Writer = (function () {\n    function Writer(measurer, wrapper) {\n        this._writerID = Writer.nextID++;\n        this._elementID = 0;\n        this.measurer(measurer);\n        if (wrapper) {\n            this.wrapper(wrapper);\n        }\n        this.addTitleElement(false);\n    }\n    Writer.prototype.measurer = function (newMeasurer) {\n        this._measurer = newMeasurer;\n        return this;\n    };\n    Writer.prototype.wrapper = function (newWrapper) {\n        this._wrapper = newWrapper;\n        return this;\n    };\n    Writer.prototype.addTitleElement = function (add) {\n        this._addTitleElement = add;\n        return this;\n    };\n    Writer.prototype.write = function (text, width, height, options) {\n        if (Writer.SupportedRotation.indexOf(options.textRotation) === -1) {\n            throw new Error(\"unsupported rotation - \" + options.textRotation);\n        }\n        var orientHorizontally = Math.abs(Math.abs(options.textRotation) - 90) > 45;\n        var primaryDimension = orientHorizontally ? width : height;\n        var secondaryDimension = orientHorizontally ? height : width;\n        var textContainer = options.selection.append(\"g\").classed(\"text-container\", true);\n        if (this._addTitleElement) {\n            textContainer.append(\"title\").text(text);\n        }\n        var normalizedText = Utils.StringMethods.combineWhitespace(text);\n        var textArea = textContainer.append(\"g\").classed(\"text-area\", true);\n        var wrappedText = this._wrapper ?\n            this._wrapper.wrap(normalizedText, this._measurer, primaryDimension, secondaryDimension).wrappedText : normalizedText;\n        this.writeText(wrappedText, textArea, primaryDimension, secondaryDimension, options.xAlign, options.yAlign);\n        var xForm = d3.transform(\"\");\n        var xForm2 = d3.transform(\"\");\n        xForm.rotate = options.textRotation;\n        switch (options.textRotation) {\n            case 90:\n                xForm.translate = [width, 0];\n                xForm2.rotate = -90;\n                xForm2.translate = [0, 200];\n                break;\n            case -90:\n                xForm.translate = [0, height];\n                xForm2.rotate = 90;\n                xForm2.translate = [width, 0];\n                break;\n            case 180:\n                xForm.translate = [width, height];\n                xForm2.translate = [width, height];\n                xForm2.rotate = 180;\n                break;\n            default:\n                break;\n        }\n        textArea.attr(\"transform\", xForm.toString());\n        this.addClipPath(textContainer, xForm2);\n        if (options.animator) {\n            options.animator.animate(textContainer);\n        }\n    };\n    Writer.prototype.writeLine = function (line, g, width, xAlign, yOffset) {\n        var textEl = g.append(\"text\");\n        textEl.text(line);\n        var xOffset = width * Writer.XOffsetFactor[xAlign];\n        var anchor = Writer.AnchorConverter[xAlign];\n        textEl.attr(\"text-anchor\", anchor).classed(\"text-line\", true);\n        Utils.DOM.transform(textEl, xOffset, yOffset).attr(\"y\", \"-0.25em\");\n    };\n    Writer.prototype.writeText = function (text, writingArea, width, height, xAlign, yAlign) {\n        var _this = this;\n        var lines = text.split(\"\\n\");\n        var lineHeight = this._measurer.measure().height;\n        var yOffset = Writer.YOffsetFactor[yAlign] * (height - lines.length * lineHeight);\n        lines.forEach(function (line, i) {\n            _this.writeLine(line, writingArea, width, xAlign, (i + 1) * lineHeight + yOffset);\n        });\n    };\n    Writer.prototype.addClipPath = function (selection, _transform) {\n        var elementID = this._elementID++;\n        var prefix = /MSIE [5-9]/.test(navigator.userAgent) ? \"\" : document.location.href;\n        prefix = prefix.split(\"#\")[0]; // To fix cases where an anchor tag was used\n        var clipPathID = \"clipPath\" + this._writerID + \"_\" + elementID;\n        selection.select(\".text-area\").attr(\"clip-path\", \"url(\\\"\" + prefix + \"#\" + clipPathID + \"\\\")\");\n        var clipPathParent = selection.append(\"clipPath\").attr(\"id\", clipPathID);\n        var bboxAttrs = Utils.DOM.getBBox(selection.select(\".text-area\"));\n        var box = clipPathParent.append(\"rect\");\n        box.classed(\"clip-rect\", true).attr({\n            height: bboxAttrs.height,\n            width: bboxAttrs.width,\n            x: bboxAttrs.x,\n            y: bboxAttrs.y,\n        });\n    };\n    return Writer;\n}());\nWriter.nextID = 0;\nWriter.SupportedRotation = [-90, 0, 180, 90];\nWriter.AnchorConverter = {\n    center: \"middle\",\n    left: \"start\",\n    right: \"end\",\n};\nWriter.XOffsetFactor = {\n    center: 0.5,\n    left: 0,\n    right: 1,\n};\nWriter.YOffsetFactor = {\n    bottom: 1,\n    center: 0.5,\n    top: 0,\n};\nexports.Writer = Writer;\n//# sourceMappingURL=writer.js.map\n\n//# sourceURL=webpack:///./node_modules/svg-typewriter/build/src/writers/writer.js?");

/***/ }),

/***/ "./public/mocks/data.js":
/*!******************************!*\
  !*** ./public/mocks/data.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_exports) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.letterFrequency = void 0;\n  var letterFrequency = [{\n    letter: \"A\",\n    frequency: 0.08167\n  }, {\n    letter: \"B\",\n    frequency: 0.01492\n  }, {\n    letter: \"C\",\n    frequency: 0.02782\n  }, {\n    letter: \"D\",\n    frequency: 0.04253\n  }, {\n    letter: \"E\",\n    frequency: 0.12702\n  }, {\n    letter: \"F\",\n    frequency: 0.02288\n  }, {\n    letter: \"G\",\n    frequency: 0.02015\n  }, {\n    letter: \"H\",\n    frequency: 0.06094\n  }, {\n    letter: \"I\",\n    frequency: 0.06966\n  }, {\n    letter: \"J\",\n    frequency: 0.00153\n  }, {\n    letter: \"K\",\n    frequency: 0.00772\n  }, {\n    letter: \"L\",\n    frequency: 0.04025\n  }, {\n    letter: \"M\",\n    frequency: 0.02406\n  }, {\n    letter: \"N\",\n    frequency: 0.06749\n  }, {\n    letter: \"O\",\n    frequency: 0.07507\n  }, {\n    letter: \"P\",\n    frequency: 0.01929\n  }, {\n    letter: \"Q\",\n    frequency: 0.00095\n  }, {\n    letter: \"R\",\n    frequency: 0.05987\n  }, {\n    letter: \"S\",\n    frequency: 0.06327\n  }, {\n    letter: \"T\",\n    frequency: 0.09056\n  }, {\n    letter: \"U\",\n    frequency: 0.02758\n  }, {\n    letter: \"V\",\n    frequency: 0.00978\n  }, {\n    letter: \"W\",\n    frequency: 0.0236\n  }, {\n    letter: \"X\",\n    frequency: 0.0015\n  }, {\n    letter: \"Y\",\n    frequency: 0.01974\n  }, {\n    letter: \"Z\",\n    frequency: 0.00074\n  }];\n  _exports.letterFrequency = letterFrequency;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack:///./public/mocks/data.js?");

/***/ }),

/***/ "./src/css/style.css":
/*!***************************!*\
  !*** ./src/css/style.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var api = __webpack_require__(/*! ../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/css/style.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.i, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};\n\n//# sourceURL=webpack:///./src/css/style.css?");

/***/ }),

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports, __webpack_require__(/*! ../../public/mocks/data.js */ \"./public/mocks/data.js\"), __webpack_require__(/*! plottable */ \"./node_modules/plottable/build/src/index.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (_exports, _data, _plottable) {\n  \"use strict\";\n\n  Object.defineProperty(_exports, \"__esModule\", {\n    value: true\n  });\n  _exports.plottableBarChart = void 0;\n\n  __webpack_require__(/*! ../css/style.css */ \"./src/css/style.css\");\n\n  var plottableBarChart = function plottableBarChart() {\n    var xScale = new _plottable.Scales.Category();\n    var yScale = new _plottable.Scales.Linear();\n    var xAxis = new _plottable.Axes.Category(xScale, \"bottom\");\n    var yAxis = new _plottable.Axes.Numeric(yScale, \"left\");\n    var plot = new _plottable.Plots.Bar();\n\n    var letter = function letter(d) {\n      return d.letter;\n    };\n\n    var frequency = function frequency(d) {\n      return d.frequency;\n    };\n\n    plot.x(letter, xScale);\n    plot.y(frequency, yScale);\n    var dataset = new _plottable.Dataset(_data.letterFrequency);\n    plot.addDataset(dataset);\n    var chart = new _plottable.Components.Table([[yAxis, plot], [null, xAxis]]);\n    chart.renderTo(\"#plottable-container\");\n  };\n\n  _exports.plottableBarChart = plottableBarChart;\n\n  (function () {\n    plottableBarChart();\n  })();\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n//# sourceURL=webpack:///./src/js/app.js?");

/***/ })

/******/ });